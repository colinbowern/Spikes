<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.SqlServer.Dmf</name>
  </assembly>
  <members>
    <member name="T:Microsoft.SqlServer.Management.Dmf.AdapterAlreadyExistsException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.AdapterAlreadyExistsException" /> class is an exception that is raised when an attempt is made to retrieve a collection that is not available.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.AdapterAlreadyExistsException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.AdapterAlreadyExistsException" /> class with a system-supplied message that describes the error.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.AdapterAlreadyExistsException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.AdapterAlreadyExistsException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.AdapterAlreadyExistsException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.AdapterAlreadyExistsException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.AdapterAlreadyExistsException.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.AdapterAlreadyExistsException" /> class that has the specified interface and type.</summary>
      <param name="interfaceName">A <see cref="T:System.String" /> value that specifies the name of the referenced interface.</param>
      <param name="typeName">A <see cref="T:System.String" /> value that specifies the type of the referenced object.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.AdapterAlreadyExistsException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.AdapterAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.AdapterAlreadyExistsException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.AdapterAlreadyExistsException.Interface">
      <summary>Gets the interface that is associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name of the interface that is associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.AdapterAlreadyExistsException.Message">
      <summary>Gets the system-supplied message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the system-supplied message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.AdapterAlreadyExistsException.ObjectType">
      <summary>Gets the type of object that is associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the type of object that is associated with the exception.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.AdapterWrongNumberOfArgumentsException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.AdapterWrongNumberOfArgumentsException" /> class is an exception that is raised when the adapter receives the wrong number of arguments.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.AdapterWrongNumberOfArgumentsException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.AdapterWrongNumberOfArgumentsException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.AdapterWrongNumberOfArgumentsException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.AdapterWrongNumberOfArgumentsException" /> class that has the specified message text.</summary>
      <param name="adapter">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.AdapterWrongNumberOfArgumentsException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.AdapterWrongNumberOfArgumentsException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.AdapterWrongNumberOfArgumentsException.Adapter">
      <summary>Gets the adapter that is associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name of the adapter that is associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.AdapterWrongNumberOfArgumentsException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.AdapterWrongNumberOfArgumentsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.AdapterWrongNumberOfArgumentsException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.AdHocPolicyEvaluationMode">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.AdHocPolicyEvaluationMode" /> enumeration contains values that specify the method that is used to evaluate the policy.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.AdHocPolicyEvaluationMode.Check">
      <summary>Immediately runs the policy in check mode.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.AdHocPolicyEvaluationMode.Configure">
      <summary>Reconfigures the targets to comply with the policy.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.AdHocPolicyEvaluationMode.CheckSqlScriptAsProxy">
      <summary>Evaluates the policy using the Check SQL Script Proxy mode.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.AssemblyAlreadyRegisteredException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.AssemblyAlreadyRegistered" /> class is an exception that is raised when an the adapter receives the wrong number of arguments.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.AssemblyAlreadyRegisteredException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.AssemblyAlreadyRegisteredException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.AssemblyAlreadyRegisteredException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.AssemblyAlreadyRegisteredException" /> class that has the specified message text.</summary>
      <param name="assemblyName">A <see cref="T:System.String" /> value that specifies the name of the asssembly.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.AssemblyAlreadyRegisteredException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.AssemblyAlreadyRegisteredException.Assembly">
      <summary>Gets the assembly that is associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the assembly that is associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.AssemblyAlreadyRegisteredException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.AssemblyAlreadyRegisteredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates the parameters with information required to serialize the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that contains information required to serialize or deserialize an object.</param>
      <param name="context">An <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that describes the source and destination of a serialized stream. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.AssemblyAlreadyRegisteredException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.AutomatedPolicyEvaluationMode">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.AutomatedPolicyEvaluationMode" /> enumeration contains values that specify the Policy-Based Management automated policy evaluation modes.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.AutomatedPolicyEvaluationMode.None">
      <summary>There is no policy checking.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.AutomatedPolicyEvaluationMode.Enforce">
      <summary>This mode uses DDL triggers to evaluate and prevent policy violations.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.AutomatedPolicyEvaluationMode.CheckOnChanges">
      <summary>This modes uses event notification to evaluate policies when changes are made.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.AutomatedPolicyEvaluationMode.CheckOnSchedule">
      <summary>This mode uses SQL Server Agent job to schedule policy evaluations.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.BadEventDataException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.BadEventDataException" /> class is an exception that is raised when the event data is incorrect.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.BadEventDataException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.BadEventDataException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.BadEventDataException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.BadEventDataException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.BadEventDataException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.BadEventDataException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.BadEventDataException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.BadEventDataException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates the parameters with information required to serialize the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that contains information required to serialize or deserialize an object.</param>
      <param name="context">An <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that describes the source and destination of a serialized stream. </param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.BadExpressionTreeException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.BadExpressionTreeException" /> class is an exception that is raised when the expression tree is incorrect.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.BadExpressionTreeException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.BadExpressionTreeException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.BadExpressionTreeException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.BadExpressionTreeException" /> class that has the specified reason.</summary>
      <param name="reason">A <see cref="T:System.String" /> value that specifies the reason that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.BadExpressionTreeException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.BadExpressionTreeException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.BadExpressionTreeException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.BadExpressionTreeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.BadExpressionTreeException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.BadExpressionTreeException.Message">
      <summary>Gets the system-generated message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.BadExpressionTreeException.Reason">
      <summary>Gets the reason for the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the reason for exception.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.Condition">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.Condition" /> object represents a policy-based management condition.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.#ctor(Microsoft.SqlServer.Management.Dmf.PolicyStore,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> class.</summary>
      <param name="parent">A <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> object value that specifies the policy store to which the condition belongs.</param>
      <param name="name">A <see cref="T:System.String" /> value that specifies the name of the condition.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.Alter">
      <summary>Updates any <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition" /> object property changes on the instance of SQL Server.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.Create">
      <summary>Creates a policy on the instance of SQL Server with the given name, and as defined by the <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition" /> object.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Condition.CreateDate">
      <summary>Gets the date and time when the condition was created.</summary>
      <returns>A <see cref="T:System.DateTime" /> value that contains the date and time when the condition was created.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Condition.CreatedBy">
      <summary>Gets the authentication credentials of the user who created the condition.</summary>
      <returns>A <see cref="T:System.String" /> value that contains the authentication credentials of the user who created the condition.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Condition.DateModified">
      <summary>Gets the date and time when the condition was last modified.</summary>
      <returns>A <see cref="T:System.DateTime" /> value that contains the date and time when the condition was last modified.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Condition.Description">
      <summary>Gets or sets the descriptions of the condition.</summary>
      <returns>A <see cref="T:System.String" /> value that contains a description of the condition.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.Discover(Microsoft.SqlServer.Management.Sdk.Sfc.ISfcDependencyDiscoveryObjectSink)">
      <summary>Discovers the dependencies of the condition.</summary>
      <param name="sink">An <see cref="T:Microsoft.SqlServer.Management.Sfc.ISfcDependencyDiscoveryObjectSink" /> that specifies the dependency sink interface.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.Drop">
      <summary>Removes the condition from the instance of SQL Server.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.EnumDependentPolicies">
      <summary>Returns a collection of polices that are dependent on the condition.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCollection" /> object that contains the policies that are dependent on the condition.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Condition.ExpressionNode">
      <summary>Gets or sets the type of expression that the condition uses.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionMode" /> object value that specifies the type of expression that the condition uses.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Condition.Facet">
      <summary>Gets or sets the facet that is associated with the condition.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the facet that is associated with the condition.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.GetObjectFactory">
      <summary>Gets the object factory for the object.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Sfc.SfcObjectFactory" /> that contains object factory for the condition object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.GetSupportedEvaluationMode">
      <summary>Gets the evaluation mode for the condition.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Dmf.AutomatedPolicyEvalutationMode" /> object that specifies the execution mode for the condition.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Condition.HasScript">
      <summary>Gets the <see cref="T:System.Boolean" /> value that specifies whether the condition has a script.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the condition has a script.If True, the condition has a script. Otherwise, False.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Condition.ID">
      <summary>Gets the ID value that uniquely identifies the condition.</summary>
      <returns>An <see cref="T:System.Int32" /> value that uniquely identifies the condition.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Condition.IdentityKey">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition.Key" /> of the condition object.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition.Key" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Condition.IsEnumerable">
      <summary>Gets the <see cref="T:System.Boolean" /> value that specifies whether the condition is enumerable.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the condition is enumerable.If True, the condition is enumerable. Otherwise, False.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Condition.IsSystemObject">
      <summary>Determines whether the condition is a <see cref="T:System.Object" />.</summary>
      <returns>A Boolean value that returns True if the condition is a <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcRenamable#Rename(Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey)">
      <summary>Renames the condition identified by the specified SfcKey.</summary>
      <param name="key">A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcRenamable#ScriptRename(Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey)">
      <summary>Renames the script identified by the SfcKey.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcScript" /> object.</returns>
      <param name="key">A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcValidate#Validate(System.String,System.Object[])">
      <summary>Validates a Policy-based Management condition against a specified object using a specified validation method.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Sdk.Sfc.ValidationState" /> object.</returns>
      <param name="validationMethod">A <see cref="T:System.String" /> value that specifies the validation method.</param>
      <param name="arguments">A <see cref="T:System.Object" /> used by the validation method.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Condition.ModifiedBy">
      <summary>Gets the authentication credentials of the user who last modified the condition.</summary>
      <returns>A <see cref="T:System.String" /> value that contains the authentication credentials of the user who last modified the condition.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Condition.Name">
      <summary>Gets the name of the facet.</summary>
      <returns>A <see cref="T:System.Name" /> value that specifies the name of the facet.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Condition.Parent">
      <summary>Gets or sets the object that is the parent of the referenced object.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" /> object that is the parent of the <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition" /> object. </returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.Rename(System.String)">
      <summary>Renames the condition to the specified name.</summary>
      <param name="name">A <see cref="T:System.String" /> value that specifies the new name of the condition.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.ScriptAlter">
      <summary>Alters the <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcScript" /> object.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcScript" /> object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.ScriptCreate">
      <summary>Creates an <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcScript" /> object.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcScript" /> object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.ScriptDrop">
      <summary>Drops the <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcScript" /> object.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcScript" /> object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.Validate(System.String)">
      <summary>Validates the condition using the given mode.</summary>
      <param name="mode">A <see cref="T:System.String" /> value that specifies the mode used to validate the condition.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.Condition.Key">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition.Key" /> class represents the key that identifies the <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.Key.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition.Key" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.Key.#ctor(Microsoft.SqlServer.Management.Dmf.Condition.Key)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition.Key" /> class based on the specified key.</summary>
      <param name="other">A <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition.Key" /> value that specifies the other key.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.Key.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition.Key" /> class that has the specified name.</summary>
      <param name="name">A <see cref="T:System.String" /> value that specifies the name of the key.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.Key.Equals(Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey)">
      <summary>Determines whether the two specified objects are equal. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the specified key is equal to the referenced object key. If True, the key values are equal. Otherwise, False.</returns>
      <param name="key">A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey" /> value that specifies one object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.Key.Equals(System.Object)">
      <summary>Determines whether the specified object key is equal to the referenced object key. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the specified key is objectto the referenced object key. If true, the key values are equal. Otherwise, false.</returns>
      <param name="obj">A <see cref="T:System.Object" /> value that specifies the object to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.Key.Equals(System.Object,System.Object)">
      <summary>Determines whether the specified object key is equal to the referenced object key.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the specified key is equal to the referenced object key. If True, the key values are equal. Otherwise, False.</returns>
      <param name="obj1">A <see cref="T:System.Object" /> value that specifies one object.</param>
      <param name="obj2">A <see cref="T:System.Object" /> value that specifies another object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.Key.GetHashCode">
      <summary>Gets the hash code for the object.</summary>
      <returns>A <see cref="T:System.Int32" /> value that specifies the hash code.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.Key.GetUrnFragment">
      <summary>Gets the unique resource name (URN) path partial string that represents the condition. </summary>
      <returns>A <see cref="T:System.String" /> value that contains the URN fragment.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Condition.Key.Name">
      <summary>Gets the name of the <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition" /> key.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name of the key value.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.Key.op_Equality(Microsoft.SqlServer.Management.Dmf.Condition.Key,Microsoft.SqlServer.Management.Dmf.Condition.Key)">
      <summary>Performs a Boolean equality operation to determine whether two Condition keys reference the same condition.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two condition keys are the same. Returns True if both parameters are null or reference the same condition. Otherwise, returns False.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition.Key" /> object representing one of the condition keys to compare.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition.Key" /> object representing the other condition keys to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.Key.op_Equality(Microsoft.SqlServer.Management.Dmf.Condition.Key,System.Object)">
      <summary>Performs a Boolean equality operation to determine whether two condition keys reference the same condition.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two condition keys are the same. Returns True if both parameters are null or reference the same condition. Otherwise, returns False.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition.Key" /> object representing one of the condition keys to compare.</param>
      <param name="obj">A <see cref="T:System.Object" /> object representing the other condition keys to compare. If the object does not reference a <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition.Key" />, the method returns False.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.Key.op_Equality(System.Object,Microsoft.SqlServer.Management.Dmf.Condition.Key)">
      <summary>Performs a Boolean equality operation to determine whether two condition keys reference the same condition.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two condition keys are the same. Returns True if both parameters are null or reference the same condition. Otherwise, returns False.</returns>
      <param name="obj">A <see cref="T:System.Object" /> object representing one of the condition keys to compare. If the object does not reference a <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition.Key" />, the method returns False.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition.Key" /> object representing the other condition keys to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.Key.op_Inequality(Microsoft.SqlServer.Management.Dmf.Condition.Key,Microsoft.SqlServer.Management.Dmf.Condition.Key)">
      <summary>Performs a Boolean equality operation to determine whether two condition keys reference the same condition.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two condition keys are the same. Returns True if the parameters reference separate condition, or if only one of the parameters is null. Otherwise, returns False.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition.Key" /> object representing one of the condition keys to compare.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition.Key" /> object representing the other condition to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.Key.op_Inequality(Microsoft.SqlServer.Management.Dmf.Condition.Key,System.Object)">
      <summary>Performs a Boolean equality operation to determine whether two condition keys reference the same condition.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two condition keys are the same. Returns True if the parameters reference separate condition, or if only one of the parameters is null. Otherwise, returns False.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition.Key" /> object representing one of the condition keys to compare.</param>
      <param name="obj">A <see cref="T:System.Object" /> object representing the other condition to compare. If the object does not reference a <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition.Key" />, the method returns True.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Condition.Key.op_Inequality(System.Object,Microsoft.SqlServer.Management.Dmf.Condition.Key)">
      <summary>Performs a Boolean equality operation to determine whether two condition keys reference the same condition.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two condition keys are the same. Returns True if the parameters reference separate condition, or if only one of the parameters is null. Otherwise, returns False.</returns>
      <param name="obj">A <see cref="T:System.Object" /> object representing one of the condition keys to compare. If the object does not reference a <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition.Key" />, the method returns True.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition.Key" /> object representing the other condition to compare.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ConditionCollection">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.ConditionCollection" /> class represents a collection of <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition" /> objects that represent all the conditions in the policy store. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConditionCollection.#ctor(Microsoft.SqlServer.Management.Dmf.PolicyStore)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ConditionCollection" /> class.</summary>
      <param name="parent">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" /> object value that specifies the parent of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ConditionCollection" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConditionCollection.Contains(System.String)">
      <summary>Verifies whether the specified string exists in the collection.  </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> which is true if the value is found in the collection, otherwise false.</returns>
      <param name="name">The <see cref="T:System.String" /> value that is to be found in the collection.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConditionCollection.Item(System.String)">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition" /> object in the collection by name.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition" /> object value that represents the condition that has the specified name.</returns>
      <param name="name">A <see cref="T:System.String" /> value that specifies the name of the <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition" /> object in the <see cref="T:Microsoft.SqlServer.Management.Dmf.ConditionCollection" /> collection.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ConditionExtender">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.ConditionExtender" /> class is an exception that is raised when the expression tree is incorrect.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConditionExtender.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ConditionExtender" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConditionExtender.#ctor(Microsoft.SqlServer.Management.Dmf.Condition)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ConditionExtender" /> class based on the specified condition.</summary>
      <param name="condition">A <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition" /> value that specifies the object that is extended.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConditionExtender.#ctor(Microsoft.SqlServer.Management.Dmf.PolicyStore,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ConditionExtender" /> class that has the specified policy store and name.</summary>
      <param name="policyStore">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" /> object that specifies the policy store that is associated with the condition.</param>
      <param name="name">A <see cref="T:System.String" /> value that specifies the name of the condition. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConditionExtender.DependentPolicies">
      <summary>Gets the policies that are dependent on the condition.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCollection" /> object value that specifies the policies that are dependent on the condition.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConditionExtender.ExpressionNode">
      <summary>Gets or sets the expression node for the condition.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" /> object value that specifies the expression node for the condition.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConditionExtender.FacetInfo">
      <summary>Gets or sets the facet information for the condition.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.FacetInfo" /> object value that specifies the facet information for the condition.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConditionExtender.Facets">
      <summary>Gets the collection that contains information about all the facets that are associated with the condition.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.FacetInfoCollection" /> object value that specifies all the facets that are associated with the condition.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConditionExtender.RootFacets">
      <summary>Gets the collection that contains information about all the root level facets that are associated with the condition.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.FacetInfoCollection" /> object value that specifies all the root level facets that are associated with the condition.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ConflictingPropertyValuesException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.ConflictingPropertyValuesException" /> class is an exception that is raised when property values conflict.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConflictingPropertyValuesException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ConflictingPropertyValuesException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConflictingPropertyValuesException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ConflictingPropertyValuesException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConflictingPropertyValuesException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ConflictingPropertyValuesException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConflictingPropertyValuesException.#ctor(System.String,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ConflictingPropertyValuesException" /> class that has the specified message text and inner exception.</summary>
      <param name="mode">A <see cref="T:System.String" /> value that specifies the mode that is associated with the policy.</param>
      <param name="type1">A <see cref="T:System.String" /> value that specifies the object type of the first property value. </param>
      <param name="name1">A <see cref="T:System.String" /> value that specifies the name of the first property value.</param>
      <param name="type2">A <see cref="T:System.String" /> value that specifies the object type of the second property value. </param>
      <param name="name2">A <see cref="T:System.String" /> value that specifies the name of the second property value.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConflictingPropertyValuesException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConflictingPropertyValuesException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ConflictingPropertyValuesException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConflictingPropertyValuesException.Message">
      <summary>Gets the system-generated message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConflictingPropertyValuesException.Mode">
      <summary>Gets the mode that is associated with the conflicting properties.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the mode that is associated with the conflicting properties.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConflictingPropertyValuesException.Name1">
      <summary>Gets the name of the first property.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name of the first property.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConflictingPropertyValuesException.Name2">
      <summary>Gets the name of the second property.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name of the second property.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConflictingPropertyValuesException.Type1">
      <summary>Gets the property type that is associated with the first property.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the type of the first property.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConflictingPropertyValuesException.Type2">
      <summary>Gets the type of the second property.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the type of the second property.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.ConnectionEvaluationHistory" /> object represents information about parent policy evaluation that is stored in the system catalogs. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Discover(Microsoft.SqlServer.Management.Sdk.Sfc.ISfcDependencyDiscoveryObjectSink)">
      <summary>Discovers dependencies in the evaluation history.</summary>
      <param name="sink">The <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcDependencyDiscoveryObjectSink" /> object value that holds the evaluation dependencies.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.EvaluationDetails">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetailCollection" /> object with the evaluation details for this collection.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetailCollection" /> object with the evaluation details for this collection.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.EvaluationId">
      <summary>Gets an <see cref="T:System.Int32" /> value that specifies an evaluation ID.</summary>
      <returns>An <see cref="T:System.Int32" /> value that specifies an evaluation ID.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Exception">
      <summary>Gets a <see cref="T:System.String" /> value that describes the exception, if one occured.</summary>
      <returns>A <see cref="T:System.String" /> value that contains the description of the exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.GetObjectFactory">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Management.Sfc.SfcObjectFactory" /> object that contains the object factory for the referenced object.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Sfc.SfcObjectFactory" /> object that contains the object factory for the referenced object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.ID">
      <summary>Gets the integer value that uniquely identifies the referenced evaluation history record.</summary>
      <returns>An <see cref="T:System.Int64" /> value that contains the ID value that uniquely identifies the evaluation history record.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.IdentityKey">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Management.Sfc.SfcKey" /> value that specifies the key value that identifies the evaluation history record.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Sfc.SfcKey" /> value that specifies the key value that identifies the evaluation history record.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Parent">
      <summary>Gets or sets the instance parent via the keychain.</summary>
      <returns>An object that represents the parent of the current instance.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Result">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the policy executed successfully.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the policy executed successfully.If True, the policy executed successfully. Otherwise, False.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.ServerInstance">
      <summary>Gets a <see cref="T:System.String" /> value that specifies the name of the instance of the Database Engine.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name of the instance of the Database Engine.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key" /> class represents the key that is used to identify the <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key.#ctor(Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key" /> class based on the specified key.</summary>
      <param name="other">A <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key" /> value that specifies the other key.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key.#ctor(System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key" /> class that has the specified ID value.</summary>
      <param name="id">A <see cref="T:System.Int64" /> value that specifies the ID value of the key.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key.Equals(Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey)">
      <summary>Determines whether the specified object is equal to the connection evaluation history represented by the <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key" /> object.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the specified object is the same as the current connection evaluation history. Otherwise, false.</returns>
      <param name="key">A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey" /> value that specifies the object to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the connection evaluation history represented by the <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key" /> object.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the specified object is the same as the current connection evaluation history. Otherwise, false.</returns>
      <param name="obj">A <see cref="T:System.Object" /> value that specifies the object to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key.Equals(System.Object,System.Object)">
      <summary>Determines whether the two specified objects are the same.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the two objects are the same. Otherwise, false.</returns>
      <param name="obj1">An <see cref="T:System.Object" /> that identifies the first object.</param>
      <param name="obj2">An <see cref="T:System.Object" /> that identifies the second object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key.GetHashCode">
      <summary>Gets the hash code for the object.</summary>
      <returns>A <see cref="T:System.Int32" /> value that specifies the hash code.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key.GetUrnFragment">
      <summary>Gets the unique resource name (URN) path partial string that represents the connection evaluation history. </summary>
      <returns>A <see cref="T:System.String" /> value that contains the URN fragment.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key.ID">
      <summary>Gets or sets the ID value of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory" /> key.</summary>
      <returns>A <see cref="T:System.Int64" /> value that specifies the ID value of the key.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key.op_Equality(Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key,Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key)">
      <summary>Determines whether the objects identified by two <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key" /> objects are the same.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are the same, otherwise false.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key" /> object that identifies the first object.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key" /> object that identifies the second object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key.op_Equality(Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key,System.Object)">
      <summary>Determines whether the object identified by a <see cref="T:System.Object" /> is the same as the object identified by a <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key" />.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are the same, otherwise false.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key" /> object that identifies the first object.</param>
      <param name="obj">An <see cref="T:System.Object" /> that identifies the second object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key.op_Equality(System.Object,Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key)">
      <summary>Determines whether the object identified by a <see cref="T:System.Object" /> is the same as the object identified by a <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key" />.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are the same, otherwise false.</returns>
      <param name="obj">An <see cref="T:System.Object" /> that identifies the first object..</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key" /> object that identifies the second object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key.op_Inequality(Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key,Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key)">
      <summary>Determines whether the objects identified by two <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key" /> objects are different.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are different, otherwise false.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key" /> object that identifies the first object.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key" /> object that identifies the second object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key.op_Inequality(Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key,System.Object)">
      <summary>Determines whether the object identified by a <see cref="T:System.Object" /> is the same as the object identified by a <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key" />.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are different, otherwise false.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key" /> object that identifies the first object.</param>
      <param name="obj">An <see cref="T:System.Object" /> that identifies the second object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key.op_Inequality(System.Object,Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key)">
      <summary>Determines whether the object identified by a <see cref="T:System.Object" /> is the same as the object identified by a <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key" />.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are different, otherwise false.</returns>
      <param name="obj">An <see cref="T:System.Object" /> that identifies the first object..</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory.Key" /> object that identifies the second object.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistoryCollection">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistoryCollection" /> class represents a collection of <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory" /> objects that represent all the connection evaluation histories that are in the evaluation history. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistoryCollection.#ctor(Microsoft.SqlServer.Management.Dmf.EvaluationHistory)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistoryCollection" /> class.</summary>
      <param name="parent">A <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory" /> object value that specifies the parent of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistoryCollection" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistoryCollection.Contains(System.Int32)">
      <summary>Verifies whether the an object with the specified ID value exists in the collection. </summary>
      <returns>A <see cref="T:System.Boolean" /> object value that specifies whether the referenced object is in the collection. If True, it exists in the collection. Otherwise, False.</returns>
      <param name="id">The <see cref="T:System.Int32" /> value that is to be found in the collection.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistoryCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory" /> object in the collection by id value.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory" /> object value that represents the connection evaluation history that has the specified id value.</returns>
      <param name="id">A <see cref="T:System.Int32" /> value that specifies the index id of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory" /> object in the <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistoryCollection" /> collection.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ConversionNotSupportedException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.ConversionNotSupportedException" /> class is an exception that is raised when an unsupported conversion is attempted on a type.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConversionNotSupportedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ConversionNotSupportedException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConversionNotSupportedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ConversionNotSupportedException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConversionNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConversionNotSupportedException.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ConversionNotSupportedException" /> class with the specified host and type.</summary>
      <param name="host">A <see cref="T:System.String" /> value that specifies the host that is associated with the conversion.</param>
      <param name="typeName">A <see cref="T:System.String" /> value that specifies the type that was being converted.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConversionNotSupportedException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ConversionNotSupportedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConversionNotSupportedException.Host">
      <summary>Gets the host object requesting the conversion.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the host requesting the conversion.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConversionNotSupportedException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ConversionNotSupportedException.TypeName">
      <summary>Gets the name of the type being converted.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name of the type being converted.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.DmfException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfException" /> class represents a generic policy-based management exception.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.DmfException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.DmfException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class that has the specified serialization information and streaming context.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies the serialization information that is associated with the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the streaming context that is associated with the exception. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.DmfException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.DmfException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.DmfException.DmfExceptionType">
      <summary>Gets the type of exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.DmfException.HelpLink">
      <summary>Gets the help link for the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the help link for the exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.DmfException.Init">
      <summary>Initializes the properties of a <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfException" /> object.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.DmfException.ProdVer">
      <summary>Gets the version of the product that generated the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the product version that generated the exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.DmfException.SetHelpContext(System.String)">
      <summary>Sets the help context for the exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfException" /> object initialized with the specified help context information.</returns>
      <param name="resource">A <see cref="T:System.String" /> value that specifies the resource file that contains the help context for the exception.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> enumeration contains values that are used to specify the policy-based management exception types.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.DmfException">
      <summary>A policy-based management exception occurred.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.AssemblyAlreadyRegistered">
      <summary>The assembly has already been registered.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.AdapterAlreadyExists">
      <summary>The adapter already exists.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.AdapterWrongNumberOfArguments">
      <summary>The adapter has the incorrect number of arguments.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.ExpressionTypeMistmatch">
      <summary>The expression types do not match.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.OperatorNotApplicable">
      <summary>The operator is not applicable.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.FunctionWrongArgumentType">
      <summary>The argument is not of the correct type.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.FunctionWrongArgumentsNumber">
      <summary>The wrong number of arguments have been supplied for the function.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.NullFacet">
      <summary>The facet is null.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.ExpressionSerialization">
      <summary>An error occurred during the serialization of an expression.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.TypeConversion">
      <summary>An error occurred during the type conversion.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.UnsupportedType">
      <summary>The type is unsupported.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.BadExpressionTree">
      <summary>The expression tree is incorrect.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.UnsupportedObjectType">
      <summary>The object type is not supported.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.ExpressionNodeNotConfigurable">
      <summary>The expression node is not configurable.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.ConversionNotSupported">
      <summary>The conversion is not supported.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.InvalidOperand">
      <summary>The operand is not valid.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.InvalidInOperator">
      <summary>The operator is not valid.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.DmfSecurity">
      <summary>A policy-based management security error occurred.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.ObjectValidation">
      <summary>An error occurred during object validation.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.ConflictingPropertyValues">
      <summary>The property values conflict.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.ObjectAlreadyExists">
      <summary>The object already exists.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.MissingObject">
      <summary>The object is missing.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.PolicyEvaluation">
      <summary>The policy evaluation failed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.MissingJobSchedule">
      <summary>The job schedule is missing.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.BadEventData">
      <summary>The event data is incorrect.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.FailedOperation">
      <summary>The operation failed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.ExpressionNodeNotConfigurableOperator">
      <summary>The expression node is not configurable by the specified operator.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.NonConfigurableReadOnlyProperty">
      <summary>The property is read-only.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.MissingProperty">
      <summary>The property is missing.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.NonRetrievableProperty">
      <summary>The property cannot be retrieved.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.MissingTypeFacetAssociation">
      <summary>The type facet association is missing.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.FunctionWrongReturnType">
      <summary>The return type is incorrect for the function.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.FunctionNoServer">
      <summary>No server is specified.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.FunctionNotASmoObject">
      <summary>The function is not an SMO object.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.FunctionBadDatePart">
      <summary>The date is incorrect.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.FunctionTooManyColumns">
      <summary>There are too many columns in the function.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.StringPropertyTooLong">
      <summary>The string is too long.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.TargetSetCountMismatch">
      <summary>The target set count mismatch.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.UnsupportedTargetSetForFacet">
      <summary>The target set is not supported for this facet.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.NoTargetSetEnabled">
      <summary>No target set is enabled.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.DmfExceptionType.RestartPending">
      <summary>A restart is pending. </summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.EvaluationDetail" /> object represents the evaluation information that is stored in the system catalogs about the parent policy for a given target. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail" /> class.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.EvaluationDate">
      <summary>Gets the date and time when the policy was evaluated.</summary>
      <returns>A <see cref="T:System.DateTime" /> value that contains the date and time when the policy was evaluated.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Exception">
      <summary>Gets the description of the exception, if one occurred.</summary>
      <returns>A <see cref="T:System.String" /> value that contains the description of the exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.GetObjectFactory">
      <summary>Gets the object factory for the referenced object.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Sfc.SfcObjectFactory" /> object that contains the object factory for the referenced object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.HistoryId">
      <summary>Gets the integer value that uniquely identifies the evaluation history record.</summary>
      <returns>An <see cref="T:System.Int32" /> value that contains the ID value that uniquely identifies the evaluation history record.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.ID">
      <summary>Gets the integer value that uniquely identifies the evaluation history detail record.</summary>
      <returns>An <see cref="T:System.Int64" /> value that contains the ID value that uniquely identifies the evaluation history detail record.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.IdentityKey">
      <summary>Gets the key value that identifies the evaluation history detail record.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Sfc.SfcKey" /> value that specifies the key value that identifies the evaluation history detail record.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Parent">
      <summary>Gets the parent of the referenced object.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory" /> object that  specifies the parent object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Result">
      <summary>Gets the <see cref="T:System.Boolean" /> value that determines whether the policy executed successfully.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the policy executed successfully.If True, the policy executed successfully. Otherwise, False.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.ResultDetail">
      <summary>Gets the result details from the policy evaluation.</summary>
      <returns>A <see cref="T:System.String" /> value that contains the description of the results.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.TargetQueryExpression">
      <summary>Gets or sets a <see cref="T:System.String" /> value that specifies the query that identifies the targets that the evaluation detail record applies to.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the query that identifies the targets that the evaluation detail record applies to.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key" /> class represents the key that is used to identify the <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key.#ctor(Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key" /> class based on the specified key.</summary>
      <param name="other">A <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key" /> value that specifies the other key.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key.#ctor(System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key" /> class that has the specified ID value.</summary>
      <param name="id">A <see cref="T:System.Int64" /> value that specifies the ID value of the key.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key.Equals(Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey)">
      <summary>Determines whether the specified object is equal to the exception detail represented by the <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key" /> object.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the specified object is the same as the current evaluation detail. Otherwise, false.</returns>
      <param name="key">A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcKe" />y value that identifies the object to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the exception detail represented by the <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key" /> object.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the specified object is the same as the current evaluation detail. Otherwise, false.</returns>
      <param name="obj">A <see cref="T:System.Object" /> value that identifies the object to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key.Equals(System.Object,System.Object)">
      <summary>Determines whether the two specified objects are the same.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the two objects are the same. Otherwise, false.</returns>
      <param name="obj1">An <see cref="T:System.Object" /> that identifies the first object.</param>
      <param name="obj2">An <see cref="T:System.Object" /> that identifies the second object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key.GetHashCode">
      <summary>Gets the hash code for the object.</summary>
      <returns>A <see cref="T:System.Int32" /> value that specifies the hash code.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key.GetUrnFragment">
      <summary>Gets the unique resource name (URN) path partial string that represents the evaluation detail. </summary>
      <returns>A <see cref="T:System.String" /> value that contains the URN fragment.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key.ID">
      <summary>Gets or sets the ID value of the <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail" /> key.</summary>
      <returns>A <see cref="T:System.Int64" /> value that specifies the ID value of the key.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key.op_Equality(Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key,Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key)">
      <summary>Determines whether the objects identified by two <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key" /> objects are the same.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are the same, otherwise false.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key" /> object that identifies the first object.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key" /> object that identifies the second object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key.op_Equality(Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key,System.Object)">
      <summary>Determines whether the object identified by a <see cref="T:System.Object" /> is the same as the object identified by a <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key" />.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are the same, otherwise false.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key" /> object that identifies the first object.</param>
      <param name="obj">A <see cref="T:System.Object" /> object that identifies the second object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key.op_Equality(System.Object,Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key)">
      <summary>Determines whether the object identified by a <see cref="T:System.Object" /> is the same as the object identified by a <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key" />.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are the same, otherwise false.</returns>
      <param name="obj">A <see cref="T:System.Object" /> object that identifies the first object.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key" /> object that identifies the second object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key.op_Inequality(Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key,Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key)">
      <summary>Determines whether the objects identified by two <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key" /> objects are different.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are different, otherwise false.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key" /> object that identifies the first object.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key" /> object that identifies the second object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key.op_Inequality(Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key,System.Object)">
      <summary>Performs a Boolean equality operation to determine whether two evaluation detail object keys reference the same evaluation detail object.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are different, otherwise false.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key" /> object that identifies the first object.</param>
      <param name="obj">A <see cref="T:System.Object" /> object that identifies the second object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key.op_Inequality(System.Object,Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key)">
      <summary>Performs a Boolean equality operation to determine whether two evaluation detail object keys reference the same evaluation detail object.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are different, otherwise false.</returns>
      <param name="obj">A <see cref="T:System.Object" /> object that identifies the first object.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail.Key" /> object that identifies the second object.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetailCollection">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetailCollection" /> class represents a collection of <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail" /> objects that represent all the detail rows that are in the evaluation. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationDetailCollection.#ctor(Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetailCollection" /> class.</summary>
      <param name="parent">A <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory" /> object value that specifies the parent of the <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetailCollection" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationDetailCollection.Contains(System.Int32)">
      <summary>Verifies whether an object with the specified ID value exists in the collection. </summary>
      <returns>A <see cref="T:System.Boolean" /> object value that specifies whether the referenced object is in the collection. If True, it exists in the collection. Otherwise, False.</returns>
      <param name="id">The <see cref="T:System.Int32" /> value that is to be found in the collection.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.EvaluationDetailCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail" /> object in the collection by ID value.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail" /> object value that represents a row of detail in the evaluation that has the specified name.</returns>
      <param name="id">A <see cref="T:System.Int32" /> value that specifies the ID value of the <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetail" /> object in the <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationDetailCollection" /> collection.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.EvaluationFactory">
      <summary>Represents the evaluation factory in policy-based management services.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationFactory.IsTypeSupported(System.Type)">
      <summary>Determines whether the specified type is supported by policy-based management services.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the type is supported. If true, the type is supported. Otherwise, false.</returns>
      <param name="type">A <see cref="T:System.Type" /> object value that specifies the type.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationFactory.IsTypeSupportedForConstant(System.Type)">
      <summary>Determines whether the specified type is supported for being used as a constant by policy-based management services.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the type is supported. If true, the type is supported. Otherwise, false.</returns>
      <param name="type">A <see cref="T:System.Type" /> object value that specifies the type.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationFactory.LikeToRegex(System.String)">
      <summary>Registers a string pattern for conditional comparisons.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the string pattern.</returns>
      <param name="likePattern">A <see cref="T:System.String" /> object value that specifies the string pattern.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationFactory.SupportedOperators(Microsoft.SqlServer.Management.Dmf.TypeClass)">
      <summary>Determines whether the specified type is supported by policy-based management services.</summary>
      <returns>A <see cref="T:System.Collections.Generic.List" /> object value that contains a list of <see cref="T:Microsoft.SqlServer.Management.Dmf.OperatorType" /> objects that specifies the supported operators for the type.</returns>
      <param name="typeClass">A <see cref="T:Microsoft.SqlServer.Management.Dmf.TypeClass" /> objects that specifies the type.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationFactory.SupportedOperators(System.Type)">
      <summary>Determines whether the specified type is supported by policy-based management services.</summary>
      <returns>A <see cref="T:System.Collections.Generic.List" /> object value that contains a list of <see cref="T:Microsoft.SqlServer.Management.Dmf.OperatorType" /> objects that specifies the supported operators for the type.</returns>
      <param name="type">A <see cref="T:System.Type" /> objects that specifies the type.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.EvaluationHistory" /> object represents information about parent policy evaluation that is stored in the system catalogs. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory" /> class.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.ConnectionEvaluationHistories">
      <summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory" /> objects. Each ConnectionEvaluationHistory object represents an assembly defined in the evaluation history.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistoryCollection" /> object that contains a collection of <see cref="T:Microsoft.SqlServer.Management.Dmf.ConnectionEvaluationHistory" /> objects.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Discover(Microsoft.SqlServer.Management.Sdk.Sfc.ISfcDependencyDiscoveryObjectSink)">
      <summary>Discovers dependencies in the evaluation history.</summary>
      <param name="sink">The <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcDependencyDiscoveryObjectSink" /> object value that holds the evaluation dependencies. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.EndDate">
      <summary>Gets the date and time when the parent policy finished running.</summary>
      <returns>A <see cref="T:System.DateTime" /> value that contains the date and time when the policy finished running.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Exception">
      <summary>Gets the description of the exception, if one occurred.</summary>
      <returns>A <see cref="T:System.String" /> value that contains the description of the exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.GetObjectFactory">
      <summary>Gets the object factory for the referenced object.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Sfc.SfcObjectFactory" /> object that contains the object factory for the referenced object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.ID">
      <summary>Gets the integer value that uniquely identifies the referenced evaluation history record.</summary>
      <returns>An <see cref="T:System.Int64" /> value that contains the ID value that uniquely identifies the evaluation history record.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.IdentityKey">
      <summary>Gets the key value that identifies the evaluation history record.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Sfc.SfcKey" /> value that specifies the key value that identifies the evaluation history record.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Parent">
      <summary>Gets or sets the parent instance via the keychain.</summary>
      <returns>An object that represents the parent of the current instance.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.PolicyName">
      <summary>Gets the name of the parent policy.</summary>
      <returns>A <see cref="T:System.String" /> value that contains the name of the parent policy.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Result">
      <summary>Gets the <see cref="T:System.Boolean" /> value that determines whether the policy executed successfully.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the policy executed successfully.If True, the policy executed successfully. Otherwise, False.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.StartDate">
      <summary>Gets the date and time when the parent policy attempted to start running.</summary>
      <returns>A <see cref="T:System.DateTime" /> value that contains the date and time when the policy attempted to start running.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key" /> class represents the key that identifies the <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key.#ctor(Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key" /> class based on the specified key.</summary>
      <param name="other">A <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key" /> value that specifies the other key.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key.#ctor(System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key" /> class that has the specified ID value.</summary>
      <param name="id">A <see cref="T:System.Int64" /> value that specifies the name of the key.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key.Equals(Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey)">
      <summary>Determines whether the specified object is equal to the exception detail represented by the <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key" /> object.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the specified object is the same as the current evaluation detail. Otherwise, false.</returns>
      <param name="key">A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcKe" />y value that identifies the object to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the exception detail represented by the <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key" /> object.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the specified object is the same as the current evaluation detail. Otherwise, false.</returns>
      <param name="obj">A <see cref="T:System.Object" /> value that identifies the object to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key.Equals(System.Object,System.Object)">
      <summary>Determines whether the two specified objects are the same.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the two objects are the same. Otherwise, false.</returns>
      <param name="obj1">A <see cref="T:System.Object" /> value that specifies one object.</param>
      <param name="obj2">A <see cref="T:System.Object" /> value that specifies another object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key.GetHashCode">
      <summary>Gets the hash code for the object.</summary>
      <returns>A <see cref="T:System.Int32" /> value that specifies the hash code.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key.GetUrnFragment">
      <summary>Gets the unique resource name (URN) path partial string that represents the history object. </summary>
      <returns>A <see cref="T:System.String" /> value that contains the URN fragment.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key.ID">
      <summary>Gets or sets the ID value of the <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory" /> key.</summary>
      <returns>A <see cref="T:System.Int64" /> value that specifies the ID of the key value.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key.op_Equality(Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key,Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key)">
      <summary>Determines whether the objects identified by two <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key" /> objects are the same.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are the same, otherwise false.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key" /> object that identifies the first object.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key" /> object that identifies the second object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key.op_Equality(Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key,System.Object)">
      <summary>Determines whether the object identified by a <see cref="T:System.Object" /> is the same as the object identified by a <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key" />.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are the same, otherwise false.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key" /> object that identifies the first object.</param>
      <param name="obj">A <see cref="T:System.Object" /> object that identifies the second object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key.op_Equality(System.Object,Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key)">
      <summary>Determines whether the object identified by a <see cref="T:System.Object" /> is the same as the object identified by a <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key" />.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are the same, otherwise false.</returns>
      <param name="obj">A <see cref="T:System.Object" /> object that identifies the first object.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key" /> object that identifies the second object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key.op_Inequality(Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key,Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key)">
      <summary>Determines whether the objects identified by two <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key" /> objects are different.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are different, otherwise false.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key" /> object representing one of the history objects to compare.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key" /> object representing the other history object object to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key.op_Inequality(Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key,System.Object)">
      <summary>Determines whether the object identified by a <see cref="T:System.Object" /> is different than the object identified by a <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key" />.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are different, otherwise false.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key" /> object that identifies the first object.</param>
      <param name="obj">A <see cref="T:System.Object" /> object that identifies the second object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key.op_Inequality(System.Object,Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key)">
      <summary>Determines whether the object identified by a <see cref="T:System.Object" /> is different than the object identified by a <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key" />.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are different, otherwise false.</returns>
      <param name="obj">A <see cref="T:System.Object" /> object that identifies the first object.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory.Key" /> object that identifies the second object.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistoryCollection">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistoryCollection" /> class represents a collection of <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory" /> objects that represent all evaluation histories that are in the policy store. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationHistoryCollection.#ctor(Microsoft.SqlServer.Management.Dmf.Policy)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistoryCollection" /> class.</summary>
      <param name="parent">A <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> object value that specifies the parent of the <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistoryCollection" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.EvaluationHistoryCollection.Contains(System.Int64)">
      <summary>Determines whether the collection contains the <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory" /> object specified by the <paramref name="id" /> parameter.</summary>
      <returns>true if the collection contains the object; otherwise, false.</returns>
      <param name="id">An <see cref="T:System.Int64" /> value that specifies the object to find.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.EvaluationHistoryCollection.Item(System.Int64)">
      <summary>Gets an <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory" /> object from the collection.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory" /> object.</returns>
      <param name="id">An <see cref="T:System.Int64" /> value that specifies the item to retrieve.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.ExpressionNode" /> object represents a policy-based management expression node. The expression node describes part of an expression, such as a constant value, an operator, or a function.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ConstructNode(System.Object)">
      <summary>Creates a new expression node.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" /> object that represents the new expression node.</returns>
      <param name="obj">An <see cref="T:System.Object" /> value that specifies the object on which the expression node is based.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ConvertFromFilterNode(Microsoft.SqlServer.Management.Sdk.Sfc.FilterNode)">
      <summary>Creates a new expression node by converting a filter node.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" /> object that represents the new expression node.</returns>
      <param name="filterNode">A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.FilterNode" /> value that specifies the filter node to convert into an expression node.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ConvertFromFilterNode(Microsoft.SqlServer.Management.Sdk.Sfc.FilterNode,System.Type)">
      <summary>Creates a new expression node by converting a filter node.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" /> object that represents the new expression node.</returns>
      <param name="filterNode">A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.FilterNode" /> object value that specifies the filter node to convert into an expression node.</param>
      <param name="facet">A <see cref="T:System.Type" /> value that specifies the type of object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ConvertFromString(System.String,System.String)">
      <summary>Converts a type from a string value.</summary>
      <returns>A <see cref="T:System.Object" /> value that contains the converted type.</returns>
      <param name="stringObjType">A <see cref="T:System.String" /> value that specifies the object type.</param>
      <param name="stringValue">A <see cref="T:System.String" /> value that specifies the string value.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ConvertToFilterNode">
      <summary>Creates a filter node by converting the expression node.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.FilterNode" /> object value that specifies the new filter node.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ConvertToIntWithCheck(System.String)">
      <summary>Converts the specified string to an integer.</summary>
      <returns>A <see cref="T:System.Int32" /> object value that specifies the result of the conversion.</returns>
      <param name="value">A <see cref="T:System.String" /> value that specifies the value in string format.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ConvertToString(System.Object)">
      <summary>Converts a type to a string value.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the converted string.</returns>
      <param name="value">A <see cref="T:System.Object" /> value that specifies the type.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.DeepClone">
      <summary>Creates a copy of the referenced object. This includes all its properties.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" /> object value that specifies the copied expression node.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.Deserialize(System.String)">
      <summary>Deserializes an expression node from a string.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" /> object value that specifies the deserialized expression node.</returns>
      <param name="value">A <see cref="T:System.String" /> that specifies the string that contains the expression node text.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.Deserialize(System.Xml.XmlReader)">
      <summary>Deserializes an expression node from an XML reader.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" /> object value that specifies the deserialized expression node.</returns>
      <param name="xr">A <see cref="T:System.Xml.XmlReader" /> that specifies the XML reader that contains the expression node text.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.DeserializeProperties(System.Xml.XmlReader,System.Boolean)">
      <summary>Deserializes the properties in the expression from an XML reader.</summary>
      <param name="xr">A <see cref="T:System.Xml.XmlReader" /> that specifies the XML reader that contains the expression node text.</param>
      <param name="includeResult">A <see cref="T:System.Boolean" /> value that determines whether to include the property result</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.DeserializeResult(System.Xml.XmlReader)">
      <summary>Deserializes the property results in the expression from an XML reader.</summary>
      <param name="xr">A <see cref="T:System.Xml.XmlReader" /> that specifies the XML reader that contains the expression node text.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.DeserializeWithResult(System.String)">
      <summary>Deserializes the expression node from a text string.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" /> value that contains the deserialized string.</returns>
      <param name="value">A <see cref="T:System.String" /> value that contains the serialized expression node.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.DoConvertToFilterNode">
      <summary>Allows the conversion of expression node to filter mode.</summary>
      <returns>The conversion of expression node to filter mode.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.DoEnumAttributes(System.Collections.Generic.List{System.String})">
      <summary>Deserializes the expression node from a list of text strings.</summary>
      <param name="list">A <see cref="T:Systems.Collections.Generic.List" /> object with the <see cref="T:System.String" /> values to deserialize.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.EnumChildren">
      <summary>Returns an enumerated list of dependent expression nodes.</summary>
      <returns>An IEnumerable&lt;ExpressionNode&gt; object value that contains the list of dependent expression nodes.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.EqualProperties(System.Object)">
      <summary>Determines whether the properties of the specified object are equal to the properties of the current expression node.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the properties of the two objects are equal. Otherwise false.</returns>
      <param name="obj">An T:System.Object specifying the object to compare to the current expression node.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.Equals(System.Object)">
      <summary>Returns a <see cref="T:System.Boolean" /> value that specifies whether the referenced expression node object is equal to the specified object.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the expression node is equal to the specified object.If true, the expression node is equal to the specified object. Otherwise, false.</returns>
      <param name="obj">A <see cref="T:System.Object" /> that specifies the object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.Evaluate(Microsoft.SqlServer.Management.Facets.FacetEvaluationContext)">
      <summary>Evaluates the expression node with the given facet context.</summary>
      <returns>A <see cref="T:System.Object" /> value that is the object specified by the evaluation.</returns>
      <param name="context">A <see cref="T:Microsoft.SqlServer.Management.Facets.FacetEvaluationContext" /> value that specifies the facet evaluation context.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.Evaluate(Microsoft.SqlServer.Management.Facets.FacetEvaluationContext,System.Boolean)">
      <summary>Evaluates the expression node with the given facet context and checks the script as a proxy.</summary>
      <returns>A <see cref="T:System.Object" /> value that is the object specified by the evaluation.</returns>
      <param name="context">A <see cref="T:Microsoft.SqlServer.Management.Facets.FacetEvaluationContext" /> value that specifies the facet evaluation context.</param>
      <param name="checkSqlScriptAsProxy">A <see cref="T:System.Boolean" /> value that specifies whether to check the script as a proxy.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.GetHashCode">
      <summary>Gets the hash code for the object.</summary>
      <returns>A <see cref="T:System.Int32" /> value that specifies the hash code.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.GetResult">
      <summary>Gets the result that is returned when an expression is deserialized.</summary>
      <returns>An <see cref="T:System.Object" /> value that specifies the object that is returned when an expression is deserialized.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.GetResultString">
      <summary>Gets the result in string format that is returned when an expression is deserialized.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the object that is returned when an expression is deserialized.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionNode.LastEvaluationResult">
      <summary>Gets or sets the result of the last evaluation.</summary>
      <returns>A <see cref="T:System.Object" /> value that contains the result of the last evaluation.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.MatchType``1(System.String)">
      <summary>Indicates the type of match to be used in the node.</summary>
      <returns>The type of match to be used in the node.</returns>
      <param name="value">A string that represents the value.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.MoveToElementWithCheck(System.Xml.XmlReader,System.String)">
      <summary>Moves the reader to the element with check.</summary>
      <param name="xr">The XML reader to be used.</param>
      <param name="name">The string that represents the name.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.Parse(System.String)">
      <summary>Parses the specified expression string.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" /> object value that specifies part of an expression.</returns>
      <param name="input">A <see cref="T:System.String" /> value that specifies the string to be parsed.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.Parse(System.String,System.Type)">
      <summary>Parses the specified string.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" /> object value that specifies part of an expression.</returns>
      <param name="input">A <see cref="T:System.String" /> value that specifies the string to be parsed.</param>
      <param name="facet">A <see cref="T:System.Type" /> value that specifies the type of object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ReadElementWithCheck(System.Xml.XmlReader,System.String)">
      <summary>Reads a named serialized element using the XML Reader and returns the value.</summary>
      <returns>A <see cref="T:System.String" /> value that contains the value with the specified name.</returns>
      <param name="xr">An <see cref="T:System.Xml.XmlReader" /> object value that specifies the XML reader used to read the specified object.</param>
      <param name="name">A <see cref="T:System.String" /> value that contains the name of the object to read.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ReadEndElement(System.Xml.XmlReader)">
      <summary>Reads the end element in the expression node.</summary>
      <param name="xr">An <see cref="T:System.Xml.XmlReader" /> object value that specifies the XML reader used to read the specified element.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ReadNodeWithCheck(System.Xml.XmlReader,System.String[])">
      <summary>Reads the specified node with a checkmark.</summary>
      <returns>The specified node with a checkmark.</returns>
      <param name="xr">The XML reader to be used.</param>
      <param name="elements">The name of the elements in the node.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ReadSimpleNodeWithCheck(System.Xml.XmlReader,Microsoft.SqlServer.Management.Dmf.ExpressionNodeType,System.String[])">
      <summary>Reads the specified elements, evaluated with the given expression node type, and read with the specified XML reader.</summary>
      <returns>A <see cref="T:System.Collections.Generic.List" /> of strings that contains the read values.</returns>
      <param name="xr">An <see cref="T:System.Xml.XmlReader" /> object value that specifies the XML reader used to read the specified elements.</param>
      <param name="type">A <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeType" /> that specifies the node type.</param>
      <param name="elements">An array of <see cref="T:System.String" /> values that specifies the elements to read.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ReadWithCheck(System.Xml.XmlReader,System.Xml.XmlNodeType,System.String)">
      <summary>Reads the expression node using the XML Reader.</summary>
      <param name="xr">An <see cref="T:System.Xml.XmlReader" /> object value that specifies the XML reader used to read the expression node.</param>
      <param name="nodeType">A <see cref="T:System.Xml.XmlNodeType" /> value that specifies the type of node.</param>
      <param name="name">A <see cref="T:System.String" /> value that contains the name of the object to read.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ResolveEnum(System.String,System.String)">
      <summary>Resolves the enumeration conflicts encountered during the process.</summary>
      <returns>The enumeration conflicts that are encountered during the process.</returns>
      <param name="stringObjType">A <see cref="T:System.String" /> string for the type of object.</param>
      <param name="stringValue">A <see cref="T:System.String" /> string corresponding to the value.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.Serialize(System.Xml.XmlWriter)">
      <summary>Serializes the expression node to the specified XML Writer.</summary>
      <param name="xmlWriter">An <see cref="T:System.Xml.XmlWriter" /> object value that specifies the XML writer used to serialize the expression node.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.SerializeNode(Microsoft.SqlServer.Management.Dmf.ExpressionNode)">
      <summary>Serializes the expression node to a text string.</summary>
      <returns>A <see cref="T:System.String" /> value that contains the serialized expression node in text format.</returns>
      <param name="node">An <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" />  object value that specifies the expression node.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.SerializeNodeWithResult(Microsoft.SqlServer.Management.Dmf.ExpressionNode)">
      <summary>Serializes the expression node to a text string.</summary>
      <returns>A <see cref="T:System.String" /> value that contains the serialized expression node in text format.</returns>
      <param name="node">An <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" />  object value that specifies the expression node.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.SerializeProperties(System.Xml.XmlWriter,System.Boolean)">
      <summary>Serializes the properties in the expression to an XML writer.</summary>
      <param name="xw">A <see cref="T:System.Xml.XmlWriter" /> that specifies the XML writer used to serialize the expression node.</param>
      <param name="includeResult">A <see cref="T:System.Boolean" /> value that determines whether to include the property result.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.SerializeResult(System.Xml.XmlWriter)">
      <summary>Serializes the result in the expression node.</summary>
      <param name="xw">The XML writer.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.SetFilterNodeCompatible(System.Boolean)">
      <summary>Sets the compatible filter node of the Boolean property.</summary>
      <param name="value">A <see cref="T:System.Boolean" /> value.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.SetHasScript(System.Boolean)">
      <summary>Sets the Boolean value for the HasScript property.</summary>
      <param name="value">A <see cref="T:System.Boolean" /> value.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.SetNameConditionType(Microsoft.SqlServer.Management.Dmf.NameConditionType)">
      <summary>Sets the name of the condition type property.</summary>
      <param name="value">A <see cref="T:Microsoft.SqlServer.Management.Dmf.NameConditionType" /> value.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.SetNodeType(Microsoft.SqlServer.Management.Dmf.ExpressionNodeType)">
      <summary>Indicates the type of node to be set.</summary>
      <param name="value">The specified expression node type.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.SetObjectName(System.String)">
      <summary>Sets the name of the expression node.</summary>
      <param name="value">A <see cref="T:System.String" /> value that specifies the name of the expression node.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.SetProperties">
      <summary>Sets property values.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.SetTypeClass(Microsoft.SqlServer.Management.Dmf.TypeClass)">
      <summary>Sets type class for the expression node.</summary>
      <param name="value">A <see cref="T:Microsoft.SqlServer.Management.Dmf.TypeClass" /> value.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionNode.Tag">
      <summary>Gets the tag text that is associated with the expression node.</summary>
      <returns>A <see cref="T:System.String" /> value that contains the tag text that is associated with the expression node.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ToString">
      <summary>Returns the referenced object in string format.</summary>
      <returns>A <see cref="T:System.String" /> value that contains the expression node object in string format.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ToStringForDisplay">
      <summary>Returns the referenced object in string format for display.</summary>
      <returns>A <see cref="T:System.String" /> value that contains the expression node object in string format.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNode.ToStringForUrn">
      <summary>Returns the referenced object in URN format.</summary>
      <returns>A <see cref="T:System.String" /> value that contains the expression node object in URN format.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionNode.Type">
      <summary>Gets the type of expression node.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeType" /> value that specifies the part of an expression that is represented by the expression node.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionNode.TypeClass">
      <summary>Gets the class type when the expression node represents a constant value or a variable.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.TypeClass" /> value that specifies the value type.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeAttribute">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.ExpressionNodeAttribute" /> object represents an attribute of a policy-based management expression node. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeAttribute" /> class that has the specified name.</summary>
      <param name="name">A <see cref="T:System.String" /> value that specifies the name of the attribute.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeAttribute.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeAttribute" /> class that has the specified name and type.</summary>
      <param name="name">A <see cref="T:System.String" /> value that specifies the name of the attribute.</param>
      <param name="facet">A <see cref="T:System.Type" /> value that specifies the type of the attribute.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeAttribute.DeepClone">
      <summary>Returns a copy of the expression node including properties.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" /> value that specifies the expression node.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionNodeAttribute.Name">
      <summary>Gets the name of the expression node attribute.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name of the expression node attribute.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeAttribute.ToString">
      <summary>Gets the expression node attribute in string format.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the expression node attribute.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeAttribute.ToStringForDisplay">
      <summary>Gets the expression node attribute in string format with display formatting.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the expression node attribute.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeChildren">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.ExpressionNodeChildren" /> object represents the child expression nodes that are dependent on an expression node.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeChildren.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeChildren" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeChildren.Add(Microsoft.SqlServer.Management.Dmf.ExpressionNode)">
      <summary>Gets the number of child expression nodes that are dependent on the parent node.</summary>
      <param name="node">A <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" /> object value that specifies the expression node to add to the list of children.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionNodeChildren.ChildrenList">
      <summary>Gets or sets a list of dependent child expression nodes. </summary>
      <returns>An <see cref="T:System.Collections.Generic.List" /> value that specifies a list of children in the object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionNodeChildren.Count">
      <summary>Gets the number of child expression nodes that are dependent on the parent node.</summary>
      <returns>An <see cref="T:System.Int32" /> value that specifies the number of child expression nodes.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeChildren.DeserializeProperties(System.Xml.XmlReader,System.Boolean)">
      <summary>Deserializes the properties in the expression from an XML reader.</summary>
      <param name="xr">A <see cref="T:System.Xml.XmlReader" /> that specifies the XML reader that contains the expression node text.</param>
      <param name="includeResult">A <see cref="T:System.Boolean" /> value that determines whether to include the property result</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeChildren.DoEnumAttributes(System.Collections.Generic.List{System.String})">
      <summary>Populates the specified list with attributes associated with the expression node.</summary>
      <param name="list">The string list to populate.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeChildren.EnumChildren">
      <summary>Returns an enumerated list of the children listed in this object.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable" /> value that containing the expression nodes that are the children listed in the object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionNodeChildren.EnumerableChildrenList">
      <summary>Gets an enumerable list of dependent child expression nodes. </summary>
      <returns>A <see cref="T:System.Collections.Generic.IEnumerable" /> value that specifies a list of children in the object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeChildren.EqualProperties(System.Object)">
      <summary>Determines whether the specified object has equal properties to the referenced object.</summary>
      <returns>A <see cref="T:System.Boolean" /> value determines whether the object properties are equal. If True, they are equal. Otherwise False.</returns>
      <param name="obj">A <see cref="T:System.Object" /> that specifies the object to compare properties.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeChildren.SerializeProperties(System.Xml.XmlWriter,System.Boolean)"></member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeChildren.ToString">
      <summary>Gets the expression node children in string format.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the expression node children.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeConfigurationException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeConfigurationException" /> class is an exception that is raised when the adapter receives the wrong number of arguments.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeConfigurationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeConfigurationException" /> class with a system-supplied message that describes the error.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeConfigurationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeConfigurationException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeConfigurationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionNodeConfigurationException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeConfigurationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeConfigurationException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionNodeConfigurationException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeConstant">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.ExpressionNodeConstant" /> object represents an constant value that is used in an expression.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeConstant.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeConstant" /> class that has the specified object.</summary>
      <param name="obj">An <see cref="T:System.Object" /> value that specifies the object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeConstant.DeepClone">
      <summary>Returns the a copy of the expression node including properties.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeConstant" /> value that specifies the copy of the expression node.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeConstant.ToString">
      <summary>Returns the expression node constant in string format.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the expression node constant in string format.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeConstant.ToStringForDisplay">
      <summary>Returns the expression node constant in string format with display formatting.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the expression node constant in string format with display formatting.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionNodeConstant.Value">
      <summary>Gets the object value that is the expression node constant.</summary>
      <returns>A <see cref="T:System.Object" /> value that specifies the object that is the expression node constant.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.ExpressionNodeFunction" /> object represents part of a policy-based management expression that is a function.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.#ctor(Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function,Microsoft.SqlServer.Management.Dmf.ExpressionNode[])">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction" /> class that has the specified function and arguments.</summary>
      <param name="functionType">An <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction" /> object value that specifies the type of function.</param>
      <param name="args">An array of <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" /> object values that specifies the arguments for the function.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.DeepClone">
      <summary>Creates a copy of the expression node including properties.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" /> value that is copy of the expression node.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.FunctionsDefinitions">
      <summary>Gets the function definitions.</summary>
      <returns>A Dictionary&lt;Function,TypeClass[]&gt; value that contains the function definitions.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.FunctionType">
      <summary>Gets the type of function.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function" /> value that specifies the type of function.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.ReturnType">
      <summary>Gets the type that is returned by the function.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.TypeClass" /> value that specifies the type of object that is returned by the function.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.ToString">
      <summary>Returns a string that represents the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction" /> object. </summary>
      <returns> Returns a <see cref="T:System.String" /> value that represents the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction" /> object.  </returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.ToStringForDisplay">
      <summary>Returns the function as a string formatted for display.</summary>
      <returns>A <see cref="T:System.String" /> value that contains the function in string format.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function" /> enumeration contains values that represent the different types of supported functions.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.ExecuteSql">
      <summary>Executes a Transact-SQL statement.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.ExecuteWql">
      <summary>Executes a WQL statement.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.GetDate">
      <summary>Returns a date.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.DateAdd">
      <summary>Adds time to a date.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.DatePart">
      <summary>Extracts part of a date, such as the month.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.Sum">
      <summary>Returns the sum of the specified values.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.Avg">
      <summary>Finds the average of specified values.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.Count">
      <summary>Counts the number of given values.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.Len">
      <summary>Returns the length of a string.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.IsNull">
      <summary>Tests to see if an argument is null.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.Array">
      <summary>Creates an array.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.Add">
      <summary>Adds object values.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.Subtract">
      <summary>Subtract one value from another.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.Multiply">
      <summary>Multiplies values.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.Divide">
      <summary>Divides one value by another.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.BitwiseAnd">
      <summary>Performs a logical AND operation with given values.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.BitwiseOr">
      <summary>Performs a logical OR operation with given values.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.Power">
      <summary>Returns a value raised to the specified power.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.Mod">
      <summary>Returns the modulus.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.Round">
      <summary>Returns a rounded value.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.Enum">
      <summary>Enumerates a list.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.DateTime">
      <summary>Creates a date and time value.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.String">
      <summary>Converts the specified value to a string.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.True">
      <summary>Tests if the given expression is true.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.False">
      <summary>Tests whether an expression is false.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.Guid">
      <summary>Specifies a GUID value.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.Upper">
      <summary>Returns the upper value.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.Lower">
      <summary>Returns the lower value.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.Concatenate">
      <summary>Concatenates two values.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeFunction.Function.Escape">
      <summary>Adds escape character or characters.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeGroup">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.ExpressionNodeGroup" /> object represents an expression node that is a group.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeGroup.#ctor(Microsoft.SqlServer.Management.Dmf.ExpressionNode)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeGroup" /> class that has the specified expression node.</summary>
      <param name="node">An <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" /> value that specifies the expression node.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeGroup.DeepClone">
      <summary>Creates a copy of the expression node group including properties.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" /> value that specifies the copied expression node.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionNodeGroup.Group">
      <summary>Gets or sets the expression node that represents a group.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" /> value that specifies the expression node that is associated with the group.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableException" /> class is an exception that is raised when the expression node cannot be configured.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableException" /> class that has the specified sub type.</summary>
      <param name="subtype">A <see cref="T:System.String" /> value that specifies the sub type value.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object. </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableException.Subtype">
      <summary>Gets the subtype that is associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the subtype that is associated with the exception.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableOperatorException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableOperatorException" /> class is an exception that is raised if the operator cannot configure the expression node.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableOperatorException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableOperatorException" /> class with a system-supplied message that describes the error.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableOperatorException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableOperatorException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableOperatorException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableOperatorException.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableOperatorException" /> class with <paramref name="propertyName" /> and <paramref name="expression" /> parameters that describe the error.</summary>
      <param name="propertyName">A string value that specifies the property that threw an error.</param>
      <param name="expression">A string value that contains the error expression.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableOperatorException.DmfExceptionType">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" />.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" />.object</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableOperatorException.Expression">
      <summary>The error expression.</summary>
      <returns>A string value that contains the error expression.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableOperatorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableOperatorException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableOperatorException.Message">
      <summary>Gets the error message.</summary>
      <returns>A string value that contains the error message.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionNodeNotConfigurableOperatorException.PropertyName">
      <summary>Gets the name of the property that threw an exception.</summary>
      <returns>A string value that contains the name of the property that threw an exception.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeOperator">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.ExpressionNodeOperator" /> object represents an expression node that is an operator.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeOperator.#ctor(Microsoft.SqlServer.Management.Dmf.OperatorType,Microsoft.SqlServer.Management.Dmf.ExpressionNode,Microsoft.SqlServer.Management.Dmf.ExpressionNode)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeOperator" /> class.</summary>
      <param name="type">A <see cref="T:Microsoft.SqlServer.Management.Dmf.OperatorType" /> object.</param>
      <param name="left">An <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" /> object.</param>
      <param name="right">An <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeOperator.DeepClone">
      <summary>Clones the expression node and all child nodes subsumed by the expression node.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionNodeOperator.Left">
      <summary>Gets or sets the argument to the left of the operator.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" /> object value that specifies the value to the left of the operator in the expression.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeOperator.OperatorTypeFromString(System.String)">
      <summary>Gets the operator type from its string representation supplied by the <paramref name="opType" /> parameter.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Dmf.OperatorType" /> object.</returns>
      <param name="opType">A string value that contains the operator.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeOperator.OperatorTypeToString(Microsoft.SqlServer.Management.Dmf.OperatorType)">
      <summary>Gets the operator type as a string value from the <paramref name="type" /> parameter.</summary>
      <returns>A string value that specifies the operator type.</returns>
      <param name="type">A <see cref="T:Microsoft.SqlServer.Management.Dmf.OperatorType" /> object.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionNodeOperator.OpType">
      <summary>Gets the type of operator that is used in the expression.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.OperatorType" /> value that specifies the type of operator that is used in the expression.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionNodeOperator.Right">
      <summary>Gets or sets the argument to the right of the operator.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" /> object value that specifies the value to the right of the operator in the expression.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeOperator.SupportedFilterOperators(System.Type,Microsoft.SqlServer.Management.Dmf.AutomatedPolicyEvaluationMode)">
      <summary>Adds a <see cref="T:System.Type" /> to the list of supported operators.</summary>
      <returns>A generic list of type <see cref="T:Microsoft.SqlServer.Management.Dmf.OperatorType" /> objects.</returns>
      <param name="type">A <see cref="T:System.Type" /> object that specifies the type to add.</param>
      <param name="mode">A <see cref="T:Microsoft.SqlServer.Management.Dmf.AutomatedPolicyEvaluationMode" /> enumeration object that specifies the mode.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionNodeOperator.ToString">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeOperator" /> object as a string value.</summary>
      <returns>A string value that contains the operator.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeType">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNodeType" /> enumeration contains values that specify the type of expression node.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeType.Base">
      <summary>Represents a base in an expression.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeType.Constant">
      <summary>Represents a constant value, such as an object, in an expression.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeType.Attribute">
      <summary>Represents an attribute in an expression.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeType.Operator">
      <summary>Represents an operator in an expression.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeType.Function">
      <summary>Represents a function in an expression.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionNodeType.Group">
      <summary>Represents a group in an expression.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ExpressionSerializationException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionSerializationException" /> class is an exception that is raised when an the adapter receives the wrong number of arguments.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionSerializationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionSerializationException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionSerializationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionSerializationException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionSerializationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionSerializationException.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class that has the specified received name and expected name.</summary>
      <param name="nameRead">A <see cref="T:System.String" /> value that specifies the name that is read during the serialization.</param>
      <param name="nameExpected">A <see cref="T:System.String" /> value that specifies the name that is expected during serialization. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionSerializationException.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class with the specified received name and type, and expected name and type.</summary>
      <param name="typeRead">A <see cref="T:System.String" /> value that specifies the type that is read during the serialization.</param>
      <param name="nameRead">A <see cref="T:System.String" /> value that specifies the name that is read during serialization. </param>
      <param name="typeExpected">A <see cref="T:System.String" /> value that specifies the type that is expected during the serialization.</param>
      <param name="nameExpected">A <see cref="T:System.String" /> value that specifies the name that is expected during serialization. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionSerializationException.ActionType">
      <summary>Gets the action type that is associated with the serialization.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the action type that is associated with the serialization.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionSerializationException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionSerializationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionSerializationException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionSerializationException.NameExpected">
      <summary>Gets the name that is expected with the serialization.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name that is expected with the serialization.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionSerializationException.NameRead">
      <summary>Gets the name that is read with the serialization.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name that is read with the serialization.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionSerializationException.TypeExpected">
      <summary>Gets the type that is expected with the serialization.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the type that is expected with the serialization.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionSerializationException.TypeRead">
      <summary>Gets the type read with the serialization.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the type that is read with the serialization.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ExpressionSerializationException.ReaderActionType">
      <summary>Represents the reader action type that is associated with the serialization. Do not reference this member directly in your code. It supports the SQL Server infrastructure.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionSerializationException.ReaderActionType.Undefined">
      <summary>Represents a value that is null.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionSerializationException.ReaderActionType.Move">
      <summary>Defines an action to move that is associated with the serialization.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ExpressionSerializationException.ReaderActionType.Read">
      <summary>Defines the specified action type.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ExpressionTypeMistmatchException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionTypeMismatchException" /> class is an exception that is raised when the types in the expression do not match.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionTypeMistmatchException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionTypeMismatchException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionTypeMistmatchException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionTypeMismatchException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionTypeMistmatchException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionTypeMistmatchException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionTypeMistmatchException.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class that has the two specified types.</summary>
      <param name="typeLeft">A <see cref="T:System.String" /> value that specifies the first type that is associated with the exception.</param>
      <param name="typeRight">A <see cref="T:System.String" /> value that specifies the second type that is associated with the exception.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionTypeMistmatchException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ExpressionTypeMistmatchException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionTypeMistmatchException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionTypeMistmatchException.TypeLeft">
      <summary>Gets the first type that is associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the first type that is associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ExpressionTypeMistmatchException.TypeRight">
      <summary>Gets the second type that is associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the second type that is associated with the exception.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.FacetInfo">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.FacetInfo" /> object represents facet information. A facet represents a logical dimension of a target object and is used, together with a local expression, to build a condition.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FacetInfo.Description">
      <summary>Gets the descriptions of the facet.</summary>
      <returns>A <see cref="T:System.String" /> value that contains a description of the facet.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FacetInfo.DisplayName">
      <summary>Gets the display name of the facet.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the display name of the facet.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FacetInfo.EvaluationMode">
      <summary>Gets the evaluation mode for the facet.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.AutmatedEvaluationMode" /> value that specifies the evaluation mode of the facet.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FacetInfo.FacetProperties">
      <summary>Gets static information about the properties of the facet.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.PropertyInfoCollection" /> object value that contains static information about the properties of the facet.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FacetInfo.FacetPropertyDescriptors">
      <summary>Gets the descriptors of the facet properties.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.FacetPropertyDescriptors" /> object that contains the descriptor information for the facet properties.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FacetInfo.FacetType">
      <summary>Gets the facet type.</summary>
      <returns>A <see cref="T:System.Type" /> value that specifies the facet system type.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FacetInfo.GetTargetProperty(System.String,System.Object)">
      <summary>Indicates the target property to get.</summary>
      <returns>The target property to get.</returns>
      <param name="propName">A <see cref="T:System.String" /> string that represents the property name.</param>
      <param name="target">The specified target property.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FacetInfo.Name">
      <summary>Gets the name of the facet.</summary>
      <returns>A <see cref="T:System.Name" /> value that specifies the name of the facet.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FacetInfo.System#IComparable#CompareTo(System.Object)">
      <summary>Compares the objects within the FacetInfo.</summary>
      <returns>The objects to compare.</returns>
      <param name="other">The objects that need to be compared.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FacetInfo.System#IDisposable#Dispose">
      <summary>Releases all resources used by the <see cref="T:Microsoft.SqlServer.Management.Dmf.FacetInfo" /> class.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FacetInfo.TargetTypes">
      <summary>Represents a collection of <see cref="T:System.Type" /> objects. Each <see cref="T:System.Type" /> object represents a system type on which the facet operates.</summary>
      <returns>A <see cref="T:System.TypeCollection" /> object that represents all the system types on which the facet operates. </returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FacetInfo.ToString">
      <summary>Renders a string input in the FacetInfo object.</summary>
      <returns>A string input in the FacetInfo object.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.FacetInfoCollection">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.FacetInfoCollection" /> class represents a collection of <see cref="T:Microsoft.SqlServer.Management.Dmf.FacetInfo" /> objects that represent all facets on the instance of SQL Server. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FacetInfoCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.FacetInfoCollection" /> class.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.FailedOperationException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.FailedOperationException" /> class is an exception that is raised when a policy-based management operation fails.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FailedOperationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.FailedOperationException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FailedOperationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.FailedOperationException" /> class with the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FailedOperationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FailedOperationException.#ctor(System.String,System.String,System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class that has the two specified types.</summary>
      <param name="operation">A <see cref="T:System.String" /> value that specifies the operation that failed.</param>
      <param name="failedObjectName">A <see cref="T:System.String" /> value that specifies the name of the object that is associated with the operation.</param>
      <param name="failedObjectType">A <see cref="T:System.String" /> value that specifies the type of the object that is associated with the operation.</param>
      <param name="innerException">A <see cref="T:System.String" /> value that specifies the second type that is associated with the exception.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FailedOperationException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FailedOperationException.FailedObjectName">
      <summary>Gets the name of the object that is associated with the failed operation.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name of the object that is associated with the failed operation.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FailedOperationException.FailedObjectType">
      <summary>Gets the type of the object that is associated with the failed operation.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the type of the object that is associated with the failed operation.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FailedOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FailedOperationException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FailedOperationException.Operation">
      <summary>Gets the operation that failed.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the operation that failed.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.FunctionBadDatePartException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.FunctionBadDatePartException" /> class is an exception that is raised when the date that is supplied to the function is not the correct format.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionBadDatePartException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.FunctionBadDatePartException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionBadDatePartException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.FunctionBadDatePartException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionBadDatePartException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FunctionBadDatePartException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionBadDatePartException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.FunctionNoServerException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.FunctionNoServerException" /> class is an exception that is raised when the server is not recognized.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionNoServerException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.FunctionNoServerException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionNoServerException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.FunctionNoServerException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionNoServerException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FunctionNoServerException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionNoServerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.FunctionNotASmoObjectException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.FunctionNotASmoObjectException" /> class is an exception that is raised when the function encounters an unsupported object.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionNotASmoObjectException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.FunctionNotASmoObjectException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionNotASmoObjectException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.FunctionNotASmoObjectException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionNotASmoObjectException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionNotASmoObjectException.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class that has the specified function and object type.</summary>
      <param name="functionName">A <see cref="T:System.String" /> value that specifies the name of the function that is associated with the exception.</param>
      <param name="targetType">A <see cref="T:System.String" /> value that specifies type of object that is not supported. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FunctionNotASmoObjectException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FunctionNotASmoObjectException.FunctionName">
      <summary>Gets the name of the function that is associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name of the function that is associated with the exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionNotASmoObjectException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FunctionNotASmoObjectException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FunctionNotASmoObjectException.TargetType">
      <summary>Gets the type of object that is associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the type of object that is associated with the exception.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.FunctionTooManyColumnsException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.FunctionTooManyColumnsException" /> class is an exception that is raised when the function has too many columns.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionTooManyColumnsException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.FunctionTooManyColumnsException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionTooManyColumnsException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.FunctionTooManyColumnsException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionTooManyColumnsException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FunctionTooManyColumnsException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionTooManyColumnsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentsNumberException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentsNumberException" /> class is an exception that is raised when the function receives the incorrect number of arguments.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentsNumberException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentsNumberException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentsNumberException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentsNumberException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentsNumberException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentsNumberException.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class that has the specified function, received and expected types.</summary>
      <param name="functionName">A <see cref="T:System.String" /> value that specifies the name of the function that is associated with the exception.</param>
      <param name="receivedCount">An <see cref="T:System.Int32" /> value that specifies the number of arguments that are received by the function. </param>
      <param name="expectedCount">A <see cref="T:System.Int32" /> value that specifies the number of arguments that are expected by the function. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentsNumberException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentsNumberException.ExpectedCount">
      <summary>Gets the expected number of arguments.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the number of expected arguments for the function.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentsNumberException.FunctionName">
      <summary>Gets the name of the function that caused the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name of the function.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentsNumberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentsNumberException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentsNumberException.ReceivedCount">
      <summary>Gets the expected number of arguments.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the number of arguments that are expected by the function.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentTypeException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentTypeException" /> class is an exception that is raised when the function receives an argument that is the incorrect type.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentTypeException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentTypeException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentTypeException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentTypeException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentTypeException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentTypeException.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class that has the specified function, and received and expected types.</summary>
      <param name="functionName">A <see cref="T:System.String" /> value that specifies the function that caused the exception.</param>
      <param name="receivedType">A <see cref="T:System.String" /> value that specifies the type of argument that was received by the function. </param>
      <param name="expectedType">A <see cref="T:System.String" /> value that specifies the type of argument that was expected by the function. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentTypeException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentTypeException.ExpectedType">
      <summary>Gets the type that was expected by the function.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the type that was expected by the function.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentTypeException.FunctionName">
      <summary>Gets the name of the function that caused the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name of the function.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentTypeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentTypeException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FunctionWrongArgumentTypeException.ReceivedType">
      <summary>Gets the type that was received by the function.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the type that was received by the function.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.FunctionWrongReturnTypeException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.FunctionWrongReturnTypeException" /> class is an exception that is raised when the specified return type is not the same as the type that is returned by the function.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionWrongReturnTypeException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.FunctionWrongReturnTypeException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionWrongReturnTypeException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.FunctionWrongReturnTypeException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionWrongReturnTypeException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionWrongReturnTypeException.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class with the specified function, expected return type and actual return type.</summary>
      <param name="functionName">A <see cref="T:System.String" /> value that specifies the function that caused the exception.</param>
      <param name="receivedType">A <see cref="T:System.String" /> value that specifies the type that is returned by the function. </param>
      <param name="expectedType">A <see cref="T:System.String" /> value that specifies the type that is expected to be returned by the function. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FunctionWrongReturnTypeException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FunctionWrongReturnTypeException.ExpectedType">
      <summary>Gets the expected return type.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the expected return type.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FunctionWrongReturnTypeException.FunctionName">
      <summary>Gets the name of the function that caused the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name of the function that caused the exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.FunctionWrongReturnTypeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FunctionWrongReturnTypeException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.FunctionWrongReturnTypeException.ReceivedType">
      <summary>Gets the type that is returned by the function.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the type that is returned by the function.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ImportPolicyEnabledState">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.ImportPolicyEnabledState" /> enumeration contains values that are used to specify the state of the import policy.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ImportPolicyEnabledState.Unchanged">
      <summary>The import policy is unchanged.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ImportPolicyEnabledState.Enable">
      <summary>The import policy is enabled.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.ImportPolicyEnabledState.Disable">
      <summary>The import policy is disabled.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.InvalidInOperatorException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.InvalidInOperatorException" /> class is an exception that is raised when the operator is not valid.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.InvalidInOperatorException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.InvalidInOperatorException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.InvalidInOperatorException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.InvalidInOperatorException" /> class that has the specified operator type.</summary>
      <param name="opType">A <see cref="T:System.String" /> value that specifies the operator type.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.InvalidInOperatorException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.InvalidInOperatorException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.InvalidInOperatorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.InvalidInOperatorException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.InvalidInOperatorException.OperatorType">
      <summary>Gets the operator type.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the operator type.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.InvalidOperandException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.InvalidOperandException" /> class is an exception that is raised when an operand is encountered that is not valid.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.InvalidOperandException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.InvalidOperandException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.InvalidOperandException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.InvalidOperandException" /> class with the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.InvalidOperandException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class with the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.InvalidOperandException.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class with the specified node type and operand.</summary>
      <param name="nodeType">A <see cref="T:System.String" /> value that specifies the type of node.</param>
      <param name="operand">A <see cref="T:System.String" /> value that specifies the operand that is not valid. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.InvalidOperandException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.InvalidOperandException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.InvalidOperandException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.InvalidOperandException.NodeType">
      <summary>Gets the type of node that is associated with the operand.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the type of node that is associated with the operand.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.InvalidOperandException.Type">
      <summary>Gets the type on which the operand that was not valid was operating.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the type on which the operand that was not valid was operating.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.MissingJobScheduleException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.MissingJobScheduleException" /> class is an exception that is raised when there in no job schedule.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.MissingJobScheduleException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.MissingJobScheduleException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.MissingJobScheduleException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.MissingJobScheduleException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.MissingJobScheduleException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExceptionAlreadyRegisteredException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.MissingJobScheduleException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.MissingJobScheduleException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.MissingObjectException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.MissingObjectException" /> class is an exception that is raised when a specified object is missing.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.MissingObjectException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.MissingObjectException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.MissingObjectException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.MissingObjectException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.MissingObjectException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.MissingObjectException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.MissingObjectException.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.MissingObjectException" /> class that has the specified received name and expected name.</summary>
      <param name="objectType">A <see cref="T:System.String" /> value that specifies the type of object that is missing.</param>
      <param name="objectName">A <see cref="T:System.String" /> value that specifies the name of the object that is missing. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.MissingObjectException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.MissingObjectException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.MissingObjectException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.MissingObjectException.ObjectName">
      <summary>Gets the name of the object that is missing.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name of the object that is missing.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.MissingObjectException.ObjectType">
      <summary>Gets the type of object that is missing.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the type of object that is missing.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.MissingPropertyException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.MissingPropertyException" /> class is an exception that is raised when a specified property is missing.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.MissingPropertyException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.MissingPropertyException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.MissingPropertyException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.MissingPropertyException" /> class that has the specified message text.</summary>
      <param name="propertyName">A <see cref="T:System.String" /> value that specifies the name of the missing property.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.MissingPropertyException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.MissingPropertyException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.MissingPropertyException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.MissingPropertyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.MissingPropertyException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.MissingPropertyException.PropertyName">
      <summary>Gets the name of the missing property.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name of the missing property.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.MissingTypeFacetAssociationException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.MissingTypeFacetAssociationException" /> class is an exception that is raised when a specified association between a facet and a type is missing.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.MissingTypeFacetAssociationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.MissingTypeFacetAssociationException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.MissingTypeFacetAssociationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.MissingTypeFacetAssociationException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.MissingTypeFacetAssociationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.MissingTypeFacetAssociationException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.MissingTypeFacetAssociationException.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.MissingTypeFacetAssociationException" /> class that has the specified type name and facet.</summary>
      <param name="typeName">A <see cref="T:System.String" /> value that specifies the type name.</param>
      <param name="facet">A <see cref="T:System.String" /> value that specifies the name of the facet. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.MissingTypeFacetAssociationException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.MissingTypeFacetAssociationException.Facet">
      <summary>Gets the facet that is missing.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the facet that is missing.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.MissingTypeFacetAssociationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object. </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.MissingTypeFacetAssociationException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.MissingTypeFacetAssociationException.TypeName">
      <summary>Gets the type that is missing.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the type that is missing.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.NameConditionType">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.NameConditionType" /> enumeration contains values that are used to specify the condition that is used in a policy.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.NameConditionType.None">
      <summary>There is no condition.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.NameConditionType.Equal">
      <summary>The nodes of the expression must be equal.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.NameConditionType.Like">
      <summary>The nodes of the expression must be like each other, as with the Transact-SQL LIKE statement.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.NameConditionType.NotEqual">
      <summary>The nodes of the expression must not be equal.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.NameConditionType.NotLike">
      <summary>The nodes of the expression must not be like each other. See the Transact-SQL LIKE statement.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.NonConfigurableReadOnlyPropertyException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.NonConfigurableReadOnlyPropertyException" /> class is an exception that is raised when there is an attempt to configure a read-only property.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.NonConfigurableReadOnlyPropertyException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.NonConfigurableReadOnlyPropertyException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.NonConfigurableReadOnlyPropertyException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.NonConfigurableReadOnlyPropertyException" /> class that has the specified property.</summary>
      <param name="propertyName">A <see cref="T:System.String" /> value that specifies the property caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.NonConfigurableReadOnlyPropertyException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.NonConfigurableReadOnlyPropertyException" /> class with the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.NonConfigurableReadOnlyPropertyException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.NonConfigurableReadOnlyPropertyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.NonConfigurableReadOnlyPropertyException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.NonConfigurableReadOnlyPropertyException.PropertyName">
      <summary>Gets the property that caused the exception.</summary>
      <returns>A <see cref="T:System.String" /> object that specifies the property that caused the exception.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.NonRetrievablePropertyException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.NonRetrievablePropertyException" /> class is an exception that is raised when a property cannot be retrieved.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.NonRetrievablePropertyException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.NonRetrievablePropertyException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.NonRetrievablePropertyException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.NonRetrievablePropertyException" /> class that has the specified message text.</summary>
      <param name="propertyName">A <see cref="T:System.String" /> value that specifies the property that cannot be retrieved.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.NonRetrievablePropertyException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.NonRetrievablePropertyException" /> class that has the specified message text and inner exception.</summary>
      <param name="propertyName">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.NonRetrievablePropertyException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.NonRetrievablePropertyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.NonRetrievablePropertyException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.NonRetrievablePropertyException.PropertyName">
      <summary>Gets the property that cannot be retrieved.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the property that cannot be retrieved.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.NoTargetSetEnabledException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.NoTargetSetEnabledException" /> class is an exception that is raised when the target set has not been enabled. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.NoTargetSetEnabledException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.NoTargetSetEnabledException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.NoTargetSetEnabledException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.NoTargetSetEnabledException" /> class that has the specified message text.</summary>
      <param name="objectSetName">A <see cref="T:System.String" /> value that specifies the target set that is not enabled.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.NoTargetSetEnabledException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.NoTargetSetEnabledException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.NoTargetSetEnabledException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.NoTargetSetEnabledException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.NoTargetSetEnabledException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.NoTargetSetEnabledException.ObjectSetName">
      <summary>Gets the target set that is not enabled.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the target set that is not enabled.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.NullFacetException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.NullFacetException" /> class is an exception that is raised when the facet is not set.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.NullFacetException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.NullFacetException" /></summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.NullFacetException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.NullFacetException" /> class that has the specified message text.</summary>
      <param name="facet">A <see cref="T:System.String" /> value that specifies the facet that is not set.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.NullFacetException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.NullFacetException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.NullFacetException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.NullFacetException.Facet">
      <summary>Gets the facet that is not set.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the facet that is not set.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.NullFacetException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.NullFacetException.Message">
      <summary>Gets the system-generated message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the system-generated message associated with the exception.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ObjectAlreadyExistsException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectAlreadyExistsException" /> class is an exception that is raised when an attempt to create an object that already exists is made.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectAlreadyExistsException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectAlreadyExistsException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectAlreadyExistsException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectAlreadyExistsException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectAlreadyExistsException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectAlreadyExistsException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectAlreadyExistsException.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectAlreadyExistsException" /> class with the specified type name and facet.</summary>
      <param name="objectType">A <see cref="T:System.String" /> value that specifies the type of object that already exists.</param>
      <param name="objectName">A <see cref="T:System.String" /> value that specifies the name of the object that already exists. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ObjectAlreadyExistsException.DmfExceptionType">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> object that describest the type of the exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> object that describest the type of the exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ObjectAlreadyExistsException.Message">
      <summary>Gets the system-generated message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ObjectAlreadyExistsException.ObjectName">
      <summary>Gets the name of the object that already exists.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name of the object that already exists.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ObjectAlreadyExistsException.ObjectType">
      <summary>Gets the type of object that already exists.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies type of object that already exists.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ObjectSet">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.ObjectSet" /> object represents a policy-based management set of objects. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.#ctor(Microsoft.SqlServer.Management.Dmf.PolicyStore,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" /> class that has the specified parent policy store and the specified name.</summary>
      <param name="parent">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" /> object that specifies the parent policy store.</param>
      <param name="name">A <see cref="T:System.String" /> value that specifies the name of the object set.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.Alter">
      <summary>Alters the definition of an <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" /> created previously.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.CalculateTargets(Microsoft.SqlServer.Management.Common.ISfcConnection)">
      <summary>Calculates an expression with results applied to the targets.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> object.</returns>
      <param name="targetConnection">A <see cref="T:Microsoft.SqlServer.Management.Common.ISfcConnection" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.CalculateTargets(Microsoft.SqlServer.Management.Common.ISfcConnection,Microsoft.SqlServer.Management.Sdk.Sfc.SfcQueryExpression)">
      <summary>Calculates an expression with results applied to the targets.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> object.</returns>
      <param name="targetConnection">A <see cref="T:Microsoft.SqlServer.Management.Common.ISfcConnection" /> object.</param>
      <param name="sfcQueryExpression">A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcQueryExpression" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.CalculateTargets(Microsoft.SqlServer.Management.Sdk.Sfc.SqlStoreConnection,Microsoft.SqlServer.Management.Dmf.Condition,Microsoft.SqlServer.Management.Dmf.AdHocPolicyEvaluationMode,System.String,System.Object[]@,Microsoft.SqlServer.Management.Dmf.TargetEvaluation[]@)">
      <summary>Calculates an expression with results applied to the targets.</summary>
      <param name="targetConnection">A <see cref="T:Microsoft.SqlServer.Management.Common.ISfcConnection" /> object.</param>
      <param name="condition">A <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition" /> object.</param>
      <param name="evaluationMode">An <see cref="T:Microsoft.SqlServer.Management.Dmf.AdHocPolicyEvaluationMode" /> object.</param>
      <param name="policyCategory">A string value that specifies the policy.</param>
      <param name="conforming">A pointer to <see cref="T:System.Object" /> array.</param>
      <param name="violating">A pointer to <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetEvaluation" /> array.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.CalculateTargets(Microsoft.SqlServer.Management.Sdk.Sfc.SqlStoreConnection,System.String)">
      <summary>Calculates an expression with results applied to the targets.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> object.</returns>
      <param name="sqlStoreConnection">A <see cref="T:Microsoft.SqlServer.Management.Common.ISfcConnection" /> object.</param>
      <param name="policyCategory">A string value that specifies the policy.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.Create">
      <summary>Creates an <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" /> without parent.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.Discover(Microsoft.SqlServer.Management.Sdk.Sfc.ISfcDependencyDiscoveryObjectSink)">
      <summary>Discovers an <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" /> and adds it to the <paramref name="sink" /> object identified by the parameter.</summary>
      <param name="sink">A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcDependencyDiscoveryObjectSink" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.Drop">
      <summary>Drops an <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ObjectSet.Facet">
      <summary>Gets or sets the facet value for the object set.</summary>
      <returns>A <see cref="T:System.String" /> value that contains the facet value for the object set.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.GetObjectFactory">
      <summary>Gets the object factory.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcObjectFactory" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ObjectSet.ID">
      <summary>Gets the ID value that uniquely identifies the object set.</summary>
      <returns>An <see cref="T:System.Int32" /> value that contains the ID value that uniquely identifies the object set.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ObjectSet.IdentityKey">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey" /> object.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ObjectSet.IsSystemObject">
      <summary>Determines whether the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" /> is a <see cref="T:System.Object" />.</summary>
      <returns>A Boolean value, True if the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" /> is a <see cref="T:System.Object" />, otherwise False.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcValidate#Validate(System.String,System.Object[])">
      <summary>Validates an <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" />.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ValidationState" /> object.</returns>
      <param name="validationMethod">A string value that specifies the validation method.</param>
      <param name="arguments">An array of <see cref="T:System.Object" /> arguments.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ObjectSet.Name">
      <summary>Gets the name of the object set.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name of the object set.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ObjectSet.Parent">
      <summary>Gets or sets the parent of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" /> object.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" /> value that specifies the parent of the object set.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.ScriptAlter">
      <summary>Alters a previously created <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcScript" /> object.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcScript" /> object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.ScriptCreate">
      <summary>Creates a <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcScript" /> object.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcScript" /> object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.ScriptDrop">
      <summary>Drops an <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcScript" /> object.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcScript" /> object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.SetFacetWithDomain(System.String,System.String)">
      <summary>Sets a facet on the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" /> with an <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcDomain" /> object specified by the <paramref name="domain" /> parameter.</summary>
      <param name="facet">A string value that contains the facet value.</param>
      <param name="domain">A string value that specifies the <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcDomain" />.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ObjectSet.TargetSets">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetCollection" />.</summary>
      <returns>A target set collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.Validate(System.String)">
      <summary>Validates the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" /> object.</summary>
      <param name="mode">A string that specifies the mode of validation.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key" /> class represents the key that identifies the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf" />.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key.#ctor(Microsoft.SqlServer.Management.Dmf.ObjectSet.Key)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key" /> class based on the specified key.</summary>
      <param name="other">A <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key" /> value that specifies the other key.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key" /> class that has the specified name.</summary>
      <param name="name">A <see cref="T:System.String" /> value that specifies the name of the key.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key.Equals(Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey)">
      <summary>Determines whether the two specified objects are equal. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the specified key is equal to the referenced object key. If True, the key values are equal. Otherwise, False.</returns>
      <param name="key">A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey" /> value that specifies one object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key.Equals(System.Object)">
      <summary>Determines whether the specified object key is equal to the referenced object key. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the specified key is equal to the referenced object key. If True, the key values are equal. Otherwise, False.</returns>
      <param name="obj">A <see cref="T:System.Object" /> value that specifies the object to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key.Equals(System.Object,System.Object)">
      <summary>Determines whether the specified object key is equal to the referenced object key.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the specified key is equal to the referenced object key. If True, the key values are equal. Otherwise, False.</returns>
      <param name="obj1">A <see cref="T:System.Object" /> value that specifies one object.</param>
      <param name="obj2">A <see cref="T:System.Object" /> value that specifies another object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key.GetHashCode">
      <summary>Gets the hash code for the object.</summary>
      <returns>A <see cref="T:System.Int32" /> value that specifies the hash code.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key.GetUrnFragment">
      <summary>Gets the unique resource name (URN) path partial string that represents the object set. </summary>
      <returns>A <see cref="T:System.String" /> value that contains the URN fragment.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key.Name">
      <summary>Gets the name of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" /> key.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name of the key value.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key.op_Equality(Microsoft.SqlServer.Management.Dmf.ObjectSet.Key,Microsoft.SqlServer.Management.Dmf.ObjectSet.Key)">
      <summary>Performs a Boolean equality operation to determine whether two object sets reference the same object set.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two object sets are the same. Returns True if both parameters are null or reference the same object set. Otherwise, returns False.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key" /> object representing one of the object sets to compare.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key" /> object representing the other object sets to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key.op_Equality(Microsoft.SqlServer.Management.Dmf.ObjectSet.Key,System.Object)">
      <summary>Performs a Boolean equality operation to determine whether two object sets reference the same object set.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two object sets are the same. Returns True if both parameters are null or reference the same object set. Otherwise, returns False.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key" /> object representing one of the object sets to compare.</param>
      <param name="obj">A <see cref="T:System.Object" /> object representing the other object sets to compare. If the object does not reference a <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key" />, the method returns False.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key.op_Equality(System.Object,Microsoft.SqlServer.Management.Dmf.ObjectSet.Key)">
      <summary>Performs a Boolean equality operation to determine whether two object sets reference the same object set.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two object sets are the same. Returns True if both parameters are null or reference the same object set. Otherwise, returns False.</returns>
      <param name="obj">A <see cref="T:System.Object" /> object representing one of the object sets to compare. If the object does not reference a <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key" />, the method returns False.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key" /> object representing the other object sets to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key.op_Inequality(Microsoft.SqlServer.Management.Dmf.ObjectSet.Key,Microsoft.SqlServer.Management.Dmf.ObjectSet.Key)">
      <summary>Performs a Boolean equality operation to determine whether two object sets reference the same object set.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two object sets are the same. Returns True if the parameters reference separate object set, or if only one of the parameters is null. Otherwise, returns False.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key" /> object representing one of the object sets to compare.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key" /> object representing the other object set to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key.op_Inequality(Microsoft.SqlServer.Management.Dmf.ObjectSet.Key,System.Object)">
      <summary>Performs a Boolean equality operation to determine whether two object set keys reference the same object set.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two object sets are the same. Returns True if the parameters reference separate object set, or if only one of the parameters is null. Otherwise, returns False.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key" /> object representing one of the object sets to compare.</param>
      <param name="obj">A <see cref="T:System.Object" /> object representing the other object set to compare. If the object does not reference a <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key" />, the method returns True.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key.op_Inequality(System.Object,Microsoft.SqlServer.Management.Dmf.ObjectSet.Key)">
      <summary>Performs a Boolean equality operation to determine whether two object set keys reference the same object set.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two object sets are the same. Returns True if the parameters reference separate object set, or if only one of the parameters is null. Otherwise, returns False.</returns>
      <param name="obj">A <see cref="T:System.Object" /> object representing one of the object sets to compare. If the object does not reference a <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key" />, the method returns True.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet.Key" /> object representing the other Object set to compare.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ObjectSetCollection">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSetCollection" /> class represents a collection of <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" /> objects that represent all the object sets in the policy store. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSetCollection.#ctor(Microsoft.SqlServer.Management.Dmf.PolicyStore)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSetCollection" /> class.</summary>
      <param name="parent">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" /> object value that specifies the parent of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSetCollection" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectSetCollection.Contains(System.String)">
      <summary>Verifies whether the specified string exists in the collection. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the specified string exists in the collection. If True, the key values are equal. Otherwise, False.</returns>
      <param name="name">The <see cref="T:System.String" /> value that is to be found in the collection.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ObjectSetCollection.Item(System.String)">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" /> object in the collection by name.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" /> object value that represents the object set that has the specified name.</returns>
      <param name="name">A <see cref="T:System.String" /> value that specifies the name of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" /> object in the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSetCollection" /> collection.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.ObjectValidationException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectValidationException" /> class is an exception that is raised when an object encounters an error during validation.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectValidationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectValidationException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectValidationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectValidationException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectValidationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectValidationException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectValidationException.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectValidationException" /> class that has the specified object name and type.</summary>
      <param name="objectType">A <see cref="T:System.String" /> value that specifies the type of object that encountered an error during validation.</param>
      <param name="objectName">A <see cref="T:System.String" /> value that specifies the name of the object that encountered an error during validation. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectValidationException.#ctor(System.String,System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectValidationException" /> class that has the specified object name, object type and inner exception.</summary>
      <param name="objectType">A <see cref="T:System.String" /> value that specifies the type of object that encountered an error during validation.</param>
      <param name="objectName">A <see cref="T:System.String" /> value that specifies the name of the object that encountered an error during validation. </param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ObjectValidationException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.ObjectValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ObjectValidationException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ObjectValidationException.ObjectName">
      <summary>Gets the name of the object that encountered an error during validation.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name of the object that encountered an error during validation.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.ObjectValidationException.ObjectType">
      <summary>Gets the type of the object that encountered an error during validation.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the type of object that encountered an error during validation.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.OperatorNotApplicableException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.OperatorNotApplicableException" /> class is an exception that is raised when an operator does not have the appropriate permissions.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.OperatorNotApplicableException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.OperatorNotApplicableException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.OperatorNotApplicableException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.OperatorNotApplicableException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.OperatorNotApplicableException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.OperatorNotApplicableException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.OperatorNotApplicableException.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.OperatorNotApplicableException" /> class that has the specified operator and object type.</summary>
      <param name="operatorName">A <see cref="T:System.String" /> value that specifies the name of the operator.</param>
      <param name="typeName">A <see cref="T:System.String" /> value that specifies the type of object. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.OperatorNotApplicableException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.OperatorNotApplicableException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.OperatorNotApplicableException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.OperatorNotApplicableException.Operator">
      <summary>Gets the operator that is not applicable.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the referenced operator.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.OperatorNotApplicableException.Type">
      <summary>Gets the type of object for which the operator is not applicable.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the type of object.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.OperatorType">
      <summary>Specifies the type of operator.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.OperatorType.NONE">
      <summary>None operator.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.OperatorType.AND">
      <summary>Logical AND operator.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.OperatorType.OR">
      <summary>Logical OR operator.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.OperatorType.EQ">
      <summary>Equals operator.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.OperatorType.NE">
      <summary>Not equals operator.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.OperatorType.LT">
      <summary>Less than operator.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.OperatorType.GT">
      <summary>Greater than operator.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.OperatorType.LE">
      <summary>Less than or equals operator.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.OperatorType.GE">
      <summary>Greater than or equals operator.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.OperatorType.IN">
      <summary>In group operator.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.OperatorType.LIKE">
      <summary>Like operator.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.OperatorType.NOT_IN">
      <summary>Not in group operator.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.OperatorType.NOT_LIKE">
      <summary>Not like group operator.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.OperatorType.BEQ">
      <summary>Bitwise equals operator.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.OperatorType.BNE">
      <summary>Bitwise not equals operator.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.Policy">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> object represents a Policy-Based Management policy. A policy represents the relationship between a target object and a condition. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.#ctor(Microsoft.SqlServer.Management.Dmf.PolicyStore,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> class.</summary>
      <param name="parent">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" /> object value that specifies the policy store to which the policy belongs.</param>
      <param name="name">A <see cref="T:System.String" /> value that specifies the name of the policy.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.Alter">
      <summary>Updates any <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> object property changes on the instance of SQL Server.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.AutomatedPolicyEvaluationMode">
      <summary>Gets or sets the evaluation mode.</summary>
      <returns>The evaluation mode.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.CategoryId">
      <summary>Gets the ID value that uniquely identifies the category that is associated with the policy.</summary>
      <returns>An <see cref="T:System.Int32" /> value that specifies the category ID value.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.Condition">
      <summary>Gets or sets the condition.</summary>
      <returns>A string value that specifies the condition.</returns>
    </member>
    <member name="E:Microsoft.SqlServer.Management.Dmf.Policy.ConnectionProcessingFinished">
      <summary>Represents the event activated when connection processing completes.</summary>
    </member>
    <member name="E:Microsoft.SqlServer.Management.Dmf.Policy.ConnectionProcessingStarted">
      <summary>Represents the event activated when connection processing begins.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.Create">
      <summary>Creates management policy item.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.CreateDate">
      <summary>Gets the date and time when the policy was created.</summary>
      <returns>A <see cref="T:System.DateTime" /> system object value that specifies the date and time when the policy was created.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.CreatedBy">
      <summary>Gets the policy store authentication credentials of the user who created the policy.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the policy authentication credentials of the user who created the policy.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.DateModified">
      <summary>Gets the date and time when the policy was last modified.</summary>
      <returns>A <see cref="T:System.DateTime" /> system object value that specifies the date and time when the policy was last modified.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.Description">
      <summary>Gets or sets the textual description of the policy.</summary>
      <returns>A <see cref="T:System.String" /> value that contains the textual description of the policy.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.Discover(Microsoft.SqlServer.Management.Sdk.Sfc.ISfcDependencyDiscoveryObjectSink)">
      <summary>Discovers conditions in the <see cref="P:Microsoft.SqlServer.Management.Dmf.Policy.ObjectSet" /> and adds them to the <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcDependencyDiscoveryObjectSink" /> identified by the <paramref name="sink" /> parameter.</summary>
      <param name="sink">A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcDependencyDiscoveryObjectSink" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.Drop">
      <summary>Removes the policy from the instance of SQL Server.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.Enabled">
      <summary>Gets or set the <see cref="T:System.Boolean" /> value that specifies whether the policy is enabled.</summary>
      <returns>A <see cref="T:System.Boolean" /> object value that specifies whether the policy is enabled.If True, the policy is enabled. Otherwise, False (default).</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.Evaluate(Microsoft.SqlServer.Management.Dmf.AdHocPolicyEvaluationMode,Microsoft.SqlServer.Management.Common.ISfcConnection[])">
      <summary>Evaluates the <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> object and applies policy to the data in identified by the <paramref name="targetConnections" /> parameter.</summary>
      <returns>A Boolean value, True if the operation succeeds, otherwise False.</returns>
      <param name="evaluationMode">A <see cref="T:Microsoft.SqlServer.Management.Dmf.AdHocPolicyEvaluationMode" /> object.</param>
      <param name="targetConnections">An array of <see cref="T:Microsoft.SqlServer.Management.Common.ISfcConnection" /> objects.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.Evaluate(Microsoft.SqlServer.Management.Dmf.AdHocPolicyEvaluationMode,Microsoft.SqlServer.Management.Sdk.Sfc.SfcQueryExpression,Microsoft.SqlServer.Management.Common.ISfcConnection[])">
      <summary>Evaluates the <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> object and applies policy to the data in identified by the <paramref name="targetConnections" /> parameter.</summary>
      <returns>A Boolean value, True if the operation succeeds, otherwise False.</returns>
      <param name="evaluationMode">A <see cref="T:Microsoft.SqlServer.Management.Dmf.AdHocPolicyEvaluationMode" /> object.</param>
      <param name="targetQueryExpression">A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcQueryExpression" /> object.</param>
      <param name="targetConnections">An array of <see cref="T:Microsoft.SqlServer.Management.Common.ISfcConnection" /> objects.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.Evaluate(Microsoft.SqlServer.Management.Dmf.AdHocPolicyEvaluationMode,System.Object[])">
      <summary>Immediately executes the policy against the specified target objects by using the specified evaluation mode.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that verifies whether the policy was executed successfully.If True, the policy was executed successfully. Otherwise, False.</returns>
      <param name="evaluationMode">An <see cref="T:Microsoft.SqlServer.Management.Dmf.AdHocPolicyEvaluationMode" /> object that specifies the evaluation mode to use when the policy executes against the specified target.</param>
      <param name="targetObjects">An <see cref="T:System.Object[]" /> object that specifies target objects.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.EvaluationHistories">
      <summary>Gets the evaluation histories collection.</summary>
      <returns>The evaluation histories collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.GetObjectFactory">
      <summary>Gets the object factory for the object.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Sfc.SfcObjectFactory" /> that contains the object factory for the policy object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.HasScript">
      <summary>Gets the <see cref="T:System.Boolean" /> value that specifies whether the policy has a script.</summary>
      <returns>A <see cref="T:System.Boolean" /> object that specifies whether the policy has a script.If True, the policy has a script. Otherwise, False.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.HelpLink">
      <summary>Gets or sets a URN to additional help information for the policy. </summary>
      <returns>A <see cref="T:System.String" /> value that specifies the help link for the policy.</returns>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.Policy.HelpLinkStringMaxLength">
      <summary>Specifies the maximum length of the link to help text.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.HelpText">
      <summary>Gets or sets the display name for the help text.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the display name for the help text.</returns>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.Policy.HelpTextStringMaxLength">
      <summary>Specifies the maximum length of the help text.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.ID">
      <summary>Gets the ID value that uniquely identifies the policy.</summary>
      <returns>An <see cref="T:System.Int32" /> value that specifies the unique ID value for the policy.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.IdentityKey">
      <summary>Gets the key that identifies the policy.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.Key" /> object value that specifies the identity key.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.IsSystemObject">
      <summary>Determines whether the <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> object is a <see cref="T:System.Object" />.</summary>
      <returns>A Boolean value, True if the policy object is a <see cref="T:System.Object" />, otherwise False.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcRenamable#Rename(Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey)">
      <summary>Renames the instance of <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> identified by the <paramref name="key" /> parameter.</summary>
      <param name="key">An <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcRenamable#ScriptRename(Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey)">
      <summary>Renames a script in the policy.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcScript" /> object representing the renamed script.</returns>
      <param name="key">A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey" /> object that identifies the script to rename.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcValidate#Validate(System.String,System.Object[])">
      <summary>Validates a <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> object.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ValidationState" /> object.</returns>
      <param name="validationMethod">A string value that specifies the validation method.</param>
      <param name="arguments">An array of <see cref="T:System.String,System.Object" /> arguments.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.ModifiedBy">
      <summary>Gets the policy store authentication credentials of the user who last modified the policy.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the policy store authentication credentials for the user who last modified the policy.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.Name">
      <summary>Gets the name of the <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> object.</summary>
      <returns>A string value that specifies the name of the <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.ObjectSet">
      <summary>Gets or sets the set of objects that are associated with the policy. </summary>
      <returns>A <see cref="T:System.String" /> object that specifies the object set.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.Parent">
      <summary>Gets or sets the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" /> that is the parent of the policy object. </summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" /> object that is the parent of the object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.PolicyCategory">
      <summary>Gets or sets the category that is associated with the policy. </summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory" /> object that is associated with the policy.</returns>
    </member>
    <member name="E:Microsoft.SqlServer.Management.Dmf.Policy.PolicyEvaluationFinished">
      <summary>Represents the event activated when policy evaluation completes.</summary>
    </member>
    <member name="E:Microsoft.SqlServer.Management.Dmf.Policy.PolicyEvaluationStarted">
      <summary>Represents the event activated when policy evaluation begins.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.ProduceConfigureScript(System.Object)">
      <summary>Gets the condition of a <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> object.</summary>
      <returns>A string value that contains the condition.</returns>
      <param name="target">The <see cref="T:System.Object" /> from which to extract the condition.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.Rename(System.String)">
      <summary>Renames the policy.</summary>
      <param name="name">A <see cref="T:System.String" /> value that specifies the new name of the policy.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.RootCondition">
      <summary>Gets or sets the name of the root condition for this policy. </summary>
      <returns>A <see cref="T:System.String" /> object that specifies the root condition for the policy.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.ScheduleUid">
      <summary>Gets or sets the <see cref="T:System.Guid" /> that identifies the SQL Server Agent schedule that checks on the policy.</summary>
      <returns>A <see cref="T:System.Guid" /> object value that identifies the SQL Server Agent schedule that is associated with the policy.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.ScriptAlter">
      <summary>Alters the script that is used to create the policy.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Managment.Sfc.ISfcScript" /> object that contains the altered script.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.ScriptAlterWithObjectSet">
      <summary>Alters a previously created <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcScript" /> object of the <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> object.</summary>
      <returns>The modified <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcScript" /> object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.ScriptCreate">
      <summary>Creates a script that is used to create the policy.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Managment.Sfc.ISfcScript" /> object that contains the new script.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.ScriptCreateWithDependencies">
      <summary>Creates the <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcScript" /> object of the <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> object.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcScript" /> object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.ScriptCreateWithObjectSet">
      <summary>Creates the <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcScript" /> object of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" />.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcScript" /> object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.ScriptDrop">
      <summary>Drops the script that is used to create the policy.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Managment.Sfc.ISfcScript" /> object that contains the dropped script.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.ScriptDropWithObjectSet">
      <summary>Drops the <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcScript" /> object of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" />.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcScript" /> object.</returns>
    </member>
    <member name="E:Microsoft.SqlServer.Management.Dmf.Policy.TargetProcessed">
      <summary>Represents the event activated when policy target is processed.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.UsesFacet(System.String)">
      <summary>Determines whether the facet identified by the parameter is contained by the <see cref="P:Microsoft.SqlServer.Management.Dmf.Policy.Condition" />.</summary>
      <returns>A Boolean value, True if the facet is contained by the <see cref="P:Microsoft.SqlServer.Management.Dmf.Policy.Condition" />, otherwise False.</returns>
      <param name="facet">A string value that contains the facet.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.Validate(System.String)">
      <summary>Validates a <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> object as specified by the <paramref name="mode" /> parameter.</summary>
      <param name="mode">A string value that specifies the <see cref="P:Microsoft.SqlServer.Management.Dmf.Policy.AutomatedPolicyEvaluationMode" />.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.Policy.ConnectionProcessingFinishedEventArgs">
      <summary>Represents the arguments that are passed to the event handler when the connection processing is finished. </summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.ConnectionProcessingFinishedEventArgs.Connection">
      <summary>Gets or sets the <see cref="T:Microsoft.SqlServer.Management.Common.Connection" /> object.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Management.Common.Connection" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.ConnectionProcessingFinishedEventArgs.Exception">
      <summary>Gets or sets the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyEvaluationException" /> object.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyEvaluationException" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.ConnectionProcessingFinishedEventArgs.Result">
      <summary>Gets or sets the result of connection processing.</summary>
      <returns>A Boolean value, True if connection processing succeeds, otherwise False.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.ConnectionProcessingFinishedEventArgs.RootCheckPassed">
      <summary>Gets or sets the result of root checking.</summary>
      <returns>A Boolean value, True if root checking passed, otherwise False.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.ConnectionProcessingFinishedEventArgs.TargetsEvaluated">
      <summary>Gets or sets an integer value that represents the result of target evaluation.</summary>
      <returns>An <see cref="T:System.Int32" /> defined value.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.Policy.ConnectionProcessingFinishedEventHandler">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.ConnectionProcessingFinishedEventHandler" /> class represents the event handler that handles the event that occurs when the processing of the connection has finished.</summary>
      <param name="sender">An <see cref="T:System.Object" /> value that specifies the source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.ConnectionProcessingFinishedEventHandler" /> object that contains the event data. </param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.Policy.ConnectionProcessingStartedEventArgs">
      <summary>Represents the arguments that are passed to the event handler when the connection processing has started. </summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.ConnectionProcessingStartedEventArgs.Connection">
      <summary>Gets or sets the connection.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Sfc.ISfcConnection" /> object value that represents the connection.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.Policy.ConnectionProcessingStartedEventHandler">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.ConnectionProcessingStartedEventHandler" /> class represents the event handler that handles the event that occurs when the processing of a connection has started.</summary>
      <param name="sender">An <see cref="T:System.Object" /> value that specifies the source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.ConnectionProcessingStartedEventHandler" /> object that contains the event data. </param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.Policy.Key">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.Key" /> class represents the key that identifies each instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.Key.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.Key" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.Key.#ctor(Microsoft.SqlServer.Management.Dmf.Policy.Key)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.Key" /> class based on the specified key.</summary>
      <param name="other">A <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.Key" /> value that specifies the key to use in constructing a new object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.Key.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.Key" /> class that has the specified name.</summary>
      <param name="name">A <see cref="T:System.String" /> value that specifies the name of the key.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.Key.Equals(Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey)">
      <summary>Determines if the specified object is the same as the policy identified by the current <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.Key" /> object.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are equal. Otherwise, false.</returns>
      <param name="key">A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey" /> value that specifies the object to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.Key.Equals(System.Object)">
      <summary>Determines if the specified object is the same as the policy identified by the current <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.Key" /> object.</summary>
      <returns>A <see cref="T:System.Boolean" /> which is true if the operands are equal, otherwise false.</returns>
      <param name="obj">A <see cref="T:SystemObject" /> that specifies the object to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.Key.Equals(System.Object,System.Object)">
      <summary>Determines whether two objects are equal.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are equal. Otherwise, false.</returns>
      <param name="obj1">A <see cref="T:System.Object" /> value that specifies one object.</param>
      <param name="obj2">A <see cref="T:System.Object" /> value that specifies another object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.Key.GetHashCode">
      <summary>Gets the hash code for the object.</summary>
      <returns>A <see cref="T:System.Int32" /> value that specifies the hash code.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.Key.GetUrnFragment">
      <summary>Gets the unique resource name (URN) path partial string that represents the policy.</summary>
      <returns>A <see cref="T:System.String" /> value that contains the URN fragment.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.Key.Name">
      <summary>Gets a <see cref="T:System.String" /> value that specifies the name of the policy identified by the current <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.Key" />.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name of the policy identified by the current <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.Key" />.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.Key.op_Equality(Microsoft.SqlServer.Management.Dmf.Policy.Key,Microsoft.SqlServer.Management.Dmf.Policy.Key)">
      <summary>Determines whether the objects identified by two <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.Key" /> objects are the same.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are the same, otherwise false.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.Key" /> object that identifies the first object.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.Key" /> object that identifies the second object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.Key.op_Equality(Microsoft.SqlServer.Management.Dmf.Policy.Key,System.Object)">
      <summary>Determines whether the object identified by a <see cref="T:System.Object" /> is the same as the object identified by a <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.Key" />.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are the same, otherwise false.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.Key" /> object that identifies the first object.</param>
      <param name="obj">A <see cref="T:System.Object" /> that identifies the second object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.Key.op_Equality(System.Object,Microsoft.SqlServer.Management.Dmf.Policy.Key)">
      <summary>Determines whether the object identified by a <see cref="T:System.Object" /> is the same as the object identified by a <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.Key" />.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are the same, otherwise false.</returns>
      <param name="obj">A <see cref="T:System.Object" /> object that identifies the first object.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.Key" /> object that identifies the second object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.Key.op_Inequality(Microsoft.SqlServer.Management.Dmf.Policy.Key,Microsoft.SqlServer.Management.Dmf.Policy.Key)">
      <summary>Determines whether the objects identified by two <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.Key" /> objects are the same.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are different, otherwise false.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.Key" /> object that identifies the first object.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.Key" /> object that identifies the second object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.Key.op_Inequality(Microsoft.SqlServer.Management.Dmf.Policy.Key,System.Object)">
      <summary>Determines whether the object identified by a <see cref="T:System.Object" /> is different than the object identified by a <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.Key" />.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are different, otherwise false.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.Key" /> object that identifies the first object.</param>
      <param name="obj">A <see cref="T:System.Object" /> that identifies the second object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Policy.Key.op_Inequality(System.Object,Microsoft.SqlServer.Management.Dmf.Policy.Key)">
      <summary>Determines whether the object identified by a <see cref="T:System.Object" /> is different than the object identified by a <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.Key" />.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are different, otherwise false.</returns>
      <param name="obj">A <see cref="T:System.Object" /> object that identifies the first object.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.Key" /> object that identifies the second object.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.Policy.PolicyEvaluationFinishedEventArgs">
      <summary>Represents the arguments that are passed to the event handler when the evaluation of a policy finishes. </summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.PolicyEvaluationFinishedEventArgs.EvaluationHistory">
      <summary>Gets or sets an <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory" /> object value that represents the evaluation history.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory" /> object value that represents the evaluation history.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.PolicyEvaluationFinishedEventArgs.Exception">
      <summary>Gets or sets a <see cref="T:Microsoft.SqlServer.Dmf.PolicyEvaluationException" /> object that represents the policy evaluation exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyEvaluationException" /> object value that represents the policy evaluation exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.PolicyEvaluationFinishedEventArgs.Result">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that specifies the result of the policy evaluation.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies the result of the policy evaluation.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.Policy.PolicyEvaluationFinishedEventHandler">
      <summary>Represents the arguments that are passed to the event handler when a policy evaluation finishes. </summary>
      <param name="sender">The <see cref="T:System.Object" /> which initiated the event.</param>
      <param name="e">The <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy.PolicyEvaluationFinishedEventArgs" /> which contains the information needed to process the event.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.Policy.PolicyEvaluationStartedEventHandler">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyEvaluationStartedEventHandler" /> class represents the event handler that handles the event that occurs when the evaluation of a policy has started.</summary>
      <param name="sender">An <see cref="T:System.Object" /> value that specifies the source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyEvaluationStartedEventArgs" /> object that contains the event data. </param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.Policy.TargetProcessedEventArgs">
      <summary>Represents the arguments that are passed to the event handler when the target is processed. </summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.TargetProcessedEventArgs.ConfigurationErrorMessage">
      <summary>Gets or sets the configuration error message.</summary>
      <returns>A string value that contains the configuration error message.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.TargetProcessedEventArgs.Exception">
      <summary>Gets or sets the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyEvaluationException" /> object.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyEvaluationException" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.TargetProcessedEventArgs.ExpressionNode">
      <summary>Gets or sets the <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" /> object that is associated with the target.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.ExpressionNode" /> object that represents the expression node that is associated with the target.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.TargetProcessedEventArgs.IsConfigurable">
      <summary>Gets or sets the <see cref="T:System.Boolean" /> value that contains the result from processing the target.</summary>
      <returns>A <see cref="T:System.Boolean" /> value contains the result of processing the target.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.TargetProcessedEventArgs.Result">
      <summary>Gets or sets the <see cref="T:System.Boolean" /> value that contains the result of processing the target.</summary>
      <returns>A <see cref="T:System.Boolean" /> value contains the result of processing the target.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.TargetProcessedEventArgs.ServerName">
      <summary>Gets or sets the name of the server that processes the target.</summary>
      <returns>A string value that specifies the server.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.TargetProcessedEventArgs.TargetExpression">
      <summary>Gets or sets the target expression.</summary>
      <returns>A string value that specifies the target expression.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.Policy.TargetProcessedEventArgs.TargetObject">
      <summary>Gets the target <see cref="T:System.Object" />.</summary>
      <returns>The target <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.Policy.TargetProcessedEventHandler">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.TargetProcessedEventHandler" /> class represents the event handler that handles the event that occurs when the target has been processed.</summary>
      <param name="sender">An <see cref="T:System.Object" /> value that specifies the source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.SqlServer.Management.Smo.TargetProcessedEventHandler" /> object that contains the event data. </param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory">
      <summary>Represents a category that classifies policies in SQL Server Policy-Based Management. Policy Categories are used to group policies together to which target objects can subscribe. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategory.#ctor(Microsoft.SqlServer.Management.Dmf.PolicyStore,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory" /> class.</summary>
      <param name="parent">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" /> object value that specifies the policy store to which the policy category belongs.</param>
      <param name="name">A <see cref="T:System.String" /> value that specifies the name of the category.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Alter">
      <summary>Updates any <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory" /> object property changes on the instance of SQL Server.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Create">
      <summary>Creates a category for the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory" /> class.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyCategory.DefaultCategory">
      <summary>Gets the category to which the policy is assigned by default.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies default category.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Drop">
      <summary>Removes the policy category from the instance of SQL Server.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategory.GetObjectFactory">
      <summary>Gets the object factory for the object.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Sfc.SfcObjectFactory" /> that contains the object factory for the policy category object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyCategory.ID">
      <summary>Gets the ID value that uniquely identifies the policy category.</summary>
      <returns>An <see cref="T:System.Int32" /> value that specifies the category ID value.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyCategory.IdentityKey">
      <summary>Gets the key that uniquely identifies the policy category.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key" /> value that specifies the key that uniquely identifies the policy category.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyCategory.MandateDatabaseSubscriptions">
      <summary>Gets or sets the <see cref="T:System.Boolean" /> value that determines whether the database subscriptions are permitted.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether database subscriptions are permitted.If True, database subscriptions are permitted. Otherwise, False.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcAlterable#ScriptAlter">
      <summary>Alters the script that is used to create the policy. Do not reference this member directly in your code. It supports the SQL Server infrastructure..</summary>
      <returns>An ISfcScript object that contains the altered script.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcCreatable#ScriptCreate">
      <summary>Creates a script that is used to create the policy. Do not reference this member directly in your code. It supports the SQL Server infrastructure..</summary>
      <returns>An ISfcScript object that contains the new script.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcDroppable#ScriptDrop">
      <summary>Drops the script that is used to create the policy. Do not reference this member directly in your code. It supports the SQL Server infrastructure.</summary>
      <returns>An ISfcScript object that contains the dropped script.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcRenamable#Rename(Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey)">
      <summary>Renames the policy with the specified key.</summary>
      <param name="key">Specifies the new key of the policy.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcRenamable#ScriptRename(Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey)">
      <summary>Renames the script that is used to create the policy with the specified key.</summary>
      <returns>An ISfcScript object that contains the renamed script.</returns>
      <param name="key">Specifies the new key that is used to create the policy.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Name">
      <summary>Gets the name of the policy category.</summary>
      <returns>A <see cref="T:System.String" /> value that contains the name of the policy category.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Parent">
      <summary>Gets or sets the parent instance via the keychain.</summary>
      <returns>An SfcInstance object that is the parent of the current instance.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Rename(System.String)">
      <summary>Renames the policy.</summary>
      <param name="name">A <see cref="T:System.String" /> value that specifies the new name of the policy category.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key" /> class represents the key that identifies the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key.#ctor(Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key" /> class based on the specified key.</summary>
      <param name="other">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key" /> value that specifies the other key.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key" /> class that has the specified name.</summary>
      <param name="name">A <see cref="T:System.String" /> value that specifies the name of the key.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key.Equals(Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey)">
      <summary>Determines whether the two specified objects are equal. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the specified key is equal to the referenced object key. If True, the key values are equal. Otherwise, False.</returns>
      <param name="key">A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey" /> value that specifies one object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key.Equals(System.Object)">
      <summary>Determines whether the specified object key is equal to the referenced object key. </summary>
      <returns>A <see cref="T:System.Boolean" /> which is true if the operands are equal, otherwise false.</returns>
      <param name="obj">A <see cref="T:System.Object" /> value that specifies the object to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key.Equals(System.Object,System.Object)">
      <summary>Determines whether the specified object key is equal to the referenced object key.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the specified key is equal to the referenced object key. If True, the key values are equal. Otherwise, False.</returns>
      <param name="obj1">A <see cref="T:System.Object" /> value that specifies one object.</param>
      <param name="obj2">A <see cref="T:System.Object" /> value that specifies another object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key.GetHashCode">
      <summary>Gets the hash code for the object.</summary>
      <returns>A <see cref="T:System.Int32" /> value that specifies the hash code.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key.GetUrnFragment">
      <summary>Gets the unique resource name (URN) path partial string that represents the policy category. </summary>
      <returns>A <see cref="T:System.String" /> value that contains the URN fragment.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key.Name">
      <summary>Gets the name of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory" /> key.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name of the key value.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key.op_Equality(Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key,Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key)">
      <summary>Performs a Boolean equality operation to determine whether two policy category objects reference the same policy category.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two policy category objects are the same. Returns True if both parameters are null or reference the same policy category. Otherwise, returns False.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key" /> object representing one of the policy category objects to compare.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key" /> object representing the other policy category objects to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key.op_Equality(Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key,System.Object)">
      <summary>Performs a Boolean equality operation to determine whether two policy category objects reference the same policy category.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two policy category objects are the same. Returns True if both parameters are null or reference the same policy category. Otherwise, returns False.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key" /> object representing one of the policy category objects to compare.</param>
      <param name="obj">A <see cref="T:System.Object" /> object representing the other policy category objects to compare. If the object does not reference a <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key" />, the method returns False.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key.op_Equality(System.Object,Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key)">
      <summary>Performs a Boolean equality operation to determine whether two policy category objects reference the same policy category.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two policy category objects are the same. Returns True if both parameters are null or reference the same policy category. Otherwise, returns False.</returns>
      <param name="obj">A <see cref="T:System.Object" /> object representing one of the policy category objects to compare. If the object does not reference a <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key" />, the method returns False.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key" /> object representing the other policy category objects to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key.op_Inequality(Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key,Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key)">
      <summary>Performs a Boolean equality operation to determine whether two policy category objects reference the same policy category.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two policy category objects are the same. Returns True if the parameters reference separate policy category, or if only one of the parameters is null. Otherwise, returns False.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key" /> object representing one of the policy category objects to compare.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key" /> object representing the other policy category to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key.op_Inequality(Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key,System.Object)">
      <summary>Performs a Boolean equality operation to determine whether two policy category keys reference the same policy category.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two policy category objects are the same. Returns True if the parameters reference separate policy category, or if only one of the parameters is null. Otherwise, returns False.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key" /> object representing one of the policy category objects to compare.</param>
      <param name="obj">A <see cref="T:System.Object" /> object representing the other policy category to compare. If the object does not reference a <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key" />, the method returns True.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key.op_Inequality(System.Object,Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key)">
      <summary>Performs a Boolean equality operation to determine whether two policy category keys reference the same policy category.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two policy category objects are the same. Returns True if the parameters reference separate policy category, or if only one of the parameters is null. Otherwise, returns False.</returns>
      <param name="obj">A <see cref="T:System.Object" /> object representing one of the policy category objects to compare. If the object does not reference a <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key" />, the method returns True.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory.Key" /> object representing the other Policy category to compare.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.PolicyCategoryCollection">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategoryCollection" /> class represents a collection of <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory" /> objects that represent all policy categories in the policy store. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategoryCollection.#ctor(Microsoft.SqlServer.Management.Dmf.PolicyStore)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategoryCollection" /> class.</summary>
      <param name="parent">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" /> object value that specifies the parent of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategoryCollection" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategoryCollection.#ctor(Microsoft.SqlServer.Management.Dmf.PolicyStore,System.Collections.Generic.IComparer{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategoryCollection" /> class.</summary>
      <param name="parent">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" /> object value that specifies the parent of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategoryCollection" /> object.</param>
      <param name="customComparer">An <see cref="IComparer(System.String)" /> object value that specifies the parent of the comparison interface that is associated with the policy category.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategoryCollection.Contains(System.String)">
      <summary>Verifies whether the specified string exists in the collection. </summary>
      <returns>A <see cref="T:System.Boolean" /> which is true if the specified string exists in the collection; otherwise false.</returns>
      <param name="name">The <see cref="T:System.String" /> value that is to be found in the collection.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyCategoryCollection.Item(System.String)">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory" /> object in the collection by name.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory" /> object value that represents the policy category that has the specified name.</returns>
      <param name="name">A <see cref="T:System.String" /> value that specifies the name of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory" /> object in the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategoryCollection" /> collection.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.PolicyCategoryInformation">
      <summary>Contains information about the policy category in policy-based management services.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyCategoryInformation.EvaluationMode">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Management.Dmf.AutomatedPolicyEvaluationMode" />.</summary>
      <returns>The evaluation mode.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyCategoryInformation.ID">
      <summary>Gets the <see cref="P:Microsoft.SqlServer.Management.Dmf.PolicyCategory.ID" />.</summary>
      <returns>The Policy Category ID.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyCategoryInformation.IsEmptyCategory">
      <summary>Gets a Boolean value that indicates whether <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> is null.</summary>
      <returns>A Boolean value, True if the <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> is null, otherwise False.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyCategoryInformation.IsSubscribed">
      <summary>Gets a Boolean value that indicates whether the target subscribes to <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategoryInformation" />.</summary>
      <returns>A Boolean value that indicates whether the target subscribes to <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategoryInformation" />., True if target subscribes, otherwise False.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyCategoryInformation.MandateDatabaseSubscriptions">
      <summary>Gets a Boolean value that indicates whether database subscriptions are required.</summary>
      <returns>A Boolean value that indicates whether database subscriptions are required, True if required, otherwise False.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyCategoryInformation.Name">
      <summary>Gets the name of the policy category.</summary>
      <returns>A string value that contains the name of the policy category.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyCategoryInformation.PolicyEnabled">
      <summary>Gets a Boolean value that indicates whether policy is enabled.</summary>
      <returns>A Boolean value that indicates whether policy is enabled, True if enabled, otherwise False.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyCategoryInformation.PolicyId">
      <summary>Gets an integer value that contains the policy Id.</summary>
      <returns>An integer value that contains the policy Id.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyCategoryInformation.PolicyName">
      <summary>Gets the policy name.</summary>
      <returns>A string value that contains the policy name.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription" /> object represents a subscription to a particular policy category. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.#ctor(Microsoft.SqlServer.Management.Dmf.PolicyStore)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription" /> class that has the specified parent policy store object.</summary>
      <param name="parent">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" /> object value that specifies the parent object</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.#ctor(Microsoft.SqlServer.Management.Dmf.PolicyStore,Microsoft.SqlServer.Management.Smo.SqlSmoObject)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription" /> class that has the specified parent policy store, and is based on the specified object.</summary>
      <param name="parent">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" /> object value that specifies the policy store to which the policy belongs.</param>
      <param name="obj">A <see cref="T:Microsoft.SqlServer.Management.Smo.SqlSmoObject" /> value that specifies the object on which the category is based.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Alter">
      <summary>Updates any <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription" /> object property changes on the instance of SQL Server.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Create">
      <summary>Creates a policy category subscription on the instance of SQL Server .</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Drop">
      <summary>Removes the policy category subscription from the instance of SQL Server.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.GetObjectFactory">
      <summary>Returns the object factory constructor for the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription" /> object.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Sfc.SfcObjectFactory" /> object that specifies the object factory for the referenced object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.ID">
      <summary>Gets the ID value that uniquely identifies the subscription.</summary>
      <returns>An <see cref="T:System.Int32" /> value that specifies the ID value that uniquely identifies the category.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.IdentityKey">
      <summary>Gets the key value that identifies the subscription.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key" /> value that identifies the subscription.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcAlterable#ScriptAlter">
      <summary>Alters the script.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Managment.Sdk.Sfc.ISfcScript" /> object that contains the altered script.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcCreatable#ScriptCreate">
      <summary>Creates the script.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Managment.Sdk.Sfc.ISfcScript" /> object that contains the created script.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcDroppable#ScriptDrop">
      <summary>Creates the script.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Managment.Sdk.Sfc.ISfcScript" /> object that contains the created script.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Parent">
      <summary>Gets or sets the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" /> object that is the parent of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription" /> object.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" /> object that is the parent of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.PolicyCategory">
      <summary>Gets or sets the category that is associated with the subscription.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.management.Dmf.PolicyCategory" /> object value that specifies the category thatis associated with the subscription.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Target">
      <summary>Gets or sets the target for the subscription.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the target for the subscription.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.TargetType">
      <summary>Gets or sets the target type that is associated with the subscription.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the target type that is associated with the subscription.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Validate(System.String)">
      <summary>Validates the subscription by using the specified mode.</summary>
      <param name="mode">A <see cref="T:System.String" /> object that specifies the mode that validates the subscription.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.ValidateProperties(System.String)">
      <summary>Validates the subscription properties by using the specified mode.</summary>
      <param name="mode">A <see cref="T:System.String" /> object that specifies the mode that validates the subscription properties.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key" /> class represents the key that identifies the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key.#ctor(Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key" /> class based on the specified key.</summary>
      <param name="other">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key" /> value that specifies the other key.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key" /> class that has the specified name.</summary>
      <param name="id">A <see cref="T:System.Int32" /> value that specifies the name of the key.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key.Equals(Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey)">
      <summary>Determines whether the two specified objects are equal. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the specified key is equal to the referenced object key. If true, the key values are equal. Otherwise, false.</returns>
      <param name="key">A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey" /> value that specifies one object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key.Equals(System.Object)">
      <summary>Determines whether the specified object key is equal to the referenced object key. </summary>
      <returns>A <see cref="T:System.Boolean" /> which is true if the operands are equal, otherwise .false</returns>
      <param name="obj">A <see cref="T:System.Object" /> value that specifies the object to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key.Equals(System.Object,System.Object)">
      <summary>Determines whether the specified object key is equal to the referenced object key.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the specified key is equal to the referenced object key. If True, the key values are equal. Otherwise, False.</returns>
      <param name="obj1">A <see cref="T:System.Object" /> value that specifies one object.</param>
      <param name="obj2">A <see cref="T:System.Object" /> value that specifies another object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key.GetHashCode">
      <summary>Gets the hash code for the object.</summary>
      <returns>A <see cref="T:System.Int32" /> value that specifies the hash code.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key.GetUrnFragment">
      <summary>Gets the unique resource name (URN) path partial string that represents the policy category subscription. </summary>
      <returns>A <see cref="T:System.String" /> value that contains the URN fragment.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key.ID">
      <summary>Gets the name of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription" /> key.</summary>
      <returns>A <see cref="T:System.Int32" /> value that specifies the ID of the key value.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key.op_Equality(Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key,Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key)">
      <summary>Performs a Boolean equality operation to determine whether two policy category subscription objects reference the same policy category subscription.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two policy category subscription objects are the same. Returns True if both parameters are null or reference the same policy category subscription. Otherwise, returns False.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key" /> object representing one of the policy category subscription objects to compare.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key" /> object representing the other policy category subscription objects to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key.op_Equality(Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key,System.Object)">
      <summary>Performs a Boolean equality operation to determine whether two policy category subscription objects reference the same policy category subscription.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two policy category subscription objects are the same. Returns True if both parameters are null or reference the same policy category subscription. Otherwise, returns False.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key" /> object representing one of the policy category subscription objects to compare.</param>
      <param name="obj">A <see cref="T:System.Object" /> object representing the other policy category subscription objects to compare. If the object does not reference a <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key" />, the method returns False.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key.op_Equality(System.Object,Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key)">
      <summary>Performs a Boolean equality operation to determine whether two policy category subscription objects reference the same policy category subscription.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two policy category subscription objects are the same. Returns True if both parameters are null or reference the same policy category subscription. Otherwise, returns False.</returns>
      <param name="obj">A <see cref="T:System.Object" /> object representing one of the policy category subscription objects to compare. If the object does not reference a <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key" />, the method returns False.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key" /> object representing the other policy category subscription objects to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key.op_Inequality(Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key,Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key)">
      <summary>Performs a Boolean equality operation to determine whether two policy category subscription objects reference the same policy category subscription.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two policy category subscription objects are the same. Returns True if the parameters reference separate policy category subscription, or if only one of the parameters is null. Otherwise, returns False.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key" /> object representing one of the policy category subscription objects to compare.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key" /> object representing the other policy category subscription to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key.op_Inequality(Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key,System.Object)">
      <summary>Performs a Boolean equality operation to determine whether two policy category subscription keys reference the same policy category subscription.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two policy category subscription objects are the same. Returns True if the parameters reference separate policy category subscription, or if only one of the parameters is null. Otherwise, returns False.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key" /> object representing one of the policy category subscription objects to compare.</param>
      <param name="obj">A <see cref="T:System.Object" /> object representing the other policy category subscription to compare. If the object does not reference a <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key" />, the method returns True.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key.op_Inequality(System.Object,Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key)">
      <summary>Performs a Boolean equality operation to determine whether two policy category subscription keys reference the same policy category subscription.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two policy category subscription objects are the same. Returns True if the parameters reference separate policy category subscription, or if only one of the parameters is null. Otherwise, returns False.</returns>
      <param name="obj">A <see cref="T:System.Object" /> object representing one of the policy category subscription objects to compare. If the object does not reference a <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key" />, the method returns True.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription.Key" /> object representing the other Policy category subscription to compare.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscriptionCollection">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscriptionCollection" /> class represents a collection of <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription" /> objects that represent all policy category subscriptions that are in the policy store. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscriptionCollection.#ctor(Microsoft.SqlServer.Management.Dmf.PolicyStore)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscriptionCollection" /> class.</summary>
      <param name="parent">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" /> object value that specifies the parent of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscriptionCollection" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscriptionCollection.Contains(System.Int32)">
      <summary>Verifies whether the specified ID value exists in the collection. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the ID value exists in the collection. If True, it exists. Otherwise, False.</returns>
      <param name="id">The <see cref="T:System.Int32" /> value that is to be found in the collection.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscriptionCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription" /> object in the collection by ID value.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription" /> object value that represents the policy category that has the specified name.</returns>
      <param name="id">A <see cref="T:System.Int32" /> value that specifies the ID value of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription" /> object in the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscriptionCollection" /> collection.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.PolicyCollection">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCollection" /> class represents a collection of <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> objects that represent all policies in the policy store. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCollection.#ctor(Microsoft.SqlServer.Management.Dmf.PolicyStore)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCollection" /> class.</summary>
      <param name="parent">The <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" /> represented by this instance.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCollection.#ctor(Microsoft.SqlServer.Management.Dmf.PolicyStore,System.Collections.Generic.IComparer{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCollection" /> class.</summary>
      <param name="parent">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" /> object value that specifies the parent of the <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> object.</param>
      <param name="customComparer">A generic value that represents the compared results of a <see cref="T:System.String" /> value.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyCollection.Contains(System.String)">
      <summary>Verifies whether the specified string exists in the collection. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that determines whether the collection contains the specified name. If True, the collection contains the specified name. Otherwise, False. </returns>
      <param name="name">The <see cref="T:System.String" /> value that is to be found in the collection.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyCollection.Item(System.String)">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> object in the collection by name.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> object value that represents the policy that has the specified name.</returns>
      <param name="name">A <see cref="T:System.String" /> value that specifies the position of the <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> object in the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCollection" /> collection.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.PolicyEffectiveState">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyEffectiveState" /> enumeration contains values that are used to specify the effectiveness of the policy.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.PolicyEffectiveState.None">
      <summary>Policy is not effective.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.PolicyEffectiveState.Enabled">
      <summary>Policy is enabled.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.PolicyEffectiveState.InFilter">
      <summary>Policy passes the filter check.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.PolicyEffectiveState.InCategory">
      <summary>Policy passes the category check.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.PolicyEvaluationException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyEvaluationException" /> class is an exception that is raised when an error occurs during the evaluation of a policy.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyEvaluationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyEvaluationException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyEvaluationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyEvaluationException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyEvaluationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyEvaluationException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyEvaluationException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyEvaluationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.PolicyEvaluationResultsWriter">
      <summary>Represents the XML writer that records the policy evaluation history in Policy-Based Management.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyEvaluationResultsWriter.#ctor(System.Xml.XmlWriter)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyEvaluationResultsWriter" /> class based on the specified XML writer.</summary>
      <param name="xmlWriter">An <see cref="T:System.Xml.XmlWriter" /> object that records the results from evaluating the policy.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyEvaluationResultsWriter.Dispose">
      <summary>Clears the object. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyEvaluationResultsWriter.GetXmlWriterSettings">
      <summary>Gets an <see cref="T:System.Xml.XmlWriterSettings" /> object value that contains the XML writer settings.</summary>
      <returns>An <see cref="T:System.Xml.XmlWriterSettings" /> object value that contains the XML writer settings.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyEvaluationResultsWriter.WriteEvaluationHistory(Microsoft.SqlServer.Management.Dmf.EvaluationHistory)">
      <summary>Writes the contents of an <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory" /> object by using an XML writer.</summary>
      <param name="history">The <see cref="T:Microsoft.SqlServer.Management.Dmf.EvaluationHistory" /> object to send to the XML writer.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.PolicyExtender">
      <summary>Contains additional functionality for the <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> object.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyExtender.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyExtender" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyExtender.#ctor(Microsoft.SqlServer.Management.Dmf.Policy)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyExtender" /> class.</summary>
      <param name="policy">A <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyExtender.#ctor(Microsoft.SqlServer.Management.Dmf.PolicyStore,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyExtender" /> class.</summary>
      <param name="policyStore">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" /> object.</param>
      <param name="name">A string value that specifies the name of the policy extender.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyExtender.Categories">
      <summary>Gets a generic list of <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory" /> objects.</summary>
      <returns>A generic list of <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory" /> objects.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyExtender.Category">
      <summary>Gets or sets a <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory" /> object.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyExtender.ConditionInstance">
      <summary>Gets or sets a <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition" /> object.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyExtender.EnableRootRestriction">
      <summary>Gets a Boolean value that indicates whether root restriction is enabled.</summary>
      <returns>A Boolean value that indicates whether root restriction is enabled, True if enabled, otherwise False.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyExtender.Filters">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetCollection" />.</summary>
      <returns>A collection of target set objects.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyExtender.OfflineMode">
      <summary>Gets a Boolean value that indicates whether connection is offline.</summary>
      <returns>A Boolean value that indicates whether connection is offline, True if in offline mode, otherwise False.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyExtender.PolicyFilePath">
      <summary>Gets or sets the path to the policy file.</summary>
      <returns>A string value that contains the path to the policy file.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyExtender.RootName">
      <summary>Gets the name of the root level of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" />.</summary>
      <returns>A string value that contains the name of the root level of the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyExtender.SupportedPolicyEvaluationMode">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Management.Dmf.AutomatedPolicyEvaluationMode" /> object.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Management.Dmf.AutomatedPolicyEvaluationMode" /> object.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.PolicyStore">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" /> type is the root of the DMF object model. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.#ctor(Microsoft.SqlServer.Management.Sdk.Sfc.SfcConnection)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" /> class.</summary>
      <param name="connection">A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcConnection" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.Alter">
      <summary>Alters a previously created <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" /> object.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyStore.Conditions">
      <summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition" /> objects. Each <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition" /> object represents a policy-based Management condition.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.ConditionCollection" /> object that represents all the conditions that are defined on the policy store. </returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.CreatePolicyFromFacet(Microsoft.SqlServer.Management.Sdk.Sfc.SfcQueryExpression,System.String,System.String,System.String)">
      <summary>Creates new policy from an <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcQueryExpression" /> object and names.</summary>
      <param name="target">An <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcQueryExpression" /> object.</param>
      <param name="facetName">A string value that specifies the name of the target expression.</param>
      <param name="policyName">A string value that specifies the name of the new policy.</param>
      <param name="conditionName">A string value that specifies the name of the condition defined by the target expression.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.CreatePolicyFromFacet(Microsoft.SqlServer.Management.Sdk.Sfc.SfcQueryExpression,System.String,System.String,System.String,System.Xml.XmlWriter)">
      <summary>Creates new policy from an <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcQueryExpression" /> object and an <see cref="T:System.Xml.XmlWriter" /> object.</summary>
      <param name="target">An <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcQueryExpression" /> object.</param>
      <param name="facetName">A string value that specifies the name of the target expression.</param>
      <param name="policyName">A string value that specifies the name of the new policy.</param>
      <param name="conditionName">A string value that specifies the name of the condition defined by the target expression.</param>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.CreatePolicyFromFacet(System.Object,System.String,System.String,System.String,System.Xml.XmlWriter)">
      <summary>Creates new policy from an <see cref="T:System.Object" /> and an <see cref="T:System.Xml.XmlWriter" /> object.</summary>
      <param name="target">An <see cref="T:System.Object" /> object.</param>
      <param name="facetName">A string value that specifies the name of the target expression.</param>
      <param name="policyName">A string value that specifies the name of the new policy.</param>
      <param name="conditionName">A string value that specifies the name of the condition defined by the target expression.</param>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.DeserializePolicy(System.Xml.XmlReader,System.Boolean,System.Boolean)">
      <summary>Deserializes a single policy and its associated condition from the specified XML reader into the policy store. </summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> and its associated condition from the specified XML reader into the policy store.</returns>
      <param name="xmlReader">An <see cref="T:System.Xml.XmlReader" /> object that specifies the XML reader from which to deserialize the policy.</param>
      <param name="overwriteExistingPolicy">A <see cref="T:System.Boolean" /> value that specifies whether the existing policy is overwritten during the deserialization.</param>
      <param name="overwriteExistingCondition">A <see cref="T:System.Boolean" /> value that specifies whether the existing condition is overwritten during the deserialization.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.Discover(Microsoft.SqlServer.Management.Sdk.Sfc.ISfcDependencyDiscoveryObjectSink)">
      <summary>Discovers dependency relationships for the specified sink.</summary>
      <param name="sink">An <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcDependencyDiscoveryObjectSink" /> object that specifies the dependency sink.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyStore.Enabled">
      <summary>Gets or sets whether the policy store is enabled.</summary>
      <returns>A Boolean value, True if the policy store is enabled, otherwise False.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.EnumApplicablePolicies(Microsoft.SqlServer.Management.Sdk.Sfc.SfcQueryExpression)">
      <summary>Enumerates policy items specified by an <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcQueryExpression" /> object.</summary>
      <returns>A <see cref="T:System.DataTable" /> object of policy items.</returns>
      <param name="target">An <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcQueryExpression" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.EnumApplicablePolicyCategories(Microsoft.SqlServer.Management.Sdk.Sfc.SfcQueryExpression)">
      <summary>Enumerates conditions specified by an <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcQueryExpression" /> object.</summary>
      <returns>A generic ReadOnlyCollection of <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategoryInformation" /> objects.</returns>
      <param name="target">An <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcQueryExpression" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.EnumConditionsOnFacet(System.String)">
      <summary>Returns a list of conditions that are associated with the specified facet.</summary>
      <returns>A <see cref="T:System.Specialized.Collections.StringCollection" /> object that contains the list of conditions that are associated with the facet.</returns>
      <param name="facet">A <see cref="T:System.String" /> object that specifies the facet.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.EnumConditionsOnFacet(System.String,Microsoft.SqlServer.Management.Dmf.PolicyStore.EnumerationMode)">
      <summary>Enumerates a <see cref="T:System.Collections.Specialized.StringCollection" /> of conditions.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.StringCollection" /> of conditions.</returns>
      <param name="facet">A string that specifies the facet.</param>
      <param name="enumerationMode">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore.EnumerationMode" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.EnumDomainFacets(System.String[])">
      <summary>Enumerates facets in a domain.</summary>
      <returns>A collection of <see cref="T:Microsoft.SqlServer.Management.Dmf.FacetInfo" /> objects that represent all facets on the instance of SQL Server.</returns>
      <param name="args">An array of string arguments that specify the facets.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.EnumPoliciesOnFacet(System.String)">
      <summary>Returns a list of policies associated with the specified facet.</summary>
      <returns>A <see cref="T:System.Specialized.Collections.StringCollection" /> object that contains the list of policies that are associated with the facet.</returns>
      <param name="facet">A <see cref="T:System.String" /> object that specifies the target object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.EnumPoliciesOnFacet(System.String,Microsoft.SqlServer.Management.Dmf.PolicyStore.EnumerationMode)">
      <summary>Enumerates policy items on a facet.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.StringCollection" /> of policy items.</returns>
      <param name="facet">A string value that specifies the facet.</param>
      <param name="enumerationMode">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore.EnumerationMode" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.EnumPolicyCategories">
      <summary>Returns an enumerated list of policy category information.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategoryInformationCollection" /> object that contains a list of policy category information.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.EnumRootConditions(System.Type)">
      <summary>Returns a list of root conditions for the specified type.</summary>
      <returns>A <see cref="T:System.Specialized.Collections.StringCollection" /> object that contains the list of root conditions.</returns>
      <param name="rootType">A <see cref="T:System.Type" /> object that specifies the root type.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.EnumRootFacets(System.Type)">
      <summary>Returns a list of root facets for the specified type.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.FacetInfoCollection" /> of root facets for the specified type.</returns>
      <param name="rootType">A <see cref="T:System.Type" /> object that specifies the root type.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.EnumTargetSetConditions(System.Type)">
      <summary>Returns a list of target set conditions for the specified type.</summary>
      <returns>A <see cref="T:System.Specialized.Collections.StringCollection" /> that contains the target set conditions.</returns>
      <param name="type">A <see cref="T:System.Type" /> object that specifies the target set type.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.EnumTargetSetConditions(System.Type,Microsoft.SqlServer.Management.Dmf.PolicyStore.EnumerationMode)">
      <summary>Enumerates conditions on the target.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.StringCollection" /> of conditions.</returns>
      <param name="type">A T:System.Type object.</param>
      <param name="enumerationMode">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore.EnumerationMode" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.EraseSystemHealthPhantomRecords">
      <summary>Deletes system health phantom records specified by a <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcQueryExpression" />.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyStore.Facets">
      <summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Management.Dmf.FacetInfo" /> objects. Each <see cref="T:Microsoft.SqlServer.Management.Dmf.FacetInfo" /> object represents a policy-based Management registered facet.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.FacetInfoCollection" /> object that represents all the registered facets that are defined on the policy store. </returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.GetAggregatedHealthState(Microsoft.SqlServer.Management.Sdk.Sfc.SfcQueryExpression)">
      <summary>Deletes system health phantom records specified by a <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcQueryExpression" />.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyHealthState" /> object.</returns>
      <param name="target">A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcQueryExpression" /> object.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyStore.HistoryRetentionInDays">
      <summary>Gets or sets the number of days the policy store retains history.</summary>
      <returns>An integer value that specifies the number of days history is retained.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyStore.IdentityKey">
      <summary>Gets the identity key.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey" /> object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.ImportPolicy(System.Xml.XmlReader,Microsoft.SqlServer.Management.Dmf.ImportPolicyEnabledState,System.Boolean,System.Boolean)">
      <summary>Imports a single policy and its associated condition from the given XML reader into the policy store. </summary>
      <returns>A single <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> and its associated condition from the given XML reader.</returns>
      <param name="xmlReader">An <see cref="T:System.Xml.XmlReader" /> object that specifies the XML reader.</param>
      <param name="importEnabledState">An <see cref="T:Microsoft.SqlServer.Management.Dmf.ImportPolicyEnabledState" /> value that specifies whether the import policy is enabled.</param>
      <param name="overwriteExistingPolicy">A <see cref="T:System.Boolean" /> value that specifies whether the existing policy is overwritten.</param>
      <param name="overwriteExistingCondition">A <see cref="T:System.Boolean" /> value that specifies whether the existing condition is overwritten.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyStore.LogOnSuccess">
      <summary>Gets or sets whether log-on succeeded.</summary>
      <returns>A Boolean value, True if log-on succeeded, otherwise False.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.MarkSystemObject(System.Object,System.Boolean)">
      <summary>Sets the name of a <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" />, <see cref="T:Microsoft.SqlServer.Management.Dmf.Condition" />, or <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" />.</summary>
      <param name="obj">The T:System.Object to mark.</param>
      <param name="marker">Boolean value that specifies whether to mark <paramref name="obj" />.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcDomain#GetExecutionEngine">
      <summary>Gets a new <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcExecutionEngine" /> object.</summary>
      <returns>A new <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcExecutionEngine" /> object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcDomain#GetKey(Microsoft.SqlServer.Management.Sdk.Sfc.IUrnFragment)">
      <summary>Gets a new <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey" /> of type determined by the name property of <paramref name="urnFragment" /> parameter.</summary>
      <returns>A new <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey" /> object.</returns>
      <param name="urnFragment">An <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.IUrnFragment" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcDomain#GetType(System.String)">
      <summary>Gets a <see cref="T:System.Type" /> object specified by the <paramref name="typeName" /> parameter.</summary>
      <returns>A <see cref="T:System.Type" /> object.</returns>
      <param name="typeName">A string value that specifies the type.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcDomain#GetTypeMetadata(System.String)">
      <summary>Gets a T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcTypeMetadata object identified by the <paramref name="typeName" /> parameter.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcTypeMetadata" /> object.</returns>
      <param name="typeName">A string value that specifies the type.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcDomain#UseSfcStateManagement">
      <summary>Use the SFC state management to return true.</summary>
      <returns>A Boolean value that is always true.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyStore.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcDomainLite#DomainInstanceName">
      <summary>Gets the name of the domain instance.</summary>
      <returns>A string value that contains the name of the domain instance.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyStore.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcDomainLite#DomainName">
      <summary>Gets the domain name.</summary>
      <returns>A string value that contains the name of the domain.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcDomainLite#GetLogicalVersion">
      <summary>Indicates the logical version to get in the domain.</summary>
      <returns>The logical version to get in the domain.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyStore.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcHasConnection#ConnectionContext">
      <summary>Gets the connection context.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcConnectionContext" /> object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcHasConnection#GetConnection">
      <summary>Indicates the connection to get.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Management.Common.ISfcConnection" /> connection to get.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcHasConnection#GetConnection(Microsoft.SqlServer.Management.Sdk.Sfc.SfcObjectQueryMode)">
      <summary>Indicates the connection to get using the SfcObjectQuery mode.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Management.Common.ISfcConnection" /> to get using the SfcObjectQuery mode.</returns>
      <param name="mode">A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcObjectQueryMode" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcHasConnection#SetConnection(Microsoft.SqlServer.Management.Common.ISfcConnection)">
      <summary>Indicates the connection to set.</summary>
      <param name="connection">The specified connection.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.Microsoft#SqlServer#Management#Sdk#Sfc#ISfcValidate#Validate(System.String,System.Object[])">
      <summary>Validates the <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> objects in the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" />.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ValidationState" /> object.</returns>
      <param name="validationMethod">A string value that specifies the validation method.</param>
      <param name="arguments">An array of <see cref="T:System.Object" /> arguments.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyStore.Name">
      <summary>Gets the name of the policy store.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name of the policy store.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyStore.ObjectSets">
      <summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" /> objects. Each <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" /> object represents a policy-based Management object set.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSetCollection" /> object that represents all the object sets that are defined on the policy store. </returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyStore.Policies">
      <summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> objects. Each <see cref="T:Microsoft.SqlServer.Management.Dmf.Policy" /> object represents a policy-based Management policy.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCollection" /> object that represents all the policies that are defined on the policy store. </returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyStore.PolicyCategories">
      <summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory" /> objects. Each <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategory" /> object represents a policy-based Management policy category.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategoryCollection" /> object that represents all the policy categories that are defined on the policy store. </returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyStore.PolicyCategorySubscriptions">
      <summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription" /> objects. Each <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription" /> object represents a policy-based Management policy category subscription.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscriptionCollection" /> object that represents all the policy category subscriptions that are defined on the policy store. </returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.PurgeHealthState">
      <summary>Removes the health data for a specified tree/subtree.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.PurgeHealthState(Microsoft.SqlServer.Management.Sdk.Sfc.SfcQueryExpression)">
      <summary>Removes the health data for a specified tree/subtree.</summary>
      <param name="targetTreeRoot">A T: Microsoft.SqlServer.Management.Sdk.Sfc.SfcQueryExpression object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.RepairPolicyAutomation">
      <summary>The RepairPolicyAutomation method recreates all necessary artifacts for all automated policies.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.ScriptAlter">
      <summary>Alters the script associated with this policy store.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcScript" /> interface of the modified script.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PolicyStore.SqlStoreConnection">
      <summary>Gets or sets the <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SqlStoreConnection" /> object.</summary>
      <returns>tThe <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SqlStoreConnection" /> object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.StartSerializationUpgrade">
      <summary>Starts a serialization upgrade.</summary>
      <returns>An <see cref="T:System.UpgradeSession" /> object that contains the upgrade status.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.SubscribeToPolicyCategory(Microsoft.SqlServer.Management.Sdk.Sfc.SfcQueryExpression,System.String)">
      <summary>Subscribes the policy store to the category specified by the <paramref name="policyCategory" /> and <paramref name="target" /> parameters.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyCategorySubscription" /> object.</returns>
      <param name="target">A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcQueryExpression" /> object.</param>
      <param name="policyCategory">A string value that specifies the policy category.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.ToString">
      <summary>Returns the <see cref="T:Microsoft.SqlServer.Managment.Dmf.PolicyStore" /> object as a string value.</summary>
      <returns>A <see cref="T:System.String" /> value that contains the string value of the object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.UnsubscribeFromPolicyCategory(Microsoft.SqlServer.Management.Sdk.Sfc.SfcQueryExpression,System.String)">
      <summary>Unsubscribes the policy store from the category specified by the <paramref name="policyCategory" /> and <paramref name="target" /> parameters.</summary>
      <param name="target">A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcQueryExpression" /> object.</param>
      <param name="policyCategory">A string value that specifies the policy category.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.PolicyStore.EnumerationMode">
      <summary>Specifies the enumeration mode for the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" /> object.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.PolicyStore.EnumerationMode.NonSystemOnly">
      <summary>Non-system mode of enumeration only. 1</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.PolicyStore.EnumerationMode.SystemOnly">
      <summary>System mode of enumeration only. 2</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.PolicyStore.EnumerationMode.All">
      <summary>Enumeration that specifies both system and non-system modes of enumeration. 3</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key" /> class represents the key that identifies each instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key.Equals(Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey)">
      <summary>Determines if the specified object is the same as the policy store identified by the current <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key" /> object.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are equal. Otherwise, false.</returns>
      <param name="key">A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey" /> value that specifies the object to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key.Equals(System.Object)">
      <summary>Determines if the specified object is the same as the policy store identified by the current <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key" /> object.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are equal. Otherwise, false.</returns>
      <param name="obj">A <see cref="T:SystemObject" /> that specifies the object to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key.Equals(System.Object,System.Object)">
      <summary>Determines whether two objects are equal.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are equal. Otherwise, false.</returns>
      <param name="obj1">A <see cref="T:System.Object" /> value that specifies one object.</param>
      <param name="obj2">A <see cref="T:System.Object" /> value that specifies another object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key.GetHashCode">
      <summary>Gets the hash code for the policy store key.</summary>
      <returns>A <see cref="T:System.Int32" /> value that specifies the hash code.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key.GetUrnFragment">
      <summary>Gets the unique resource name (URN) path partial string that represents the policy store.</summary>
      <returns>A <see cref="T:System.String" /> value that contains the URN fragment.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key.op_Equality(Microsoft.SqlServer.Management.Dmf.PolicyStore.Key,Microsoft.SqlServer.Management.Dmf.PolicyStore.Key)">
      <summary>Determines whether the objects identified by two <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key" /> objects are the same.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are the same, otherwise false.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key" /> object that identifies the first object.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key" /> object that identifies the second object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key.op_Equality(Microsoft.SqlServer.Management.Dmf.PolicyStore.Key,System.Object)">
      <summary>Determines whether the object identified by a <see cref="T:System.Object" /> is the same as the object identified by a <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key" />.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are the same, otherwise false.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key" /> object that identifies the first object.</param>
      <param name="obj">A <see cref="T:System.Object" /> that identifies the second object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key.op_Equality(System.Object,Microsoft.SqlServer.Management.Dmf.PolicyStore.Key)">
      <summary>Determines whether the object identified by a <see cref="T:System.Object" /> is the same as the object identified by a <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key" />.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are the same, otherwise false.</returns>
      <param name="obj">A <see cref="T:System.Object" /> object that identifies the first object.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key" /> object that identifies the second object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key.op_Inequality(Microsoft.SqlServer.Management.Dmf.PolicyStore.Key,Microsoft.SqlServer.Management.Dmf.PolicyStore.Key)">
      <summary>Determines whether the objects identified by two <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key" /> objects are not the equal.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are different, otherwise false.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key" /> object that identifies the first object.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key" /> object that identifies the second object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key.op_Inequality(Microsoft.SqlServer.Management.Dmf.PolicyStore.Key,System.Object)">
      <summary>Determines whether the object identified by a <see cref="T:System.Object" /> is different than the object identified by a <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key" />.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are different, otherwise false.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key" /> object that identifies the first object.</param>
      <param name="obj">A <see cref="T:System.Object" /> that identifies the second object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key.op_Inequality(System.Object,Microsoft.SqlServer.Management.Dmf.PolicyStore.Key)">
      <summary>Determines whether the object identified by a <see cref="T:System.Object" /> is different than the object identified by a <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key" />.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the objects are different, otherwise false.</returns>
      <param name="obj">A <see cref="T:System.Object" /> object that identifies the first object.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStore.Key" /> object that identifies the second object.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.PolicyStoreUpgradeSession">
      <summary>Represents a policy store upgrade session.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStoreUpgradeSession.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PolicyStoreUpgradeSession" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStoreUpgradeSession.IsUpgradeRequiredOnType(System.String,System.Int32)">
      <summary>Determines whether an upgrade is required for the specified type and the specified file.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether an upgrade is required. If True, an upgrade is required. Otherwise, False.</returns>
      <param name="instanceType">A <see cref="T:System.String" /> value that specifies the type.</param>
      <param name="fileVersion">An <see cref="T:System.Int32" /> value that specifies the version of the files.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStoreUpgradeSession.PostProcessUpgrade(System.Collections.Generic.Dictionary{System.String,System.Object},System.Int32)">
      <summary>Runs a process to update the cache after a policy store upgrade.</summary>
      <param name="sfcCache">A <see cref="T:System.Collections.Generic.Dictionary" /> object of <see cref="T:System.String" /> and <see cref="T:System.Object" /> values that specifies the objects held in cache during upgrade. </param>
      <param name="fileVersion">An <see cref="T:System.Int32" /> value that specifies the file version of the policy store.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PolicyStoreUpgradeSession.UpgradeInstance(System.Collections.Generic.List{Microsoft.SqlServer.Management.Sdk.Sfc.SfcInstanceSerializedData},System.Int32,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
      <summary>Upgrades an instance of the policy store.</summary>
      <returns>A <see cref="T:System.Collections.Generic.List`1" /> which contains the new policy or condition.</returns>
      <param name="sfcInstanceData">A <see cref="T:System.Collections.Generic.List" /> object of <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcInstanceSerializedData" /> values that represents the serialized instance data.</param>
      <param name="fileVersion">An <see cref="T:System.Int32" /> value that specifies the file version of the policy store.</param>
      <param name="smlUri">A <see cref="T:System.String" /> value that specifies the Uri data.</param>
      <param name="sfcCache">A <see cref="T:System.Collections.Generic.Dictionary" /> object of <see cref="T:System.String" /> and <see cref="T:System.Object" /> values that specifies the objects held in cache during upgrade.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.PostConfigurationAction">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.PostConfigurationAction" /> enumeration contains values that specify the action to take after configuration finishes.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.PostConfigurationAction.None">
      <summary>No action is taken.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.PostConfigurationAction.RestartService">
      <summary>Restarts the policy-based management service.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.PostConfigurationActionAttribute">
      <summary>Represents a set post configuration action attributes.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.PostConfigurationActionAttribute.#ctor(Microsoft.SqlServer.Management.Dmf.PostConfigurationAction)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.PostConfigurationActionAttribute" /> class.</summary>
      <param name="postConfigurationAction">A <see cref="T:Microsoft.SqlServer.Management.Dmf.PostConfigurationAction" /> value that specifies the post configuration action. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.PostConfigurationActionAttribute.PostConfigurationAction">
      <summary>Gets the post configuration action.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.PostConfigurationAction" /> value that specifies the post configuration action. </returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.RestartPendingException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.RestartPendingException" /> class represents the exception that is raised when a system restart is pending.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.RestartPendingException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.RestartPendingException" /> class. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.RestartPendingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.RestartPendingException" /> class that has the specified serialization information and streaming context.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies the serialization information that is associated with the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the streaming context that is associated with the exception. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.RestartPendingException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.RestartPendingException" /> class with the specified message. </summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that is associated with the restart pending exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.RestartPendingException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.RestartPendingException" /> class with the specified message and specified inner exception. </summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that is associated with the restart pending exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> system object value that specifies the exception that caused the restart pending exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.RestartPendingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets object data regarding the restart pending exception.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.RestartPendingException`1">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.RestartPendingException" /> class is an exception that is raised when an error occurs when a system restart is pending.</summary>
      <typeparam name="T">The configuration type for this instance.</typeparam>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.RestartPendingException`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.RestartPendingException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.RestartPendingException`1.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.RestartPendingException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that has the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.RestartPendingException`1.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.RestartPendingException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.RestartPendingException`1.#ctor(System.String,`0,`0)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.RestartPendingException" /> class that has the specified property and its configuration and run values.</summary>
      <param name="propertyName">A <see cref="T:System.String" /> value that specifies the name of the property.</param>
      <param name="configValue">A <see cref="T:System.String" /> value that specifies the configuration value of the property.</param>
      <param name="runValue">A <see cref="T:System.String" /> value that specifies the run value of the property.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.RestartPendingException`1.ConfigValue">
      <summary>Gets the configuration value of the property.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the configuration value of the property.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.RestartPendingException`1.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.RestartPendingException`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.RestartPendingException`1.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.RestartPendingException`1.PropertyName">
      <summary>Gets the name of the property.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name of the property.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.RestartPendingException`1.RunValue">
      <summary>Gets the run value of the property.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the run value of the property.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.StringPropertyTooLongException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.StringPropertyTooLongException" /> class is an exception that is raised when the string that is assigned to a property is too long.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.StringPropertyTooLongException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.StringPropertyTooLongException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.StringPropertyTooLongException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.StringPropertyTooLongException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.StringPropertyTooLongException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.StringPropertyTooLongException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.StringPropertyTooLongException.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.StringPropertyTooLongException" /> class that has the specified property, maximum length of the string, and the current length of the string.</summary>
      <param name="propertyName">A <see cref="T:System.String" /> value that specifies the name of the property.</param>
      <param name="maxLength">An <see cref="T:System.Int32" /> value that specifies the maximum length that is allowed for the string property. </param>
      <param name="currentLength">An <see cref="T:System.Int32" /> value that specifies the current length of the string. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.StringPropertyTooLongException.CurrentLength">
      <summary>Gets the current length of the string property.</summary>
      <returns>An integer value that specifies the current length of the string property.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.StringPropertyTooLongException.DmfExceptionType">
      <summary>Gets the type of the exception when the string that is assigned to a property is too long.</summary>
      <returns>A value that represents the type of the exception when the string that is assigned to a property is too long.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.StringPropertyTooLongException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.StringPropertyTooLongException.MaxLength">
      <summary>Gets the maximum length that is allowed for the string property.</summary>
      <returns>An <see cref="T:System.Int32" /> value that specifies the maximum length that is allowed for the string property.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.StringPropertyTooLongException.Message">
      <summary>Gets the displayed message when the string that is assigned to a property is too long.</summary>
      <returns>A string that represents the displayed message when the string that is assigned to a property is too long.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.StringPropertyTooLongException.PropertyName">
      <summary>Gets the name of the property that generated the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name of the property.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.TargetEvaluation">
      <summary>Represents the target evaluation in policy-based management services.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TargetEvaluation.Result">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Management.Dmf.ExrpessionNode" /> value that contains the result of the evaluation.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.ExrpessionNode" /> value that contains the result of the evaluation.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TargetEvaluation.Target">
      <summary>Gets the target of the evaluation.</summary>
      <returns>A <see cref="T:System.Object" /> value that contains the target of the evaluation.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.TargetSet">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet" /> object represents a policy-based Management target set that holds information about levels, the condition for each level, and the target types. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSet.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSet.#ctor(Microsoft.SqlServer.Management.Dmf.ObjectSet,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet" /> class on the specified connection.</summary>
      <param name="parent">An <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" /> object value that specifies the parent of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet" /> object.</param>
      <param name="targetTypeSkeleton">A <see cref="T:System.String" /> value that specifies the type skeleton, such as Server\Trigger or Server\Database\Table\Trigger, for the target filter.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSet.Discover(Microsoft.SqlServer.Management.Sdk.Sfc.ISfcDependencyDiscoveryObjectSink)">
      <summary>Discovers dependency relationships for the specified sink.</summary>
      <param name="sink">An <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcDependencyDiscoveryObjectSink" /> object that specifies the dependency sink.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TargetSet.Enabled">
      <summary>Gets or sets the <see cref="T:System.Boolean" /> value that specifies whether the target set is enabled.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the target set is enabled.If True, the target set is enabled. Otherwise, False (default). </returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSet.GetFilter">
      <summary>Gets the filter that is associated with the target set. </summary>
      <returns>A <see cref="T:System.String" /> value that specifies the filter that is associated with the target set.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSet.GetLevel(System.String)">
      <summary>Gets the target set level for the specified skeleton.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel" /> object that specifies the target set level for the specified skeleton.</returns>
      <param name="skeleton">A <see cref="T:System.String" /> object that specifies the level skeleton.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSet.GetLevelsSorted">
      <summary>Returns a sorted list of levels for the target set.</summary>
      <returns>A <see cref="IList&lt;T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel&gt;" /> object that contains the sorted list of levels for the target set.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSet.GetObjectFactory">
      <summary>Returns the object factory used to generate instances of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet" /> object.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcObjectFactory" /> object that specifies the object factory.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TargetSet.ID">
      <summary>Gets the ID value that uniquely identifies the target set.</summary>
      <returns>An <see cref="T:System.Int32" /> object that specifies the ID value of the target set. </returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TargetSet.IdentityKey">
      <summary>Gets the key value that identifies the target set.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet.Key" /> value that specifies the key value of the target set.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TargetSet.Levels">
      <summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel" /> objects. Each <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel" /> object represents a policy-based Management target set level.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevelCollection" /> object that represents all the levels that are defined on the target set. </returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TargetSet.Parent">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" /> object that is the parent of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet" /> object.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" /> value that specifies the parent of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TargetSet.RootLevel">
      <summary>Gets the root level for the target set.</summary>
      <returns>A <see cref="T:System.String" /> object that specifies the root level for the target set. </returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSet.SetLevelCondition(Microsoft.SqlServer.Management.Dmf.TargetSetLevel,System.String)">
      <summary>Sets the condition for the specified target set level.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel" /> object that specifies the target set level with the associated condition.</returns>
      <param name="level">A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel" /> object that specifies the target set level.</param>
      <param name="condition">A <see cref="T:System.String" /> object that specifies the condition.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TargetSet.TargetType">
      <summary>Gets the target type for the target set.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the target type for the target set. </returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TargetSet.TargetTypeSkeleton">
      <summary>Gets the target type skeleton for the target set.</summary>
      <returns>A <see cref="T:System.String" /> object that represents the target type skeleton for the target set. </returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.TargetSet.Key">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet.Key" /> class represents the key that identifies the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSet.Key.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet.Key" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSet.Key.#ctor(Microsoft.SqlServer.Management.Dmf.TargetSet.Key)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet.Key" /> class based on the specified key.</summary>
      <param name="other">A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet.Key" /> value that specifies the other key.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSet.Key.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet.Key" /> class that has the specified target type skeleton.</summary>
      <param name="targetTypeSkeleton">A <see cref="T:System.String" /> value that specifies the target type skeleton of the key.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSet.Key.Equals(Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey)">
      <summary>Determines whether the two specified objects are equal. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the specified key is equal to the referenced object key. If True, the key values are equal. Otherwise, False.</returns>
      <param name="key">A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey" /> value that specifies one object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSet.Key.Equals(System.Object)">
      <summary>Determines whether the specified object key is equal to the referenced object key. </summary>
      <returns>A <see cref="T:System.Boolean" /> which is true if the operands are equal, otherwise false..</returns>
      <param name="obj">A <see cref="T:System.Object" /> value that specifies the object to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSet.Key.Equals(System.Object,System.Object)">
      <summary>Determines whether the specified object key is equal to the referenced object key.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the specified key is equal to the referenced object key. If True, the key values are equal. Otherwise, False.</returns>
      <param name="obj1">A <see cref="T:System.Object" /> value that specifies one object.</param>
      <param name="obj2">A <see cref="T:System.Object" /> value that specifies another object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSet.Key.GetHashCode">
      <summary>Gets the hash code for the object.</summary>
      <returns>A <see cref="T:System.Int32" /> value that specifies the hash code.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSet.Key.GetUrnFragment">
      <summary>Gets the unique resource name (URN) path partial string that represents the target set. </summary>
      <returns>A <see cref="T:System.String" /> value that contains the URN fragment.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSet.Key.op_Equality(Microsoft.SqlServer.Management.Dmf.TargetSet.Key,Microsoft.SqlServer.Management.Dmf.TargetSet.Key)">
      <summary>Performs a Boolean equality operation to determine whether two target sets reference the same target set.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two target sets are the same. Returns True if both parameters are null or reference the same target set. Otherwise, returns False.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet.Key" /> object representing one of the target sets to compare.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet.Key" /> object representing the other target sets to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSet.Key.op_Equality(Microsoft.SqlServer.Management.Dmf.TargetSet.Key,System.Object)">
      <summary>Performs a Boolean equality operation to determine whether two target sets reference the same target set.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two target sets are the same. Returns True if both parameters are null or reference the same target set. Otherwise, returns False.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet.Key" /> object representing one of the target sets to compare.</param>
      <param name="obj">A <see cref="T:System.Object" /> object representing the other target sets to compare. If the object does not reference a <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet.Key" />, the method returns False.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSet.Key.op_Equality(System.Object,Microsoft.SqlServer.Management.Dmf.TargetSet.Key)">
      <summary>Performs a Boolean equality operation to determine whether two target sets reference the same target set.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two target sets are the same. Returns True if both parameters are null or reference the same target set. Otherwise, returns False.</returns>
      <param name="obj">A <see cref="T:System.Object" /> object representing one of the target sets to compare. If the object does not reference a <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet.Key" />, the method returns False.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet.Key" /> object representing the other target sets to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSet.Key.op_Inequality(Microsoft.SqlServer.Management.Dmf.TargetSet.Key,Microsoft.SqlServer.Management.Dmf.TargetSet.Key)">
      <summary>Performs a Boolean equality operation to determine whether two target sets reference the same target set.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two target sets are the same. Returns True if the parameters reference separate target set, or if only one of the parameters is null. Otherwise, returns False.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet.Key" /> object representing one of the target sets to compare.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet.Key" /> object representing the other target set to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSet.Key.op_Inequality(Microsoft.SqlServer.Management.Dmf.TargetSet.Key,System.Object)">
      <summary>Performs a Boolean equality operation to determine whether two target set keys reference the same target set.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two target sets are the same. Returns True if the parameters reference separate target set, or if only one of the parameters is null. Otherwise, returns False.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet.Key" /> object representing one of the target sets to compare.</param>
      <param name="obj">A <see cref="T:System.Object" /> object representing the other target set to compare. If the object does not reference a <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet.Key" />, the method returns True.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSet.Key.op_Inequality(System.Object,Microsoft.SqlServer.Management.Dmf.TargetSet.Key)">
      <summary>Performs a Boolean equality operation to determine whether two target set keys reference the same target set.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two target sets are the same. Returns True if the parameters reference separate target set, or if only one of the parameters is null. Otherwise, returns False.</returns>
      <param name="obj">A <see cref="T:System.Object" /> object representing one of the target sets to compare. If the object does not reference a <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet.Key" />, the method returns True.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet.Key" /> object representing the other Target set to compare.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TargetSet.Key.targetTypeSkeleton">
      <summary>Gets the target type skeleton for the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet" /> key.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the target type skeleton of the key value.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.TargetSetCollection">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetCollectionCollection" /> class represents a collection of <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet" /> objects that represent all the policies in the policy store. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetCollection.#ctor(Microsoft.SqlServer.Management.Dmf.ObjectSet)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetCollection" /> class.</summary>
      <param name="parent">An <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" /> object value that specifies the parent of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetCollection.#ctor(Microsoft.SqlServer.Management.Dmf.ObjectSet,System.Collections.Generic.IComparer{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetCollection" /> class.</summary>
      <param name="parent">An <see cref="T:Microsoft.SqlServer.Management.Dmf.ObjectSet" /> object value that specifies the parent of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet" /> object.</param>
      <param name="customComparer">A generic value that represents the compared results of a <see cref="T:System.String" /> value.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetCollection.Contains(System.String)">
      <summary>Verifies whether the specified string exists in the collection. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that determines whether the specified string exists in the collection. If True, the string exists in the collection. Otherwise, False.</returns>
      <param name="filterTypeSkeleton">The <see cref="T:System.String" /> value that is to be found in the collection.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TargetSetCollection.Item(System.String)">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Management.Smo.TargetSet" /> object in the collection by name.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet" /> object value that represents the target set that has the specified name.</returns>
      <param name="filterTypeSkeleton">A <see cref="T:System.String" /> value that specifies the position of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet" /> object in the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetCollection" /> collection.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.TargetSetCountMismatchException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetCountMismatchException" /> class is an exception that is raised when the target set and facet counts do not match.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetCountMismatchException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetCountMismatchException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetCountMismatchException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetCountMismatchException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetCountMismatchException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetCountMismatchException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetCountMismatchException.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetCountMismatchException" /> class with the specified target set and facet.</summary>
      <param name="objectSetName">A <see cref="T:System.String" /> value that specifies the name of the target set.</param>
      <param name="facetName">A <see cref="T:System.String" /> value that specifies the name of the facet. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TargetSetCountMismatchException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TargetSetCountMismatchException.FacetName">
      <summary>Gets a <see cref="T:System.String" /> representing the name of the associated <see cref="T:Microsoft.SqlServer.Management.Smo.FacetInfo" /> referenced by the exception.</summary>
      <returns>The name of the associated <see cref="T:Microsoft.SqlServer.Management.Smo.FacetInfo" /> referenced by the exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetCountMismatchException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TargetSetCountMismatchException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TargetSetCountMismatchException.ObjectSetName">
      <summary>Gets the target set that is referenced by the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the target set that is referenced by the exception.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel">
      <summary>Represents the target set level in policy-based management services.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.CompareTo(Microsoft.SqlServer.Management.Dmf.TargetSetLevel)">
      <summary>Compares the current object with the specified target set level. </summary>
      <returns>A <see cref="T:System.Int32" /> value that specifies the difference between target set levels.</returns>
      <param name="level">An <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel" /> object that specifies the object to compare.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Condition">
      <summary>Gets or sets the condition of the target set level.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the condition of the target set level.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Discover(Microsoft.SqlServer.Management.Sdk.Sfc.ISfcDependencyDiscoveryObjectSink)">
      <summary>Discovers dependency relationships for the specified sink.</summary>
      <param name="sink">An <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.ISfcDependencyDiscoveryObjectSink" /> object that specifies the dependency sink.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Equals(System.Object)">
      <summary>Determines whether the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel" /> object is equal to the specified object.  </summary>
      <returns>A <see cref="T:System.Boolean" /> value that determines whether the two objects are equal. If True, the objects are equal. Otherwise, False.</returns>
      <param name="obj">An <see cref="T:System.Object" /> value that specifies the object to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.GetHashCode">
      <summary>Returns the hash code for the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel" /> object.</summary>
      <returns>A <see cref="T:System.Int32" /> value that specifies the hash code for the object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.GetObjectFactory">
      <summary>Returns the object factory used to generate instances of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel" /> object.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcObjectFactory" /> object that specifies the object factory.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.GetTypeFilterProperties(System.String)">
      <summary>Gets the type filter properties with the specified skeleton format.</summary>
      <returns>A PropertyInfo object array that contains the type filter property information.</returns>
      <param name="skeleton">A <see cref="T:System.String" /> object that specifies the skeleton used in the type filter.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.ID">
      <summary>Gets the ID value that uniquely identifies the target set level.</summary>
      <returns>An <see cref="T:System.Int32" /> object that specifies the ID value of the target set level. </returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.IdentityKey">
      <summary>Gets the key value that identifies the target set level.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key" /> value that specifies the key value of the target set level.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.LevelName">
      <summary>Gets the name of the target set level.</summary>
      <returns>A <see cref="T:System.String" /> value the name of the target set level.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Parent">
      <summary>Gets or sets the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet" /> object that is the parent of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel" /> object.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet" /> value that specifies the parent of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.TargetType">
      <summary>Gets the target type for the target set.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the target type for the target set. </returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.TargetTypeSkeleton">
      <summary>Gets the target type skeleton for the target set.</summary>
      <returns>A <see cref="T:System.String" /> object that represents the target type skeleton for the target set. </returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key" /> class represents the key that identifies the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key.#ctor(Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key" /> class based on the specified key.</summary>
      <param name="other">A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key" /> value that specifies the other key.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key" /> class that has the specified target type skeleton.</summary>
      <param name="targetTypeSkeleton">A <see cref="T:System.String" /> value that specifies the target type skeleton of the key.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key.Equals(Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey)">
      <summary>Determines whether the two specified objects are equal. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the specified key is equal to the referenced object key. If True, the key values are equal. Otherwise, False.</returns>
      <param name="key">A <see cref="T:Microsoft.SqlServer.Management.Sdk.Sfc.SfcKey" /> value that specifies one object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key.Equals(System.Object)">
      <summary>Determines whether the specified object key is equal to the referenced object key. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the specified key is equal to the referenced object key. If True, the key values are equal. Otherwise, False.</returns>
      <param name="obj">A <see cref="T:System.Object" /> value that specifies the object to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key.Equals(System.Object,System.Object)">
      <summary>Determines whether the specified object key is equal to the referenced object key.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the specified key is equal to the referenced object key. If True, the key values are equal. Otherwise, False.</returns>
      <param name="obj1">A <see cref="T:System.Object" /> value that specifies one object.</param>
      <param name="obj2">A <see cref="T:System.Object" /> value that specifies another object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key.GetHashCode">
      <summary>Gets the hash code for the object.</summary>
      <returns>A <see cref="T:System.Int32" /> value that specifies the hash code.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key.GetUrnFragment">
      <summary>Gets the unique resource name (URN) path partial string that represents the target set. </summary>
      <returns>A <see cref="T:System.String" /> value that contains the URN fragment.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key.op_Equality(Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key,Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key)">
      <summary>Performs a Boolean equality operation to determine whether two target sets reference the same target set.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two target sets are the same. Returns True if both parameters are null or reference the same target set. Otherwise, returns False.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key" /> object representing one of the target sets to compare.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key" /> object representing the other target sets to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key.op_Equality(Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key,System.Object)">
      <summary>Performs a Boolean equality operation to determine whether two target sets reference the same target set.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two target sets are the same. Returns True if both parameters are null or reference the same target set. Otherwise, returns False.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key" /> object representing one of the target sets to compare.</param>
      <param name="obj">A <see cref="T:System.Object" /> object representing the other target sets to compare. If the object does not reference a <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key" />, the method returns False.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key.op_Equality(System.Object,Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key)">
      <summary>Performs a Boolean equality operation to determine whether two target sets reference the same target set.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two target sets are the same. Returns True if both parameters are null or reference the same target set. Otherwise, returns False.</returns>
      <param name="obj">A <see cref="T:System.Object" /> object representing one of the target sets to compare. If the object does not reference a <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key" />, the method returns False.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key" /> object representing the other target sets to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key.op_Inequality(Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key,Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key)">
      <summary>Performs a Boolean equality operation to determine whether two target sets reference the same target set.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two target sets are the same. Returns True if the parameters reference separate target set, or if only one of the parameters is null. Otherwise, returns False.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key" /> object representing one of the target sets to compare.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key" /> object representing the other target set to compare.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key.op_Inequality(Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key,System.Object)">
      <summary>Performs a Boolean equality operation to determine whether two target set keys reference the same target set.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two target sets are the same. Returns True if the parameters reference separate target set, or if only one of the parameters is null. Otherwise, returns False.</returns>
      <param name="leftOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key" /> object representing one of the target sets to compare.</param>
      <param name="obj">A <see cref="T:System.Object" /> object representing the other target set to compare. If the object does not reference a <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key" />, the method returns True.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key.op_Inequality(System.Object,Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key)">
      <summary>Performs a Boolean equality operation to determine whether two target set keys reference the same target set.</summary>
      <returns>A <see cref="T:System.Boolean" /> value specifying whether the two target sets are the same. Returns True if the parameters reference separate target set, or if only one of the parameters is null. Otherwise, returns False.</returns>
      <param name="obj">A <see cref="T:System.Object" /> object representing one of the target sets to compare. If the object does not reference a <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key" />, the method returns True.</param>
      <param name="rightOperand">A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key" /> object representing the other Target set to compare.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TargetSetLevel.Key.targetTypeSkeleton">
      <summary>Gets the target type skeleton for the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel" /> key.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the target type skeleton of the key value.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevelCollection">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevelCollection" /> class represents a collection of <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel" /> objects that represent all target set levels in the target set. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetLevelCollection.#ctor(Microsoft.SqlServer.Management.Dmf.TargetSet)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevelCollection" /> class.</summary>
      <param name="parent">A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet" /> object value that specifies the parent of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevelCollection" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetLevelCollection.#ctor(Microsoft.SqlServer.Management.Dmf.TargetSet,System.Collections.Generic.IComparer{System.String})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetCollection" /> class.</summary>
      <param name="parent">A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSet" /> object value that specifies the parent of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevelCollection" /> object.</param>
      <param name="customComparer">An <see cref="T:System.Collections.Generic.IComparer{System.String}" /> object value that specifies the parent of the comparison interface that is associated with the target set level.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TargetSetLevelCollection.Contains(System.String)">
      <summary>Verifies whether the specified string exists in the collection. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that determines whether the specified string exists in the collection. If True, the string exists in the collection. Otherwise, False.</returns>
      <param name="filterTypeSkeleton">The <see cref="T:System.String" /> value that is to be found in the collection.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TargetSetLevelCollection.Item(System.String)">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel" /> object in the collection with the specified filter type skeleton.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel" /> object value that represents the target set level that has the specified filter type skeleton.</returns>
      <param name="filterTypeSkeleton">A <see cref="T:System.String" /> value that specifies the filter type skeleton of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevel" /> object in the <see cref="T:Microsoft.SqlServer.Management.Dmf.TargetSetLevelCollection" /> collection.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.TypeClass">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.TypeClass" /> enumeration contains values that describe the different class types.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.TypeClass.Unsupported">
      <summary>The type is not supported.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.TypeClass.Numeric">
      <summary>A numerical type.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.TypeClass.String">
      <summary>A string type.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.TypeClass.Bool">
      <summary>A Boolean type.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.TypeClass.DateTime">
      <summary>A type class that stores date and time information.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.TypeClass.Guid">
      <summary>A GUID type.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.TypeClass.Array">
      <summary>An array.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.TypeClass.Variant">
      <summary>A variant type.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.TypeClass.VarArgs">
      <summary>A variable argument.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Dmf.TypeClass.BitmappedEnum">
      <summary>A bitmapped enumeration.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.TypeConversionException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.TypeConversionException" /> class is an exception that is raised when a type conversion error occurs.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TypeConversionException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf" />.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TypeConversionException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TypeConversionException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TypeConversionException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TypeConversionException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TypeConversionException.#ctor(System.String,System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.TypeConversionException" /> class that has the specified input string, type and inner exception.</summary>
      <param name="inputString">A <see cref="T:System.String" /> value that specifies the input string that caused the type conversion error.</param>
      <param name="typeName">A <see cref="T:System.String" /> value that specifies the type that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TypeConversionException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.TypeConversionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TypeConversionException.InputString">
      <summary>Gets the input string that caused the type conversion error.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the input string that caused the type conversion error.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TypeConversionException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.TypeConversionException.TypeName">
      <summary>Gets the type that caused the conversion error.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the type that caused the error.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.UnsupportedObjectTypeException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.UnsupportedObjectTypeException" /> class is an exception that is raised when an error occurs when the policy encounters an unsupported object.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.UnsupportedObjectTypeException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.UnsupportedObjectTypeException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.UnsupportedObjectTypeException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.UnsupportedObjectTypeException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.UnsupportedObjectTypeException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.UnsupportedObjectTypeException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.UnsupportedObjectTypeException.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.UnsupportedObjectTypeException" /> class that has the specified object type and host.</summary>
      <param name="typeName">A <see cref="T:System.String" /> value that specifies the type of object that is not supported.</param>
      <param name="host">A <see cref="T:System.String" /> that specifies the name of the host that is associated with the unsupported object.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.UnsupportedObjectTypeException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.UnsupportedObjectTypeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.UnsupportedObjectTypeException.Host">
      <summary>Gets the host that is associated with the unsupported object.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the unsupported object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.UnsupportedObjectTypeException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.UnsupportedObjectTypeException.TypeName">
      <summary>Gets the type of object that is unsupported.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the type of object that is not supported.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.UnsupportedTargetSetForFacetException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.UnsupportedTargetSetForFacetException" /> class is an exception that is raised when an error occurs when the target set is not supported by the facet.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.UnsupportedTargetSetForFacetException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.UnsupportedTargetSetForFacetException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.UnsupportedTargetSetForFacetException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.UnsupportedTargetSetForFacetException" /> class that has the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.UnsupportedTargetSetForFacetException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.UnsupportedTargetSetForFacetException" /> class that has the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.UnsupportedTargetSetForFacetException.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.UnsupportedTargetSetForFacetException" /> class with the specified target set , object set, and facet.</summary>
      <param name="targetSetSkeleton">A <see cref="T:System.String" /> value that specifies the target set skeleton.</param>
      <param name="objectSetName">A <see cref="T:System.String" /> value that specifies the name of the target set.</param>
      <param name="facetName">A <see cref="T:System.String" /> value that specifies the name of the facet.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.UnsupportedTargetSetForFacetException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.UnsupportedTargetSetForFacetException.FacetName">
      <summary>Gets the facet that is referenced by the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the facet that is referenced by the exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.UnsupportedTargetSetForFacetException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.UnsupportedTargetSetForFacetException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.UnsupportedTargetSetForFacetException.ObjectSetName">
      <summary>Gets the object set that is referenced by the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the object set that is referenced by the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.UnsupportedTargetSetForFacetException.TargetSetSkeleton">
      <summary>Gets the target set skeleton.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the target set skeleton.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.UnsupportedTypeException">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Dmf.UnsupportedTypeException" /> class is an exception that is raised when an unsupported type is encountered.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.UnsupportedTypeException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.UnsupportedTypeException" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.UnsupportedTypeException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.UnsupportedTypeException" /> class with the specified message text.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.UnsupportedTypeException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.UnsupportedTypeException" /> class with the specified message text and inner exception.</summary>
      <param name="message">A <see cref="T:System.String" /> value that specifies the message text that describes the event that caused the exception.</param>
      <param name="innerException">An <see cref="T:System.Exception" /> object that contains the inner exception. This is used when one exception causes another exception to be raised. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.UnsupportedTypeException.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.UnsupportedTypeException" /> class with the specified type and node.</summary>
      <param name="node">A <see cref="T:System.String" /> value that specifies the node of the type.</param>
      <param name="typeName">A <see cref="T:System.String" /> value that specifies the name of the type. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.UnsupportedTypeException.DmfExceptionType">
      <summary>Gets the type of DMF exception.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.DmfExceptionType" /> value that specifies the type of DMF exception.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.UnsupportedTypeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets information required for serialization of the object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> value that specifies information required to serialize the exception.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> value that specifies the context information about the source or destination.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.UnsupportedTypeException.Message">
      <summary>Gets the message associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the message associated with the exception.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.UnsupportedTypeException.NodeType">
      <summary>Gets the node of the type that is unsupported.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the node of the type that is unsupported.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Dmf.UnsupportedTypeException.TypeName">
      <summary>Gets the name of the type that is unsupported.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the type that is unsupported.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Dmf.Utils">
      <summary>Represents a utility class that is used in policy-based management services.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Utils.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Dmf.Utils" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Utils.CheckConfigurationProperty``1(System.String,``0,``0)">
      <summary>Checks the specified configuration property.</summary>
      <param name="property">A string value that specifies the property.</param>
      <param name="configValue">The configuration value of the generic type.</param>
      <param name="runValue">The run value of the generic type.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Utils.GetDescriptionForAdHocEvaluationMode(Microsoft.SqlServer.Management.Dmf.AdHocPolicyEvaluationMode)">
      <summary>Gets the description for the <see cref="T:Microsoft.SqlServer.Management.Dmf.AdHocPolicyEvaluationMode" /> object supplied by the <see cref="mode" /> parameter.</summary>
      <returns>A string value that contains the description.</returns>
      <param name="mode">The <see cref="T:Microsoft.SqlServer.Management.Dmf.AdHocPolicyEvaluationMode" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Utils.GetDescriptionForEvaluationMode(Microsoft.SqlServer.Management.Dmf.AutomatedPolicyEvaluationMode)">
      <summary>Gets the description for the <see cref="T:Microsoft.SqlServer.Management.Dmf.AutomatedEvaluationMode" /> object supplied by the <see cref="mode" /> parameter.</summary>
      <returns>A string value that contains the description.</returns>
      <param name="mode">The <see cref="T:Microsoft.SqlServer.Management.Dmf.AutomatedPolicyEvaluationMode" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Utils.GetEvaluationModeByDescription(System.String)">
      <summary>Gets the evaluation mode from the <paramref name="execModeDescription" /> parameter.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Dmf.AutomatedPolicyEvaluationMode" /> object.</returns>
      <param name="execModeDescription">A string value that contains the description.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Dmf.Utils.IsValidHelpLink(System.String)">
      <summary>Gets a Boolean value that specifies whether the help link is valid.</summary>
      <returns>A Boolean value that specifies whether the help link is valid, True if valid, otherwise False.</returns>
      <param name="link">A string value that contains the link.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Facets.EvaluationModeAttribute">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.EvaluationModeAttribute" /> class contains the represents the attribute that is attached to the evaluation mode in policy-based management.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Facets.EvaluationModeAttribute.#ctor(Microsoft.SqlServer.Management.Dmf.AutomatedPolicyEvaluationMode)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Facets.EvaluationModeAttribute" /> class that has the specified evaluation mode.</summary>
      <param name="evaluationModes">An <see cref="T:Microsoft.SqlServer.Management.Dmf.AutomatedPolicyEvaluationMode" /> object that specifies the evaluation mode that is associated with the attribute.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Facets.EvaluationModeAttribute.AutomatedPolicyEvaluationMode">
      <summary>Gets or sets the evaluation mode for the policy.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Dmf.AutomatedPolicyEvaluationMode" /> object value that specifies the evaluation mode that is associated with the policy. </returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Facets.EvaluationModeAttribute.EvaluationModes">
      <summary>Gets the evaluation modes for the attribute.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Dmf.AutomatedPolicyEvaluationMode" /> object value that specifies the evaluation modes that are associated with the policy. </returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Facets.FacetEvaluationContext">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.FacetEvaluationContext" /> class represents the evaluation context for a facet in policy-based management.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Facets.FacetEvaluationContext.Alter">
      <summary>Updates any <see cref="T:Microsoft.SqlServer.Management.Facets.ExecutionModeAttribute" /> object property changes on the instance of SQL Server. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Facets.FacetEvaluationContext.GetFacetEvaluationContext(System.String,System.Object)">
      <summary>Gets the context that is associated with the attribute. </summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Facets.FacetEvaluationContext" /> object value that specifies the property value. </returns>
      <param name="facetName">A <see cref="T:System.String" /> value that specifies the name of the property.</param>
      <param name="target">A <see cref="T:System.Object" /> value that specifies the value of the property.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Facets.FacetEvaluationContext.GetFacetEvaluationContext(System.Type,System.Object)">
      <summary>Gets the context that is associated with the attribute. </summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Facets.FacetEvaluationContext" /> object value that specifies the property value. </returns>
      <param name="facetType">A <see cref="T:System.Type" /> value that specifies the name of the property.</param>
      <param name="target">A <see cref="T:System.Object" /> value that specifies the value of the property.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Facets.FacetEvaluationContext.GetPropertyValue(System.String)">
      <summary>Gets the value of the specified property. </summary>
      <returns>An <see cref="T:System.Object" /> value that specifies the property value. </returns>
      <param name="name">A <see cref="T:System.String" /> value that specifies the name of the property.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Facets.FacetEvaluationContext.Interface">
      <summary>Gets the interface that is associated with the evaluation context.</summary>
      <returns>A <see cref="T:System.Type" /> object that specifies the interface that is associated with the evaluation context. </returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Facets.FacetEvaluationContext.Refresh">
      <summary>Refreshes the attribute properties. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Facets.FacetEvaluationContext.SetPropertyValue(System.String,System.Object)">
      <summary>Sets the value of the specified property. </summary>
      <param name="name">A <see cref="T:System.String" /> value that specifies the name of the property.</param>
      <param name="value">A <see cref="T:System.Object" /> value that specifies the value of the property.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Facets.FacetEvaluationContext.Target">
      <summary>Gets the object that is associated with the evaluation context.</summary>
      <returns>A <see cref="T:System.Object" /> object that specifies the object that is associated with the evaluation context. </returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Facets.FacetRepository">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Facets.FacetRepository" /> class represents a store of Policy-Based Management facets. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Facets.FacetRepository.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Facets.FacetRepository" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Facets.FacetRepository.GetFacetEvaluationMode(System.Type)">
      <summary>Gets the evaluation mode for the specified type.</summary>
      <returns>The <see cref="P:Microsoft.SqlServer.Management.Facets.EvaluationModeAttribute.AutomatedPolicyEvaluationMode" /> object value that specifies the evaluation mode for the facet.</returns>
      <param name="facet">A <see cref="T:System.Type" /> that specifies the facet.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Facets.FacetRepository.GetFacetProperties(System.Type)">
      <summary>Gets the facet properties for the specified type.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Dmf.PropertyInfo" /> object value that specifies the property information. </returns>
      <param name="managementFacet">A <see cref="T:System.Type" /> object value that specifies the type.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Facets.FacetRepository.GetFacetsForType(System.Type)">
      <summary>Gets a list of facets for the specified target type.</summary>
      <returns>A <see cref="T:System.Collections.Generic.List" /> of <see cref="T:System.Type" /> values that specifies the facets for the target type.</returns>
      <param name="target">A <see cref="T:System.Type" /> that specifies the target type.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Facets.FacetRepository.GetFacetSupportedRootType(System.Type)">
      <summary>Gets the facet for the specified root type.</summary>
      <returns>A <see cref="T:System.Type" /> value that specifies the root type that is associated with the facet. </returns>
      <param name="facet">A <see cref="T:System.Type" /> object value that specifies the root type.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Facets.FacetRepository.GetFacetSupportedTypes(System.Type)">
      <summary>Gets a list of types supported by the facet type.</summary>
      <returns>A <see cref="T:System.Collections.Generic.List" /> of <see cref="T:System.Type" /> values that specifies the supported target types for the specified facet.</returns>
      <param name="managementFacet">A <see cref="T:System.Type" /> that specifies the facet.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Facets.FacetRepository.GetFacetType(System.String)">
      <summary>Gets the facet for the specified type.</summary>
      <returns>A <see cref="T:System.Type" /> value that specifies the type that is associated with the facet. </returns>
      <param name="facetShortName">A <see cref="T:System.String" /> object value that specifies the facet.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Facets.FacetRepository.GetRootFacets(System.Type)">
      <summary>Gets the facets for the specified root type.</summary>
      <returns>A <see cref="T:System.Collections.Generic.List" /> of <see cref="T:System.Type" /> object values that specifies the types that are associated with the facet. </returns>
      <param name="rootType">A <see cref="T:System.Type" /> object value that specifies the type.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Facets.FacetRepository.IsPropertyConfigurable(System.Type,System.String)">
      <summary>Determines whether the specified property can be set.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the property is configurable.If True, the property is configurable. Otherwise, False.</returns>
      <param name="managementFacet">A <see cref="T:System.Type" /> object value that specifies the type.</param>
      <param name="propertyName">A <see cref="T:System.String" /> object value that specifies the name of the property.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Facets.FacetRepository.IsRegisteredFacet(System.Type)">
      <summary>Determines whether the facet is registered.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the facet is registered.If True, the facet is registered. Otherwise, False.</returns>
      <param name="facet">A <see cref="T:System.Type" /> object value that specifies the type.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Facets.FacetRepository.IsRootFacet(System.Type,System.Type)">
      <summary>Determines whether the facet is the root type.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the facet is the root.If True, the facet is the root. Otherwise, False.</returns>
      <param name="rootType">A <see cref="T:System.Type" /> object value that specifies the root type.</param>
      <param name="facet">A <see cref="T:System.Type" /> object value that specifies the facet type.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Facets.FacetRepository.RegisteredFacets">
      <summary>Gets an interface that specifies an enumeration of registered facets.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Smo.IEnumerable" /> object that represents an interface that contains an enumeration of registered facets.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Facets.IDmfAdapter">
      <summary>An interface that represents an adapter in Policy-Based Management.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Facets.IDmfObjectInfo">
      <summary>An interface that represents object information in Policy-Based Management.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Facets.IDmfObjectInfo.ObjectPath">
      <summary>Gets the path of the object.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the path of the object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Facets.IDmfObjectInfo.RootPath">
      <summary>Gets the path of the root object.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the path of the root object.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Facets.PropertySourceSubObjectTypeAttribute">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.PropertySourceSubObjectTypeAttribute" /> class contains the represents the attribute that is attached to the property source sub-object type in policy-based management.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Facets.PropertySourceSubObjectTypeAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Facets.PropertySourceSubObjectTypeAttribute" /> class that has the specified source type.</summary>
      <param name="sourceType">A <see cref="T:System.Type" /> object that specifies the source type.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Facets.PropertySourceSubObjectTypeAttribute.SourceType">
      <summary>Gets the source type that is associated with the attribute.</summary>
      <returns>A <see cref="T:System.Type" /> object value that specifies the source type. </returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Facets.StateChangeEventAttribute">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.StateChangeEventAttribute" /> class contains the attribute that is attached to the state change event in policy-based management.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Facets.StateChangeEventAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Facets.StateChangeEventAttribute" /> class for the specified event and target.</summary>
      <param name="eventName">A <see cref="T:System.String" /> object that specifies the state change event.</param>
      <param name="targetType">A <see cref="T:System.String" /> object that specifies the target.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Facets.StateChangeEventAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Facets.StateChangeEventAttribute" /> class for the specified event, target type and target type alias.</summary>
      <param name="eventName">A string value that specifies the state change event.</param>
      <param name="targetType">A string value that specifies the target type.</param>
      <param name="targetTypeAlias">A string value that specifies the target type alias.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Facets.StateChangeEventAttribute.EventName">
      <summary>Gets the name of the event.</summary>
      <returns>A <see cref="T:System.String" /> object value that specifies the event. </returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Facets.StateChangeEventAttribute.TargetType">
      <summary>Gets the type of target.</summary>
      <returns>A <see cref="T:System.String" /> object value that specifies the target type. </returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Facets.StateChangeEventAttribute.TargetTypeAlias">
      <summary>Gets the alias of the target type.</summary>
      <returns>A <see cref="T:System.String" /> object value that specifies the target type alias. </returns>
    </member>
  </members>
</doc>