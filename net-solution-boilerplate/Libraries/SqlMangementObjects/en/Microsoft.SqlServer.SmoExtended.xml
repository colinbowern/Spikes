<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.SqlServer.SmoExtended</name>
  </assembly>
  <members>
    <member name="T:Microsoft.SqlServer.Management.Smo.AsyncStatus">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.AsyncStatus" /> object represents the status of an asynchronous process.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.AsyncStatus.ExecutionStatus">
      <summary>Gets the execution status of the asynchronous process.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Smo.ExecutionStatus" /> object value that specifies the execution status of the asynchronous process.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.AsyncStatus.LastException">
      <summary>Gets the most recent exception generated by the asynchronous process.</summary>
      <returns>An <see cref="T:System.Exception" /> system object that specifies the most recent exception generated by the asynchronous process.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.Backup">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.Backup" /> object provides programmatic access to Microsoft SQL Server backup operations. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Backup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.Backup" /> class.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Backup.Action">
      <summary>Gets or sets the type of backup to be performed.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Smo.BackupActionType" /> object representing the type of backup to be performed. By default the value is set to <see cref="F:Microsoft.SqlServer.Management.Smo.BackupActionType.Database" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Backup.BackupSetDescription">
      <summary>Gets or sets a textual description for a particular backup set. </summary>
      <returns>A <see cref="T:System.String" /> value that contains a textual description of the backup set. By default, the value is an empty string.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Backup.BackupSetName">
      <summary>Gets or sets the name used to identify a particular backup set. </summary>
      <returns>A <see cref="T:System.String" /> value that specifies the backup set name. By default, the value is set to an empty string.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Backup.CompressionOption">
      <summary>Gets or sets the backup compression option.</summary>
      <returns>The backup compression option.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Backup.CopyOnly">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> property value that specifies the backup is a copy-only backup. This does not affect the sequence of backups in the usual backup schedule. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the backup is a copy-only backup.If True, the backup is a copy-only backup.If False (default), the backup is not a copy-only backup, and is part of the usual sequence of backups.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Backup.ExpirationDate">
      <summary>Gets or sets the date and time when the backup set expires and the backup data is no longer considered relevant. </summary>
      <returns>A <see cref="T:System.DateTime" /> object value that specifies the expiration date. By default, the value is unspecified.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Backup.FormatMedia">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> property value that determines whether a tape is formatted as the first step of the backup operation. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the tape will be formatted.If True, the Microsoft SQL Server backup operation attempts to format the tape as the initial step.If False (default), the SQL Server backup operation does not attempt to format the tape.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Backup.Incremental">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> property value that determines whether to perform a differential backup. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether a differential backup will be performed.If True, only changes since the most recent full or differential backup will be included in the backup operation.If False (default), a full backup will be performed.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Backup.Initialize">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> property value that determines whether the devices associated with a backup operation are initialized as part of the backup operation. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the backup devices will be initialized.If True, the backup specified becomes the first backup set on the media, overwriting any existing backup sets on the media. The backup media is not overwritten if either of the following conditions is met: All backup sets on the media have not yet expired. The optionally specified backup set name does not match the name on the backup media. Specify the backup set name with the <see cref="P:Microsoft.SqlServer.Management.Smo.Backup.BackupSetName" /> property. If False (default), the backup specified creates a new backup set appended as the last backup set on the medium.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Backup.LogTruncation">
      <summary>Gets or sets the method used to truncate the database log as part of the backup operation. </summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Smo.BackupTruncateLogType" /> object value that specifies the log truncation option that has been selected. By default, the value is set to <see cref="F:Microsoft.SqlServer.Management.Smo.BackupTruncateLogType.Truncate" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Backup.MediaDescription">
      <summary>Gets or sets a textual description of the medium that contains a backup set. </summary>
      <returns>A <see cref="T:System.String" /> value that contains a textual description of the medium.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Backup.Mirrors">
      <summary>Gets or sets the list of backup devices used by the mirrored backup. </summary>
      <returns>An array of BackupDeviceList objects that specifies the backup devices used by the mirrored backup. </returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Backup.RetainDays">
      <summary>Gets or sets the number of days that must elapse before a backup set can be overwritten. </summary>
      <returns>An <see cref="T:System.Int32" /> value that specifies the retention period in days. By default, the value is set to zero.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Backup.Script(Microsoft.SqlServer.Management.Smo.Server)">
      <summary>Returns a <see cref="T:System.String" /> containing the Transact-SQL statement that can be used to execute the referenced backup. </summary>
      <returns>A <see cref="T:System.String" /> containing theTransact-SQL statement that can be used to execute the referenced backup. </returns>
      <param name="targetServer">The <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object that represents the Microsoft SQL Server instance that is the source of the backup operation. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Backup.SkipTapeHeader">
      <summary>Gets or sets <see cref="T:System.Boolean" /> property that determines whether the tape header is read. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the tape header is read.If True, a media name recorded on the medium is not selected. The backup set is appended to the medium.If False (default), a recorded media name is selected. </returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Backup.SqlBackup(Microsoft.SqlServer.Management.Smo.Server)">
      <summary>Performs the database backup operation as specified by the properties of the <see cref="T:Microsoft.SqlServer.Management.Smo.Backup" /> object used. </summary>
      <param name="srv">The <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object that represents the Microsoft SQL Server instance that is the source of the backup operation. </param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Backup.SqlBackupAsync(Microsoft.SqlServer.Management.Smo.Server)">
      <summary>Performs the database backup operation asynchronously as specified by the properties of the <see cref="T:Microsoft.SqlServer.Management.Smo.Backup" /> object used. </summary>
      <param name="srv">The <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object that represents the Microsoft SQL Server instance that is the source of the backup operation.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Backup.UndoFileName">
      <summary>Gets or sets the name of the undo file used to store uncommitted transactions that are rolled back during recovery. </summary>
      <returns>A <see cref="T:System.String" /> value that specifies the undo file name.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.BackupActionType">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.BackupActionType" /> enumeration contains values that are used to specify the type of backup.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.BackupActionType.Database">
      <summary>Backs up all the data files in the database.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.BackupActionType.Files">
      <summary>Backs up specified data files. This option is recommended only when the transactions that have occurred since the last backup are isolated to the file or group of files that are being backed up.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.BackupActionType.Log">
      <summary>Backs up the transaction log. </summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.BackupCompressionOptions">
      <summary>The BackupCompressionOptions enumeration contains values that are used to specify the backup compression option.  </summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.BackupCompressionOptions.Default">
      <summary>Value = 0. Use the default backup compression server configuration.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.BackupCompressionOptions.On">
      <summary>Value = 1. Enable the backup compression.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.BackupCompressionOptions.Off">
      <summary>Value = 2. Disable the backup compression.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.BackupDeviceItem">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceItem" /> object provides programmatic access to named SQL Server backup devices. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.BackupDeviceItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceItem" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.BackupDeviceItem.#ctor(System.String,Microsoft.SqlServer.Management.Smo.DeviceType)">
      <summary>Initializes a new instance of the <see cref="BackupDeviceItem" /> class that has the specified name and kind of device.</summary>
      <param name="name">A <see cref="T:System.String" /> value that specifies the name of the backup device item.</param>
      <param name="deviceType">A <see cref="BackupDeviceType" /> object value that specifies the kind of backup device.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.BackupDeviceItem.CompareTo(System.Object)">
      <summary>Verifies whether the specified object shares the same name as the referenced <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceItem" /> object. </summary>
      <returns>An <see cref="T:System.Int32" /> value that specifies the lexical relationship between the two strings.ValueDescription<paramref name="Less than zero" />The referenced object name is less than the object name that is specified by the parameter.<paramref name="Zero" />The referenced object name is equal to the object name that is specified by the parameter.<paramref name="Greater than zero" />The referenced object name is greater than the object name that is specified by the parameter.</returns>
      <param name="obj">A <see cref="T:System.Object" /> object value that specifies the object that is compared with the referenced <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceItem" /> object.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.BackupDeviceItem.DeviceType">
      <summary>Gets the kind of device for the <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceItem" /> object. </summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceType" /> object value that specifies the kind of backup device.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.BackupDeviceItem.Equals(System.Object)">
      <summary>Determines whether the current object is the same as the specified object.</summary>
      <returns>A <see cref="T:System.Boolean" /> that is true if the objects are the same. Otherwise, false.</returns>
      <param name="obj">A <see cref="T:System.Object" /> that specifies the object to compate with the current backup device item.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.BackupDeviceItem.GetHashCode">
      <summary>Gets the hash code for the object.</summary>
      <returns>A <see cref="T:System.Int32" /> value that specifies the hash code.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.BackupDeviceItem.Name">
      <summary>Gets the name of device for the <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceItem" /> object. </summary>
      <returns>A <see cref="T:System.String" /> object value that specifies the name of backup device.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.BackupDeviceItem.op_Equality(Microsoft.SqlServer.Management.Smo.BackupDeviceItem,Microsoft.SqlServer.Management.Smo.BackupDeviceItem)">
      <summary>Determines whether two objects are equal by performing an equality operation on two <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceItem" /> objects. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies the outcome of the equality operation.If True, the two objects are equal. Otherwise, False.</returns>
      <param name="r1">A <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceItem" /> object that is used in the equality operation.</param>
      <param name="r2">A <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceItem" /> object that is used in the equality operation.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.BackupDeviceItem.op_GreaterThan(Microsoft.SqlServer.Management.Smo.BackupDeviceItem,Microsoft.SqlServer.Management.Smo.BackupDeviceItem)">
      <summary>Determines whether one object is greater than another by performing an operation on two <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceItem" /> objects. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies the outcome of the operation to determine whether one object is greater than the other.If True, the first object is greater than the second. Otherwise, False.</returns>
      <param name="r1">The first <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceItem" /> object that is used in the operation.</param>
      <param name="r2">The second <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceItem" /> object that is used in the greater than operation.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.BackupDeviceItem.op_Inequality(Microsoft.SqlServer.Management.Smo.BackupDeviceItem,Microsoft.SqlServer.Management.Smo.BackupDeviceItem)">
      <summary>Determines whether two objects are unequal by performing an inequality operation on two <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceItem" /> objects. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies the outcome of the inequality operation.If True, the two objects are unequal. Otherwise, False.</returns>
      <param name="r1">A <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceItem" /> object that is used in the inequality operation.</param>
      <param name="r2">A <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceItem" /> object that is used in the inequality operation.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.BackupDeviceItem.op_LessThan(Microsoft.SqlServer.Management.Smo.BackupDeviceItem,Microsoft.SqlServer.Management.Smo.BackupDeviceItem)">
      <summary>Determines whether one object is less than another by performing an operation on two <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceItem" /> objects. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies the outcome of the operation to determine whether one object is less than the other.If True, the first object is less than the second. Otherwise, False.</returns>
      <param name="r1">The first <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceItem" /> object that is used in the operation.</param>
      <param name="r2">The second <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceItem" /> object that is used in the greater than operation.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.BackupDeviceList">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceList" /> object provides programmatic access to a list backup devices. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.BackupDeviceList.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceList" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.BackupDeviceList.#ctor(System.Collections.Generic.IEnumerable{Microsoft.SqlServer.Management.Smo.BackupDeviceItem})">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceList" /> class based on the specified <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceItem" /> object. </summary>
      <param name="collection">
        <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceItem" /> object value that specifies the backup devices.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.BackupDeviceList.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceList" /> class with the specified capacity. </summary>
      <param name="capacity">An <see cref="T:System.Int32" /> value that specifies the capacity of the <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceList" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.BackupDeviceList.AddDevice(System.String,Microsoft.SqlServer.Management.Smo.DeviceType)">
      <summary>Adds device type with the specified name to the list.</summary>
      <param name="name">
        <see cref="T:System.String" /> value that is used to specify the name of the device that is being added to the <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceList" /> object.</param>
      <param name="deviceType">
        <see cref="T:Microsoft.SqlServer.Management.Smo.DeviceType" /> object value that specifies the type of device to add to the <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceList" /> object.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.BackupRestoreBase">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.BackupRestoreBase" /> class is a base class that represents functionality that is common to both backup and restore operations. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.BackupRestoreBase" /> class. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.Abort">
      <summary>Terminates a running backup or restore operation. </summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.AsyncStatus">
      <summary>Gets the asynchronous status of a backup or restore process.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Smo.AsyncStatus" /> object value that specifies the asynchronous status of the process. </returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.BlockSize">
      <summary>Gets or sets the physical block size of the backup or restore, in bytes. </summary>
      <returns>An <see cref="T:System.Int32" /> value that specifies the block size in bytes. </returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.BufferCount">
      <summary>Gets or sets the total number of I/O buffers to be used for the backup or restore operation. </summary>
      <returns>An <see cref="T:System.Int32" /> value that specifies the total number of I/O buffers to be used for the backup operation. </returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.Checksum">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> property value that determines whether a checksum value is calculated during backup or restore operations. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the checksum value is calculated.If True, the checksum value is calculated. Otherwise, False (default).</returns>
    </member>
    <member name="E:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.Complete">
      <summary>Occurs when the backup or restore operation completes. </summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.ContinueAfterError">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> property value that determines whether the backup or restore continues after a checksum error occurs. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the operation will continue after a checksum error.If True, the operation will continue when a checksum error occurs. Otherwise, False (default).</returns>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.currentAsyncOperation">
      <summary>Specifies the current asynchronous operation, such as backup, restore, or none.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.Database">
      <summary>Gets or sets the database on which the backup or restore operation runs. </summary>
      <returns>A <see cref="T:System.String" /> value that contains the database name. By default, the value is an empty string.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.DatabaseFileGroups">
      <summary>Gets the SQL Server file groups targeted by the backup or restore operation. </summary>
      <returns>A <see cref="T:System.Collections.Specialized.StringCollection" /> system object value that lists the names of the targeted file groups. By default, the value is unspecified.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.DatabaseFiles">
      <summary>Gets the operating system files targeted by the backup or restore operation. </summary>
      <returns>A <see cref="T:System.Collections.Specialized.StringCollection" /> system object value that lists the names of the targeted files. By default, the value is unspecified.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.Devices">
      <summary>Gets the backup devices specified for the backup or restore operation. </summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceList" /> object array value that lists the names of the required backup devices. By default, the value is unspecified.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.ExecuteSql(Microsoft.SqlServer.Management.Smo.Server,System.Collections.Specialized.StringCollection)">
      <summary>Executes a batch of Transact-SQL statements that does not expect a returned results set on the specified instance of SQL Server.</summary>
      <param name="server">A <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object that specifies the instance of SQL Server on which to execute the batch of Transact-SQL statements.</param>
      <param name="queries">A <see cref="T:System.Collections.Specialized.StringCollection" /> system object that contains the batch of Transact-SQL statements to be executed.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.ExecuteSqlAsync(Microsoft.SqlServer.Management.Smo.Server,System.Collections.Specialized.StringCollection)">
      <summary>Executes a batch of Transact-SQL statements asynchronously that does not expect a returned results set on the specified instance of SQL Server.</summary>
      <param name="server">A <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object that specifies the instance of SQL Server on which to execute the batch of Transact-SQL statements.</param>
      <param name="queries">A <see cref="T:System.Collections.Specialized.StringCollection" /> system object that contains the batch of Transact-SQL statements to be executed.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.ExecuteSqlWithResults(Microsoft.SqlServer.Management.Smo.Server,System.String)">
      <summary>Executes a batch of Transact-SQL statements that expects one or more returned results sets on the specified instance of SQL Server.</summary>
      <returns>A <see cref="T:System.Data.DataSet" /> system object that contains the results sets returned by the executed Transact-SQL command batch.</returns>
      <param name="server">A <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object that specifies the instance of SQL Server on which to execute the batch of Transact-SQL statements.</param>
      <param name="cmd">A <see cref="T:System.Collections.Specialized.StringCollection" /> system object that contains the batch of Transact-SQL statements to be executed.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.GetDevicesScript(System.Text.StringBuilder,Microsoft.SqlServer.Management.Smo.BackupDeviceList,Microsoft.SqlServer.Management.Common.ServerVersion)">
      <summary>Gets the script that is used to create devices.</summary>
      <param name="query">A <see cref="T:System.Text.StringBuilder" /> value that specifies the Transact-SQL query.</param>
      <param name="devices">A <see cref="T:Microsoft.SqlServer.Management.Smo.BackupDeviceItem" /> object value that specifies the devices associated with the backup or restore operation.</param>
      <param name="targetVersion">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerVersion" /> object that specifies the version of the instance of SQL Server on which the devices are to be re-created.</param>
    </member>
    <member name="E:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.Information">
      <summary>Occurs when any informational message is issued by Microsoft SQL Server that cannot be handled by the <see cref="E:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.Complete" /> <see cref="E:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.NextMedia" /> or <see cref="E:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.PercentComplete" /> events. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.IsStringValid(System.String)">
      <summary>Verifies whether the specified string is valid.</summary>
      <returns>A <see cref="T:System.Boolean" /> that indicates whether the string is valid.</returns>
      <param name="s">A <see cref="T:System.String" /> value that specifies the string to be validated.</param>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.m_BackupAction">
      <summary>Specifies the backup action type, such as database or log.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.m_LogTruncation">
      <summary>Specifies whether to truncate the log.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.m_RestoreAction">
      <summary>Specifies the restore action type, such as database or log.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.MaxTransferSize">
      <summary>Gets or sets the maximum number of bytes to be transferred between the backup media and the instance of SQL Server. </summary>
      <returns>An <see cref="T:System.Int32" /> value that specifies the maximum number of bytes to be transferred in the backup and restore operation.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.MediaName">
      <summary>Gets or sets the name used to identify a particular media set. </summary>
      <returns>A <see cref="T:System.String" /> system value that specifies the media name. By default, the value is an empty string.</returns>
    </member>
    <member name="E:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.NextMedia">
      <summary>Occurs when the backup or restore operation exhausts the medium in a target device. </summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.NoRecovery">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> property value that determines whether the tail of the log is backed up and whether the database is restored into the Restoring state. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the tape is rewound at the end of the operation.If True, the tail end of the log is not backed up. When restored, the database is in the Restoring state.If False (default), the tail end of the log is backed up.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.NoRewind">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> property value that determines whether Microsoft SQL Server will keep the tape open after the backup or restore operation. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the tape is rewound at the end of the operation or not.If True, the tape drive is open and positioned.If False (default), the tape is rewound </returns>
    </member>
    <member name="E:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.PercentComplete">
      <summary>Occurs when a backup or restore operation reaches a completion unit. </summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.PercentCompleteNotification">
      <summary>Gets or sets the percentage interval for <see cref="T:Microsoft.SqlServer.Management.Smo.PercentCompleteEventHandler" /> event handler calls. </summary>
      <returns>An <see cref="T:System.Int32" /> that specifies the percentage interval for the event handler calls. The default value is 10.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.Restart">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> property value that determines whether the backup or restore operation will restart if it is interrupted. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the operation will restart after an interruption. If True, SQL Server tries to continue processing on a partial backup or restore operation.If False (default), SQL Server restarts an interrupted backup or restore operation at the beginning of the backup set.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.SetMediaPassword(System.Security.SecureString)">
      <summary>Sets the password for a media set. </summary>
      <param name="value">A <see cref="T:System.Security.SecureString" /> value that specifies the password for the media set.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.SetMediaPassword(System.String)">
      <summary>Sets the password for a media set. </summary>
      <param name="value">A <see cref="T:System.String" /> value that specifies the password for the media set.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.SetPassword(System.Security.SecureString)">
      <summary>Sets the password for a backup set. </summary>
      <param name="value">A <see cref="T:System.Security.SecureString" /> value that specifies the password for the backup set.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.SetPassword(System.String)">
      <summary>Sets the password for a backup set. </summary>
      <param name="value">A <see cref="T:System.String" /> value that specifies the password for the backup set.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.UnloadTapeAfter">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> property value that determines whether tape media are rewound and unloaded after the backup or restore operation completes. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether tape media are rewound and unloaded after the backup or restore operation completes. If True, the tape medium in the tape device is rewound and unloaded when the operation completes.If False (default), no attempt is made to rewind and unload the tape medium.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.Wait">
      <summary>Waits for the current backup or restore operation to complete before moving on to the next process.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.AsyncOperation">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.AsyncOperation" /> enumeration contains values that are used to specify which backup components are running asynchronously. </summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.AsyncOperation.None">
      <summary>There is no asynchronous operation.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.AsyncOperation.Backup">
      <summary>The backup process is the asynchronous operation.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.BackupRestoreBase.AsyncOperation.Restore">
      <summary>The restore process is the asynchronous operation.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.BackupTruncateLogType">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.BackupTruncateLogType" /> enumeration contains values that are used to specify the truncate action taken on the log.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.BackupTruncateLogType.TruncateOnly">
      <summary>Truncates the log without performing a backup.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.BackupTruncateLogType.NoTruncate">
      <summary>The log is not truncated. All transactions remain in the log.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.BackupTruncateLogType.Truncate">
      <summary>The log is truncated. All completed transactions will be removed from the log.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.DatabaseRecoveryState">
      <summary>Specifies the state of the database restore operation.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseRecoveryState.WithRecovery">
      <summary>Leaves the database ready to use by rolling back uncommitted transactions. Additional transaction logs cannot be restored.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseRecoveryState.WithNoRecovery">
      <summary>Instructs the restore operation to not rollback any uncommitted transactions for another transaction log backup to be restored later. The database remains in the restoring state after the restore operation.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseRecoveryState.WithStandBy">
      <summary>Rollbacks uncommitted transactions, but saves the rollback actions in a standby file that allows the recovery effects to be reversed.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.DatabaseRestorePlanner">
      <summary>Represents the Database Restore Planner.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseRestorePlanner.#ctor(Microsoft.SqlServer.Management.Smo.Server)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.DatabaseRestorePlanner" /> class with specified server.</summary>
      <param name="server">The server.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseRestorePlanner.#ctor(Microsoft.SqlServer.Management.Smo.Server,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.DatabaseRestorePlanner" /> class with specified server and database name.</summary>
      <param name="server">The server</param>
      <param name="databaseName">The name of the database.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseRestorePlanner.#ctor(Microsoft.SqlServer.Management.Smo.Server,System.String,System.DateTime,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.DatabaseRestorePlanner" /> class with specified server, database name, point in time and recovery file.</summary>
      <param name="server">The server.</param>
      <param name="databaseName">Name of the database.</param>
      <param name="pointInTime">The point in time to restore.</param>
      <param name="tailLogBackupFile">The tail log backup device item.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseRestorePlanner.BackupMediaList">
      <summary>Gets the backup device item list.</summary>
      <returns>The collection of backup device item list.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseRestorePlanner.BackupTailLog">
      <summary>Gets or sets a value indicating whether to backup tail log.</summary>
      <returns>True if backup tail log; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseRestorePlanner.CreateRestorePlan">
      <summary>Creates the restore plan.</summary>
      <returns>The created restore plan.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseRestorePlanner.CreateRestorePlan(Microsoft.SqlServer.Management.Smo.RestoreOptions)">
      <summary>Creates the restore plan with restore options.</summary>
      <returns>The restore plan.</returns>
      <param name="ro">The restore options.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseRestorePlanner.DatabaseName">
      <summary>Gets or sets the database name.</summary>
      <returns>The name of the database.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseRestorePlanner.ReadHeaderFromMedia">
      <summary>Gets or sets a value indicating whether read header from devices.</summary>
      <returns>True if read header from media; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseRestorePlanner.RestoreToLastBackup">
      <summary>Gets or sets a value indicating whether restore to last backup.</summary>
      <returns>True if restore to last backup; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseRestorePlanner.RestoreToPointInTime">
      <summary>Gets or sets the restore to point in time.</summary>
      <returns>The restore to point in time.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseRestorePlanner.Server">
      <summary>Gets or sets the server.</summary>
      <returns>The server.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseRestorePlanner.TailLogBackupFile">
      <summary>Gets or sets the tail log backup file.</summary>
      <returns>The new tail log backup file.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseRestorePlanner.TailLogWithNoRecovery">
      <summary>Gets or sets whether the database restore planner tails log without using recovery.</summary>
      <returns>True if the database restore planner tails log without using recovery; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.DataTransferBase">
      <summary>Represents the data transfer base.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.DataTransferBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.DataTransferBase" /> class using default values.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.DataTransferBase.#ctor(Microsoft.SqlServer.Management.Smo.Database)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.DataTransferBase" /> class with specified database.</summary>
      <param name="database">The database.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.InvalidRestorePlanException">
      <summary>Exception thrown on trying to execute or verify an invalid Restore plan.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.NextRestoreEventArgs">
      <summary>Represents the next restore event arguments.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.NextRestoreEventArgs.#ctor(System.String,System.String,System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.NextRestoreEventArgs" /> class.</summary>
      <param name="backupSetName">Name of the backup set.</param>
      <param name="backupSetDescription">The backup set description.</param>
      <param name="deviceName">Name of the device.</param>
      <param name="count">The count.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.NextRestoreEventArgs.BackupSetDescription">
      <summary>Gets or sets the backup set description.</summary>
      <returns>The backup set description.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.NextRestoreEventArgs.BackupSetName">
      <summary>Gets or sets the name of the backup set.</summary>
      <returns>The name of the backup set.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.NextRestoreEventArgs.Continue">
      <summary>Gets or sets a value indicating whether to continue next Restore Operation.</summary>
      <returns>True if continue; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.NextRestoreEventArgs.Count">
      <summary>Gets or sets the count of the next restore event.</summary>
      <returns>The count of the next restore event.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.NextRestoreEventArgs.DevicesName">
      <summary>Gets or sets the name of the backup media.</summary>
      <returns>The name of the backup media.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.NextRestoreEventHandler">
      <summary>Handles the NextRestoreEvent class.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.PageRestorePlanner">
      <summary>Represents the page restore planner.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.PageRestorePlanner.#ctor(Microsoft.SqlServer.Management.Smo.Database)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.PageRestorePlanner" /> class with specified database.</summary>
      <param name="database">The database.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.PageRestorePlanner.#ctor(Microsoft.SqlServer.Management.Smo.Database,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.PageRestorePlanner" /> class with specified database and tail log backup file.</summary>
      <param name="database">The database.</param>
      <param name="tailLogBackupFileName">Name of the tail log backup file.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.PageRestorePlanner.CreateRestorePlan">
      <summary>Creates the restore plan.</summary>
      <returns>The created restore plan.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.PageRestorePlanner.Database">
      <summary>Gets or sets the database.</summary>
      <returns>The database.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.PageRestorePlanner.SuspectPages">
      <summary>Gets or sets the suspect pages.</summary>
      <returns>The suspect page.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.PageRestorePlanner.TailLogBackupFile">
      <summary>Gets or sets the tail log backup file.</summary>
      <returns>The tail log backup file.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.PercentCompleteEventArgs">
      <summary>Represents the arguments passed by the event raised when a process reaches a percent complete marker.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.PercentCompleteEventArgs.Message">
      <summary>Gets the message for the <see cref="T:Microsoft.SqlServer.Management.Smo.PercentCompleteEventArgs" />.</summary>
      <returns>The message for the <see cref="T:Microsoft.SqlServer.Management.Smo.PercentCompleteEventArgs" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.PercentCompleteEventArgs.Percent">
      <summary>Gets the percentage value amount that when used in integer multiples, and marks the point at which to report progress.</summary>
      <returns>The percentage value. </returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.PercentCompleteEventHandler">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.PercentCompleteEventHandler" /> class represents the event handler that is used to handle percent complete events.</summary>
      <param name="sender">An <see cref="T:System.Object" /> value that specifies the source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.SqlServer.Management.Smo.PercentComplete" />http://msdn.microsoft.com/library/en-us/cpref/html/frlrfsystemeventargsclasstopic.asp EventArgs  object that contains the event data. </param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.RelocateFile">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.RelocateFile" /> object is a programmatic tool that lets a file be relocated.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RelocateFile.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.RelocateFile" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RelocateFile.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.RelocateFile" /> class. </summary>
      <param name="logicalFileName">A <see cref="T:System.String" /> value that specifies the logical file name.</param>
      <param name="physicalFileName">A <see cref="T:System.String" /> value that specifies the physical file name.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RelocateFile.LogicalFileName">
      <summary>Gets or sets the logical file name for the specified file.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the logical file name for the specified file.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RelocateFile.PhysicalFileName">
      <summary>Gets or sets the physical file name for the specified file.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the physical file name for the specified file.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.Restore">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.Restore" /> object provides programmatic access to restore operations.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Restore.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.Restore" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Restore.#ctor(System.String,Microsoft.SqlServer.Management.Smo.BackupSet)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.Restore" /> class with specified destination database name and backup set.</summary>
      <param name="DestinationDatabaseName">The name of the database to be restored.</param>
      <param name="backupSet">The backup set.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Restore.Action">
      <summary>Gets or sets the type of restore to be performed. </summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Smo.RestoreActionType" /> object representing the type of restore to be performed.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Restore.ClearSuspectPageTable(Microsoft.SqlServer.Management.Smo.Server)">
      <summary>Deletes entries in the suspect page table.</summary>
      <param name="srv">The instance of SQL Server that is targeted by the restore operation.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Restore.ClearSuspectPageTableAfterRestore">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that determines whether entries in the suspect page table will be deleted following the restore operation. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether the suspect page table will be cleared.If True, the suspect page table is cleared following the restore operation. Otherwise, False (default).</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Restore.DatabasePages">
      <summary>Gets the list of the restore pages.</summary>
      <returns>The list of the restore pages.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Restore.FileNumber">
      <summary>Gets or sets the index number used to identify the targeted backup set on the backup medium.</summary>
      <returns>An <see cref="T:System.Int32" /> value that specifies the backup set index number.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Restore.KeepReplication">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> property value that specifies whether to maintain a replication configuration during a restore operation. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether to keep the replication configuration.If True, the replication configuration is kept in place.If False (default), the replication configuration is ignored by the restore operation.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Restore.Offset">
      <summary>Gets or sets the array of page addresses to be restored.</summary>
      <returns>An <see cref="T:System.Int64" /> array value that specifies the page addresses of the pages to be restored.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Restore.Partial">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> property value that specifies whether a partial or full restore operation will be performed. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether this is a full or partial restore operation.If True, the restore operation is a partial restore. Otherwise, False (default).</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Restore.ReadBackupHeader(Microsoft.SqlServer.Management.Smo.Server)">
      <summary>Reads the backup header and returns information about the media contents.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> object that specifies information about the media contents.</returns>
      <param name="srv">A <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object that represents the instance of SQL Server that provides access to the targeted media.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Restore.ReadFileList(Microsoft.SqlServer.Management.Smo.Server)">
      <summary>Returns the list of database files on the targeted media.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> object that specifies the list of database files.</returns>
      <param name="srv">A <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object that represents the instance of SQL Server that provides access to the targeted media.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Restore.ReadMediaHeader(Microsoft.SqlServer.Management.Smo.Server)">
      <summary>Reads the media header and returns the media header values. </summary>
      <returns>A <see cref="T:System.Data.DataTable" /> object that specifies the media header data.</returns>
      <param name="srv">A <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object that represents the instance of SQL Server that provides access to the targeted media.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Restore.ReadSuspectPageTable(Microsoft.SqlServer.Management.Smo.Server)">
      <summary>Returns the suspect page table for the targeted instance of SQL Server. </summary>
      <returns>A <see cref="T:System.Data.DataTable" /> object that specifies the suspect page table data.</returns>
      <param name="server">A <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object that represents the instance of SQL Server that is targeted by the restore operation. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Restore.RelocateFiles">
      <summary>Gets the array of database logical file names and operating system physical file names used to redirect database storage when a database is restored to a new physical location.</summary>
      <returns>An <see cref="T:System.ArrayList" /> object that specifies the file names.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Restore.ReplaceDatabase">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether a restore operation creates a new image of the restored database. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether a new image of the restored database will be created.If True, a new image of the database is created. The image is created regardless of the presence of an existing database with the same name.If False (default), a new image of the database is not created by the restore operation. The database that is targeted by the restore operation must exist on an instance of SQL Server.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Restore.RestrictedUser">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> property value that specifies whether access to the restored database is restricted to members of the db_owner fixed database role and the dbcreator and sysadmin fixed server roles. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether access to the restored database will be restricted.If True, access to the restored database is restricted to the db_owner fixed database role, and the dbcreator and sysadmin fixed server roles. Otherwise, False (default).</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Restore.Script(Microsoft.SqlServer.Management.Smo.Server)">
      <summary>Generates a Transact-SQL script that can be used to re-create the restore operation. </summary>
      <returns>A <see cref="T:System.Collections.Specialized.StringCollection" /> system object value that contains a list of Transact-SQL statements in the script. </returns>
      <param name="server">A <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object that represents the instance of SQL Server that is targeted by the restore operation.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Restore.SqlRestore(Microsoft.SqlServer.Management.Smo.Server)">
      <summary>Performs a restore operation on the specified server.</summary>
      <param name="srv">A <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object that represents the instance of SQL Server that is targeted by the restore operation.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Restore.SqlRestoreAsync(Microsoft.SqlServer.Management.Smo.Server)">
      <summary>Performs a restore operation asynchronously.</summary>
      <param name="srv">A <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object that represents the instance of SQL Server that is targeted by the restore operation.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Restore.SqlVerify(Microsoft.SqlServer.Management.Smo.Server)">
      <summary>Checks the media on the instance of SQL Server that is represented by the specified <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether targeted backup set is readable and complete.If True, the backup set was verified successfully. Otherwise, False.</returns>
      <param name="srv">A <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object that represents the instance of SQL Server that is targeted by the restore operation.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Restore.SqlVerify(Microsoft.SqlServer.Management.Smo.Server,System.Boolean)">
      <summary>Checks the media on instance of SQL Server that is represented by the specified <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object and loads backup history information into the history tables.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether targeted backup set is readable and complete.If True, the backup set was successfully verified. Otherwise, False.</returns>
      <param name="srv">A <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object that represents the instance of SQL Server that is targeted by the restore operation.</param>
      <param name="loadHistory">A <see cref="T:System.Boolean" /> value that specifies whether the history tables will be populated with pertinent backup information.If True, the history tables are populated. Otherwise, False.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Restore.SqlVerify(Microsoft.SqlServer.Management.Smo.Server,System.Boolean,System.String@)">
      <summary>Checks the media on the instance of SQL Server that is represented by the specified <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object, loads backup history information into the history tables, and returns an error message.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether targeted backup set is readable and complete.If True, the backup set was successfully verified. Otherwise, False.</returns>
      <param name="srv">A <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object that represents the instance of SQL Server that is targeted by the restore operation.</param>
      <param name="loadHistory">A <see cref="T:System.Boolean" /> value that specifies whether the history tables will be populated with pertinent backup information. If True, the history tables are populated. Otherwise, False.</param>
      <param name="errorMessage">A <see cref="T:System.String" /> value that contains the error message when the method has completed running. This is an output parameter.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Restore.SqlVerify(Microsoft.SqlServer.Management.Smo.Server,System.String@)">
      <summary>Checks the media on the instance of SQL Server that is represented by the specified <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object and returns an error message.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether targeted backup set is readable and complete.If True, the backup set was successfully verified. Otherwise, False.</returns>
      <param name="srv">A <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object that represents the instance of SQL Server that is targeted by the restore operation.</param>
      <param name="errorMessage">A <see cref="T:System.String" /> value that contains the error message when the method has completed running. This is an output parameter.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Restore.SqlVerifyAsync(Microsoft.SqlServer.Management.Smo.Server)">
      <summary>Checks the media on the instance of SQL Server that is represented by the specified <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object asynchronously. </summary>
      <param name="srv">A <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object that represents the instance of SQL Server that is targeted by the restore operation.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Restore.SqlVerifyAsync(Microsoft.SqlServer.Management.Smo.Server,System.Boolean)">
      <summary>Checks the media on the instance of SQL Server that is represented by the specified <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object asynchronously and loads backup history information into the history tables.</summary>
      <param name="srv">A <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object that represents the instance of SQL Server that is targeted by the restore operation.</param>
      <param name="loadHistory">A <see cref="T:System.Boolean" /> value that specifies whether the history tables will be populated with pertinent backup information.If True, the history tables are populated. Otherwise, False.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Restore.SqlVerifyLatest(Microsoft.SqlServer.Management.Smo.Server)">
      <summary>Verifies the most recent backup but does not restore it, and checks to see that the backup set is complete and the entire backup is readable.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether the targeted backup set is readable and complete.If True, the backup set was verified successfully. Otherwise, False.</returns>
      <param name="srv">A <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object that represents the instance of SQL Server that is targeted by the restore operation.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Restore.SqlVerifyLatest(Microsoft.SqlServer.Management.Smo.Server,Microsoft.SqlServer.Management.Smo.SqlVerifyAction)">
      <summary>Verifies the most recent backup with the specified action, and checks to see that the backup set is complete and the entire backup is readable.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether targeted backup set is readable and complete.If True, the backup set was successfully verified. Otherwise, False.</returns>
      <param name="srv">A <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object that represents the instance of SQL Server that is targeted by the restore operation.</param>
      <param name="sqlVerifyAction">A <see cref="T:Microsoft.SqlServer.Management.Smo.SqlVerifyAction" /> value that specifies the type of backup to verify.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Restore.SqlVerifyLatest(Microsoft.SqlServer.Management.Smo.Server,Microsoft.SqlServer.Management.Smo.SqlVerifyAction,System.String@)">
      <summary>Verifies the most recent backup with the specified action, checks to see that the backup set is complete and the entire backup is readable, and returns an error message.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether targeted backup set is readable and complete.If True, the backup set was successfully verified. Otherwise, False.</returns>
      <param name="srv">A <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object that represents the instance of SQL Server that is targeted by the restore operation.</param>
      <param name="sqlVerifyAction">A <see cref="T:Microsoft.SqlServer.Management.Smo.SqlVerifyAction" /> value that specifies the type of backup to verify.</param>
      <param name="errorMessage">A <see cref="T:System.String" /> value that contains the error message when the method has completed running. This is an output parameter.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Restore.SqlVerifyLatest(Microsoft.SqlServer.Management.Smo.Server,System.String@)">
      <summary>Verifies the most recent backup but does not restore it, checks to see that the backup set is complete and the entire backup is readable, and returns an error message.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether targeted backup set is readable and complete.If True, the backup set was successfully verified. Otherwise, False.</returns>
      <param name="srv">A <see cref="T:Microsoft.SqlServer.Management.Smo.Server" /> object that represents the instance of SQL Server that is targeted by the restore operation.</param>
      <param name="errorMessage">A <see cref="T:System.String" /> value that contains the error message when the method has completed running. This is an output parameter.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Restore.StandbyFile">
      <summary>Gets or sets the name of an undo file that is used as part of the imaging strategy for an instance of SQL Server.</summary>
      <returns>A <see cref="T:System.String" /> that specifies the name of the undo file.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Restore.StopAtMarkAfterDate">
      <summary>Gets or sets the date to be used in conjunction with the mark name specified by <see cref="P:Microsoft.SqlServer.Management.Smo.Restore.StopAtMarkName" /> to determine the stopping point of the recovery operation.</summary>
      <returns>A <see cref="T:System.String" /> that specifies the stop at date.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Restore.StopAtMarkName">
      <summary>Gets or sets the mark name to be used in conjunction with the date specified by <see cref="P:Microsoft.SqlServer.Management.Smo.Restore.StopAtMarkAfterDate" /> to determine the stopping point of the recovery operation.</summary>
      <returns>A <see cref="T:System.String" /> that specifies the mark name.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Restore.StopBeforeMarkAfterDate">
      <summary>Gets or sets the date to be used in conjunction with the mark name specified by <see cref="P:Microsoft.SqlServer.Management.Smo.Restore.StopBeforeMarkName" /> to determine the stopping point of the recovery operation.</summary>
      <returns>A <see cref="T:System.String" /> that specifies the stop before date.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Restore.StopBeforeMarkName">
      <summary>Gets or sets the mark name to be used in conjunction with the date specified by <see cref="P:Microsoft.SqlServer.Management.Smo.Restore.StopBeforeMarkAfterDate" /> to determine the stopping point of the recovery operation.</summary>
      <returns>A string that specifies the mark name.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Restore.ToPointInTime">
      <summary>Gets or sets the endpoint for database log restoration.</summary>
      <returns>A string that specifies the date and time values that identify the endpoint.</returns>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.Restore.VerifyComplete">
      <summary>Specifies the <see cref="T:Microsoft.SqlServer.Management.Smo.VerifyCompleteEventHandler" />.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.RestoreActionType">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.RestoreActionType" /> enumeration contains values that are used to specify the type of action that is required during a data restore operation.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.RestoreActionType.Database">
      <summary>Restore the database.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.RestoreActionType.Files">
      <summary>Restore one or more data files.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.RestoreActionType.OnlinePage">
      <summary>Restore a data page online while the database is still available to other users.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.RestoreActionType.OnlineFiles">
      <summary>Restore one or more data files while the database is still available to other users.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.RestoreActionType.Log">
      <summary>Restore the transaction log.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.RestoreOptions">
      <summary>Represents the restore options.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RestoreOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.RestoreOptions" /> class.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RestoreOptions.Blocksize">
      <summary>Specifies the physical block size, in bytes.</summary>
      <returns>the physical block size, in bytes.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RestoreOptions.BufferCount">
      <summary>Specifies the total number of I/O buffers to be used for the restore operation.</summary>
      <returns>The total number of I/O buffers to be used for the restore operation.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RestoreOptions.ClearSuspectPageTableAfterRestore">
      <summary>Gets or sets whether to delete entries in the suspect page table after restore.</summary>
      <returns>True if delete entries in the suspect page table after restore; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RestoreOptions.ContinueAfterError">
      <summary>Gets or sets whether the restore operation is to continue after an error is encountered.</summary>
      <returns>True if the restore operation is to continue after an error is encountered; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RestoreOptions.KeepReplication">
      <summary>Gets or sets whether to prevent replication settings from being removed when a database backup or log backup is restored on a warm standby server and the database is recovered.</summary>
      <returns>True when prevent replication settings from being removed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RestoreOptions.MaxTransferSize">
      <summary>Gets or sets the largest unit of transfer in bytes to be used between the backup media and SQL Server.</summary>
      <returns>The size of the max transfer.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RestoreOptions.PercentCompleteNotification">
      <summary>Gets or sets the percentage interval for PercentCompleteEventHandler event handler calls for individual Restore Operations.</summary>
      <returns>The percent complete notification.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RestoreOptions.RecoveryState">
      <summary>Gets or sets the recovery state.</summary>
      <returns>The database restore option.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RestoreOptions.ReplaceDatabase">
      <summary>Gets or sets SQL Server should create the specified database and its related files even if another database already exists with the same name</summary>
      <returns>True if the SQL Server should create the specified database; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RestoreOptions.SetRestrictedUser">
      <summary>Gets or sets whether to restrict access for the newly restored database to members of the db_owner, dbcreator, or sysadmin roles.</summary>
      <returns>True if restrict access for the newly restored database to members of the db_owner, dbcreator, or sysadmin roles; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RestoreOptions.StandByFile">
      <summary>Undo uncommitted transactions, but save the undo actions in a standby file that allows the recovery effects to be reversed.</summary>
      <returns>The recovery with stand by file.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.RestorePlan">
      <summary>Represents a sequence of Database Restore operations which will recover a database to a particular state in a point in time.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RestorePlan.#ctor(Microsoft.SqlServer.Management.Smo.Database)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.RestorePlan" /> class with specified database.</summary>
      <param name="database">The database.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RestorePlan.#ctor(Microsoft.SqlServer.Management.Smo.Server)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.RestorePlan" /> class with specified server.</summary>
      <param name="server">The server.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RestorePlan.#ctor(Microsoft.SqlServer.Management.Smo.Server,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.RestorePlan" /> class with specified server and database name.</summary>
      <param name="server">The server.</param>
      <param name="databaseName">The name of the database.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RestorePlan.AddRestoreOperation(Microsoft.SqlServer.Management.Smo.BackupSet)">
      <summary>Adds the restore operation with specified backup set to be restored.</summary>
      <param name="backupSet">The backup set to be restored</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RestorePlan.AddRestoreOperation(System.Collections.Generic.List{Microsoft.SqlServer.Management.Smo.BackupSet})">
      <summary>Adds the restore operations with specified backup sets..</summary>
      <param name="backupSets">The backup sets.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RestorePlan.AsyncStatus">
      <summary>Gets the status of most recent asynchronous operation including possible errors.</summary>
      <returns>The async status.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RestorePlan.CloseExistingConnections">
      <summary>Gets or sets a value indicating whether to close existing connections.</summary>
      <returns>True if close existing connections; otherwise, false.</returns>
    </member>
    <member name="E:Microsoft.SqlServer.Management.Smo.RestorePlan.Complete">
      <summary>Occurs when the restore plan is completed.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RestorePlan.DatabaseName">
      <summary>Gets or sets the name of the database.</summary>
      <returns>The name of the database.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RestorePlan.Execute">
      <summary>Verifies and executes the Restore Plan.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RestorePlan.ExecuteAsync">
      <summary>Verifies and executes the Restore Plan async.</summary>
    </member>
    <member name="E:Microsoft.SqlServer.Management.Smo.RestorePlan.Information">
      <summary>Occurs when the server sends information.</summary>
    </member>
    <member name="E:Microsoft.SqlServer.Management.Smo.RestorePlan.NextMedia">
      <summary>Occurs when the next media needs to be loaded.</summary>
    </member>
    <member name="E:Microsoft.SqlServer.Management.Smo.RestorePlan.NextRestore">
      <summary>Occurs when the next restore occurs.</summary>
    </member>
    <member name="E:Microsoft.SqlServer.Management.Smo.RestorePlan.PercentComplete">
      <summary>Occurs when the server sends percent complete information.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RestorePlan.RestoreAction">
      <summary>Gets and sets the type of the Restore action: Database,File,Log,Page.</summary>
      <returns>The restore action.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RestorePlan.RestoreOperations">
      <summary>Gets or sets the restore operations.</summary>
      <returns>The restore operations.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RestorePlan.Script">
      <summary>Verifies the Restore plan and scripts the operation.</summary>
      <returns>The string collection of the T-SQL script for the operation.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RestorePlan.Server">
      <summary>Gets or sets the erver where the Restore plan executes.</summary>
      <returns>The server.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RestorePlan.SetRestoreOptions(Microsoft.SqlServer.Management.Smo.RestoreOptions)">
      <summary>Sets the restore options.</summary>
      <param name="restoreOptions">The restore options</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RestorePlan.TailLogBackupOperation">
      <summary>Gets or sets the tail log backup operation.</summary>
      <returns>The tail log backup operation.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RestorePlan.Verify(System.Boolean)">
      <summary>Verifies the restore plan.</summary>
      <param name="checkBackupMediaIntegrity">True if check backup media integrity; otherwise, false.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.SqlServerRegistrations">
      <summary>Represents registered instances of SQL Server.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.SqlServerRegistrations.#ctor">
      <summary>Represents registered instances of SQL Server.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.SqlServerRegistrations.EnumRegisteredServers">
      <summary>Returns an array of servers.</summary>
      <returns>An array of <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> objects.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.SqlServerRegistrations.Refresh">
      <summary>Refreshes registered server collection.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.SqlServerRegistrations.RegisteredServers">
      <summary>Gets a collection of registered servers.</summary>
      <returns>The collection of registered servers.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.SqlServerRegistrations.ServerGroups">
      <summary>Gets a group of registered servers.</summary>
      <returns>A group of registered servers.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.SqlVerifyAction">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.SqlVerifyAction" /> enumeration contains values that are used to specify the type of backup verification.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.SqlVerifyAction.VerifyDatabase">
      <summary>Value = 0. Verifies the latest database backup.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.SqlVerifyAction.VerifyLog">
      <summary>Value = 1. Verifies the latest log backup.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.SqlVerifyAction.VerifyFile">
      <summary>Value = 2. Verifies the latest file or filegroup backup.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.SqlVerifyAction.VerifyIncremental">
      <summary>Value = 3. Verifies the latest incremental backup.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.SuspectPage">
      <summary>Represents the database page used for Page Restore.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.SuspectPage.#ctor(System.Int32,System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.SuspectPage" /> class with the specified file identifier and page identifier.</summary>
      <param name="fileID">The file identifier.</param>
      <param name="pageID">The page identifier.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.SuspectPage.CompareTo(Microsoft.SqlServer.Management.Smo.SuspectPage)">
      <summary>Compares to other SuspectPage.</summary>
      <returns>The value of the object specified by the CompareTo method.</returns>
      <param name="other">The other SuspectPage.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.SuspectPage.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the instance.</summary>
      <returns>True if the specified object is equal to the instance; otherwise, false.</returns>
      <param name="obj">The object to compare with the instance.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.SuspectPage.FileID">
      <summary>Gets or sets the file identifier.</summary>
      <returns>The file identifier.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.SuspectPage.GetHashCode">
      <summary>Returns a hash code for the instance.</summary>
      <returns>A hash code for the instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.SuspectPage.PageID">
      <summary>Gets or sets the page identifier.</summary>
      <returns>The page identifier.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.SuspectPage.ToString">
      <summary>Returns a string that represents the instance.</summary>
      <returns>A string that represents the instance.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.Transfer">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.Transfer" /> object is a tool object that provides programmatic control over copying of schemas and data to other instances of SQL Server. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Transfer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.Transfer" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Transfer.#ctor(Microsoft.SqlServer.Management.Smo.Database)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.Transfer" /> class that uses the specified database as the source of the transfer operation.</summary>
      <param name="database">A <see cref="T:Microsoft.SqlServer.Management.Smo.Database" /> object that specifies the database that is the source of the transfer operation. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Transfer.BatchSize">
      <summary>Gets or sets the batch size property.</summary>
      <returns>The batch size property.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Transfer.BulkCopyTimeout">
      <summary>Gets or sets the operation to complete before it times out.</summary>
      <returns>The operation to complete before it times out.</returns>
    </member>
    <member name="E:Microsoft.SqlServer.Management.Smo.Transfer.DataTransferEvent">
      <summary>Reports that data has been transferred.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Transfer.GetTransferProvider">
      <summary>For internal use only. Throws a System.NotSupportedException if invoked by a caller.</summary>
      <returns>An <see cref="T:Microsoft.SqlServer.Management.Common.IDataTransferProvider" /> object that specifies the data transfer provider interface.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Transfer.Microsoft#SqlServer#Management#Common#ITransferMetadataProvider#GetOptions">
      <summary>The ITransferMetadataProvider class represents an interface that implements the transfer metadata process on the referenced connection.</summary>
      <returns>
        <see cref="T:System.Collections.SortedList" /> representing a collection of key/value pairs that are sorted by the keys and are accessible by key and by index</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Transfer.Microsoft#SqlServer#Management#Common#ITransferMetadataProvider#SaveMetadata">
      <summary>Saves metadata when transferring databases across instances.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Transfer.ProcessDependencyChain(Microsoft.SqlServer.Management.Smo.Server,Microsoft.SqlServer.Management.Sdk.Sfc.DependencyChainCollection,System.Boolean,System.Boolean)">
      <summary>Returns a URN array with options.</summary>
      <returns>A URN array.</returns>
      <param name="server">The server </param>
      <param name="dependencyChain">The dependency chain.</param>
      <param name="isDataOnly">True if data only; otherwise, false.</param>
      <param name="isCreateOrder">True if create order; false.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.Transfer.TemporaryPackageDirectory">
      <summary>For internal use only. The value of this property is ignored if set by a caller.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the file location for storage of temporary packages created during the transfer operation.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.Transfer.TransferData">
      <summary>Transfers data as specified by the <see cref="T:Microsoft.SqlServer.Management.Smo.Transfer" /> object.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.TransferBase">
      <summary>Represents the base class for transfer.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.TransferBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.TransferBase" /> class.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.TransferBase.#ctor(Microsoft.SqlServer.Management.Smo.Database)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.TransferBase" /> class that uses the specified database as the source of the transfer operation.</summary>
      <param name="database">The database that is the source of the transfer operation.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyAllDatabaseTriggers">
      <summary>Gets or sets a value that indicates whether all the SQL Server database triggers are copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all SQL Server database triggers are copied from the source database to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyAllDefaults">
      <summary>Gets or sets a value that indicates whether all the SQL Server defaults are copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all SQL Server defaults are copied from the source database to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyAllFullTextCatalogs">
      <summary>Gets or sets a value that indicates whether all the SQL Server full-text catalogs are copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all the SQL Server full-text catalogs are copied from the source database to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyAllFullTextStopLists">
      <summary>Gets or sets a value that indicates whether all the SQL Server full-text stop lists are copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all SQL Server partition functions are copied from the full-text stop lists to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyAllLogins">
      <summary>Gets or sets a value that indicates whether all the SQL Server logins are copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all SQL Server logins are copied from the source database to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyAllObjects">
      <summary>Gets or sets a value that indicates whether all the SQL Server objects are copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all SQL Server objects are copied from the source database to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyAllPartitionFunctions">
      <summary>Gets or sets a value that indicates whether all the SQL Server partition functions are copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all SQL Server partition functions are copied from the source database to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyAllPartitionSchemes">
      <summary>Gets or sets a value that indicates whether all the SQL Server partition schemes are copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all SQL Server partition schemes are copied from the source database to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyAllPlanGuides">
      <summary>Gets or sets a value that indicates whether all the SQL Server plan guides are copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all SQL Server plan guides are copied from the source database to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyAllRoles">
      <summary>Gets or sets a value that indicates whether all the SQL Server roles are copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all SQL Server roles are copied from the source database to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyAllRules">
      <summary>Gets or sets a value that indicates whether all the SQL Server rules are copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all SQL Server rules are copied from the source database to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyAllSchemas">
      <summary>Gets or sets a value that indicates whether all the SQL Server schemas are copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all SQL Server schemas are copied from the source database to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyAllSearchPropertyLists">
      <summary>Gets or sets a value that indicates whether all the SQL Server search property lists are copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all SQL Server search property lists are copied from the source database to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyAllSequences">
      <summary>Gets or sets a value that indicates whether all the SQL Server sequences are copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all SQL Server sequences are copied from the source database to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyAllSqlAssemblies">
      <summary>Gets or sets a value that indicates whether all the SQL Server assemblies are copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all SQL Server assemblies are copied from the source database to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyAllStoredProcedures">
      <summary>Gets or sets a value that indicates whether all the SQL Server stored procedures are copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all SQL Server stored procedures are copied from the source database to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyAllSynonyms">
      <summary>Gets or sets a value that indicates whether all the SQL Server synonyms are copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all SQL Server synonyms are copied from the source database to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyAllTables">
      <summary>Gets or sets a value that indicates whether all the SQL Server tables are copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all SQL Server tables are copied from the source database to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyAllUserDefinedAggregates">
      <summary>Gets or sets a value that indicates whether all the SQL Server user-defined aggregates are copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all SQL Server user-defined aggregates are copied from the source database to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyAllUserDefinedDataTypes">
      <summary>Gets or sets a value that indicates whether all the SQL Server user-defined data types are copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all the SQL Server user-defined data types are copied from the source database to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyAllUserDefinedFunctions">
      <summary>Gets or sets a value that indicates whether all the SQL Server user-defined functions are copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all SQL Server user-defined functions are copied from the source database to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyAllUserDefinedTableTypes">
      <summary>Gets or sets a value that indicates whether all the SQL Server user-defined table types are copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all SQL Server user-defined table types are copied from the source database to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyAllUserDefinedTypes">
      <summary>Gets or sets a value that indicates whether all the SQL Server user-defined types are copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all the SQL Server user-defined types are copied from the source database to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyAllUsers">
      <summary>Gets or sets a value that indicates whether all the SQL Server database users are copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all SQL Server database users are copied from the source database to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyAllViews">
      <summary>Gets or sets a value that indicates whether all the SQL Server views are copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all SQL Server views are copied from the source database to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyAllXmlSchemaCollections">
      <summary>Gets or sets a value that indicates whether all the SQL Server XML schema collections are copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all the SQL Server XML schema collections are copied from the source database to the target database; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopyData">
      <summary>Gets or sets a value that indicates whether all the data is copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if all the data is copied from the source database to the target database in the transfer operation; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CopySchema">
      <summary>Gets or sets a value that indicates whether the schema is copied from the source database to the target database in the transfer operation.</summary>
      <returns>true if the schema is copied from the source database to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.CreateTargetDatabase">
      <summary>Gets or sets a value that indicates whether the target database is created in the transfer operation.</summary>
      <returns>true if the target database is created in the transfer operation; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.Database">
      <summary>Gets or sets the database from which schema or data is to be transferred to the target location.</summary>
      <returns>The database from which schema or data is to be transferred to the target location.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.DatabaseFileMappings">
      <summary>Gets or sets the properties that are associated with flat file destination based on a dictionary.</summary>
      <returns>The properties that are associated with flat file destination based on a dictionary.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.DestinationDatabase">
      <summary>Gets or sets the database that is the destination of the transfer operation.</summary>
      <returns>The database that is the destination of the transfer operation.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.DestinationLogin">
      <summary>Gets or sets the logon for the instance of SQL Server to which the destination database belongs.</summary>
      <returns>The logon for the instance of SQL Server to which the destination database belongs.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.DestinationLoginSecure">
      <summary>Gets or sets a value that indicates whether the instance of SQL Server that contains the destination database is enabled for Windows Authentication or not.</summary>
      <returns>true if the destination instance of SQL Server requires Windows Authentication; false if the destination instance of SQL Server requires SQL Server Authentication. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.DestinationPassword">
      <summary>Gets or sets the logon password for the instance of SQL Server to which the destination database belongs.</summary>
      <returns>The logon password for the instance of SQL Server to which the destination database belongs.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.DestinationServer">
      <summary>Gets or sets the instance of SQL Server that owns the database that is the destination of the transfer operation.</summary>
      <returns>The instance of SQL Server that owns the database that is the destination of the transfer operation.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.DestinationTranslateChar">
      <summary>Gets or sets a value that indicates whether the transfer operation translates the code page for characters on the destination database.</summary>
      <returns>true if the transfer operation translates the code page for characters on the destination database; otherwise, false. The default is false.</returns>
    </member>
    <member name="E:Microsoft.SqlServer.Management.Smo.TransferBase.DiscoveryProgress">
      <summary>Marks the progress of the discovery process.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.DropDestinationObjectsFirst">
      <summary>Gets or sets a value that indicates whether to drop the objects in the destination database before the transfer operation.</summary>
      <returns>true if the objects in the destination database are dropped before the transfer operation; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.TransferBase.EnumObjects">
      <summary>Returns an enumerated list of Uniform Resource Name (URN) values that represent the objects included in the transfer operation.</summary>
      <returns>The URN values that represent the objects included in the transfer operation.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.TransferBase.EnumScriptTransfer">
      <summary>Creates a Transact-SQL command batch script used to transfer database objects or database objects and data to another database instance.</summary>
      <returns>An IEnumerable string list interface that contains the script.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.ObjectList">
      <summary>Gets or sets the objects copied from the source to destination in the transfer operation.</summary>
      <returns>The objects to be copied in the transfer operation.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.Options">
      <summary>Gets or sets the options for the transfer operation.</summary>
      <returns>The options for the transfer operation.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.PrefetchObjects">
      <summary>Gets or sets a value that indicates whether to prefetch the objects before the transfer operation.</summary>
      <returns>true if the objects are prefetched; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.PreserveDbo">
      <summary>Gets or sets a value that indicates whether DBO ownerships are retained through the transfer process.</summary>
      <returns>true if SQL Server DBO ownerships are copied from the source database to the target database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.PreserveLogins">
      <summary>Gets or sets a value that indicates whether to preserve logins in the transfer operation.</summary>
      <returns>true if the logins are preserved; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.Scripter">
      <summary>Gets the scripter for the transfer operation.</summary>
      <returns>The scripter for the transfer operation.</returns>
    </member>
    <member name="E:Microsoft.SqlServer.Management.Smo.TransferBase.ScriptingError">
      <summary>Reports that an error occurred during the scripting process.</summary>
    </member>
    <member name="E:Microsoft.SqlServer.Management.Smo.TransferBase.ScriptingProgress">
      <summary>Marks the progress of the scripting process.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.TransferBase.ScriptTransfer">
      <summary>Creates a Transact-SQL command batch script that creates database objects that are transferred by the transfer operation.</summary>
      <returns>The Transact-SQL script for transfer operation.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.TransferBase.SetTargetServerInfo">
      <summary>Sets the target server version based on the SQL Server version.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.SourceTranslateChar">
      <summary>Gets or sets a value that indicates whether the transfer operation translates the code page for characters on the source database.</summary>
      <returns>true if the transfer operation translates the code page for characters on the source database; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.TargetDatabaseFilePath">
      <summary>Gets or sets the path to where the database files will be copied.</summary>
      <returns>The path to where the database files will be copied.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.TargetLogFilePath">
      <summary>Gets or sets the path to where the log files will be copied.</summary>
      <returns>The path to where the log files will be copied.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.TransferBase.UseDestinationTransaction">
      <summary>Gets or sets a value that indicates whether to use the destination transaction.</summary>
      <returns>true if the destination transaction is used; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.VerifyCompleteEventArgs">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.VerifyCompleteEventArgs" /> object provides programmatic access to the arguments used to report the details of the event that occurs when a backup verification operation completes. </summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.VerifyCompleteEventArgs.VerifySuccess">
      <summary>Gets the <see cref="T:System.Boolean" /> property that specifies whether the verification operation was successful.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the verification operation was successful.If True, the verification operation was successful.If False (default), the verification operation was unsuccessful.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.VerifyCompleteEventHandler">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.VerifyCompleteEventHandler" /> class represents the event handler that handles completion events.</summary>
      <param name="sender">An <see cref="T:System.Object" /> value that specifies the source of the event.</param>
      <param name="args">An <see cref="T:Microsoft.SqlServer.Management.Smo.VerifyCompleteEventArgs" /> object that contains the event data. </param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> object represents a SQL Server registered server.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> object.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer.#ctor(Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServerCollection,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> object.</summary>
      <param name="regServers">The T: <see cref="Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServerCollection" /> to which the new registered server should be added.</param>
      <param name="name">A <see cref="T:System.String" /> value that specifies the name of the registered server.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer.#ctor(Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> object.</summary>
      <param name="serverGroup">The T: <see cref="Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> to which the new registered server should be added.</param>
      <param name="name">A <see cref="T:System.String" /> value that specifies the name of the registered server.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> object.</summary>
      <param name="name">A <see cref="T:System.String" /> value that specifies the name of the registered server.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer.Alter">
      <summary>Updates any <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> object property changes on the instance of SQL Server. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer.Create">
      <summary>Creates a registered server on the instance of SQL Server as defined by the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> object.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer.Description">
      <summary>Gets or sets a textual description of the referenced registered server.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the textual description of the reference registered server.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer.Drop">
      <summary>Removes the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> from the server group and the registered server collection.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer.GetSmoObject(Microsoft.SqlServer.Management.Sdk.Sfc.Urn)">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrSmoObject" /> that is specified by a URN.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrSmoObject" /> that is specified by a URN.</returns>
      <param name="urn">A Microsoft.SqlServer.Management.Sdk.Sfc.Urn that identifies the object to get.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer.Login">
      <summary>Gets or sets the login used to establish a connection with the registered server. </summary>
      <returns>A <see cref="T:System.String" /> value that specifies the used to establish a connection with the registered server.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer.LoginSecure">
      <summary>Gets or sets the <see cref="T:System.Boolean" /> property value that specifies whether the connection is authenticated by Windows Authentication. </summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the connection is authenticated by Windows Authentication.If True (default), the connection is authenticated by Windows Authentication.If False, the connection is authenticated by using SQL Server standard authentication.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer.Parent">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> object value that specifies the parent of the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> object. </summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> object that is the parent of the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> object. </returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer.SecurePassword">
      <summary>Gets or sets the password used with SQL Server standard authentication to establish a connection to the registered server. </summary>
      <returns>A <see cref="T:System.Security.SecureString" /> value that specifies the secure string password that is used to connect by using SQL Server standard authentication.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer.ServerInstance">
      <summary>Gets or sets the instance of SQL Server that is the registered server. </summary>
      <returns>A <see cref="T:System.String" /> value that specifies the instance of SQL Server that is the registered server.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer.Urn">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Management.Smo.Urn" /> object value that represents the referenced registered server. </summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Smo.Urn" /> object value that represents the referenced registered server.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServerCollection">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServerCollection" /> class represents a collection of <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> objects that represent all the registered servers on the registered server group. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServerCollection.Add(Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer)">
      <summary>Adds a <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> object to the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServerCollection" /> collection.</summary>
      <param name="registeredServer">A <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> object that is to be added to the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServerCollection" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServerCollection.Contains(System.String)">
      <summary>Determines whether the specified string value exists within the collection.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the string value exists within the collection.If True, the string value exists within the collection; otherwise False.</returns>
      <param name="key">A <see cref="T:System.String" /> value that specifies a value for which the existence within the collection is being determined.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServerCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the collection of objects to a one-dimensional array starting at the specified index value.</summary>
      <param name="array">An array of <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> objects.</param>
      <param name="index">An <see cref="T:System.Int32" /> value that specifies the index value in the collection to start copying. </param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServerCollection.Count">
      <summary>Gets the number of <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> objects in the collection.</summary>
      <returns>An <see cref="T:System.Int32" /> value that specifies the number of <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> objects in the collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServerCollection.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> interface that allows you to iterate through the objects in the collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> system interface for the referenced collection object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServerCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> object in the collection by index number.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> object value that represents the registered server.</returns>
      <param name="index">An <see cref="T:System.Int32" /> value that specifies the position of the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> object in the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServerCollection" /> collection.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServerCollection.Item(System.String)">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> object in the collection by name.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> object value that represents the registered server.</returns>
      <param name="name">A <see cref="T:System.String" /> value that specifies the name of the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> object in the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServerCollection" /> collection.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServerCollection.Parent">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> object that is the parent of the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServerCollection" /> object.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> object that is the parent of the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServerCollection" /> object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServerCollection.Remove(System.String)">
      <summary>Removes a <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> object from the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServerCollection" /> object.</summary>
      <param name="key">A <see cref="T:System.String" /> value that specifies the name of the registered server that is to be removed from the collection.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrCollectionBase">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrCollectionBase" /> class is a base class used in the construction of the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServerCollection" /> object.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrCollectionBase.initialized">
      <summary>Gets a <see cref="T:System.Boolean" /> value indicating the collection is initialized.If True, collection is initialized. If False the collection is not initialized.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrCollectionBase.innerColl">
      <summary>The sort list which contains the underlying collection of registered servers.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrCollectionBase.IsSynchronized">
      <summary>Gets a <see cref="T:System.Boolean" /> value indicating whether access to the collection is synchronized and therefore thread-safe.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the access to the collection is synchronized.If True, access to the collection is synchronized. If False (default), access to the collection is not synchronized.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrCollectionBase.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection.</summary>
      <returns>An <see cref="T:System.Object" /> value that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrSmoObject">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrSmoObject" /> class is a class used in the construction Microsoft SQL Server registered server objects.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrSmoObject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrSmoObject" /> object.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrSmoObject.#ctor(Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrCollectionBase,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrSmoObject" /> object based on the specified parent column and name.</summary>
      <param name="parentColl">A <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrCollectionBase" /> object that specifies the parent object.</param>
      <param name="name">A <see cref="T:System.String" /> value that specifies the name of the object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrSmoObject.CheckObjectState">
      <summary>Checks the state of the object.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrSmoObject.ImplInitialize(System.String[],Microsoft.SqlServer.Management.Sdk.Sfc.OrderBy[])">
      <summary>Initializes the object.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the object was initialized successfully.If True, the object initialized successfully.If False, the object failed to initialize.</returns>
      <param name="fields">A <see cref="T:System.String" /> array.</param>
      <param name="orderby">An OrderBy object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrSmoObject.Initialize">
      <summary>Initializes the object.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the object was initialized successfully.If True, the object initialized successfully.If False, the object failed to initialize.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrSmoObject.IsObjectInitialized">
      <summary>Gets a <see cref="T:System.Boolean" /> value that specifies whether the object was initialized.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the object was initialized. Otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrSmoObject.Name">
      <summary>Gets or sets the name of the object. </summary>
      <returns>A <see cref="T:System.String" /> value that specifies the name for the object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrSmoObject.Properties">
      <summary>Gets the properties associated with the object. </summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Smo.PropertyCollection" /> object value that specifies the properties of the object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrSmoObject.Refresh">
      <summary>Refreshes the properties of the object.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrSmoObject.SetParentImpl(Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrSmoObject)">
      <summary>Sets a parent.</summary>
      <param name="newParent">A RegSvrSmoObject.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrSmoObject.Trace(System.String)">
      <summary>Sets a trace text.</summary>
      <param name="traceText">A <see cref="T:System.String" /> value specifying the trace text.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrSmoObject.UpdateObjectState">
      <summary>Gets the updated object state.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrSmoObject.Urn">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Management.Smo.Urn" /> object that represents the object. </summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Smo.Urn" /> object value that represents the object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrSmoObject.UrnSkeleton">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Management.Smo.Urn" /> object that represents the object. </summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Smo.Urn" /> object value that represents the object.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> object represents a group of Microsoft SQL Server registered servers.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> object.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup.#ctor(Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> object based on the specified server group and with the specified name.</summary>
      <param name="serverGroup">A <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> object value that specifies the server group on which to base the new server group.</param>
      <param name="name">A <see cref="T:System.String" /> value that specifies the name of the server group.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> object that has the specified name.</summary>
      <param name="name">A <see cref="T:System.String" /> value that specifies the name of the server group.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup.Description">
      <summary>Gets or sets the textual description of the referenced group of registered servers. </summary>
      <returns>A <see cref="T:System.String" /> value that contains the textual description of the server group.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup.Parent">
      <summary>Gets or sets the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> object that is the parent of the referenced <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> object.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> object that is the parent of the referenced <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> object. </returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup.Path">
      <summary>Gets the path of the referenced server group.</summary>
      <returns>A <see cref="T:System.String" /> value that specifies the path of the referenced server group.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup.ServerType">
      <summary>Gets the <see cref="T:System.Guid" /> object value that specifies the type of server associated with the server group.</summary>
      <returns>A <see cref="T:System.Guid" /> system object value that specifies the type of server associated with the server group.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup.Urn">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Management.Smo.Urn" /> object value that represents the server group.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Smo.Urn" /> object value that represents the server group.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupBase">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupBase" /> class is a base class that is used in the construction of the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> class, which represents a group of Microsoft SQL Server registered servers.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupBase.Alter">
      <summary>Updates any <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupBase" /> object property changes on the instance of Microsoft SQL Server.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupBase.ClearCollections">
      <summary>Clears the server group collections.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupBase.Create">
      <summary>Creates a server group on the instance of Microsoft SQL Server as defined by the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupBase" /> object.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupBase.Drop">
      <summary>Removes the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupBase" /> from the parent server group.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupBase.GetSmoObject(Microsoft.SqlServer.Management.Sdk.Sfc.Urn)">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrSmoObject" /> that is specified by a URN.</summary>
      <returns>The <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegSvrSmoObject" /> that is specified by a URN.</returns>
      <param name="urn">A Microsoft.SqlServer.Management.Sdk.Sfc.Urn that identifies the object to get.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupBase.RegisteredServers">
      <summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> objects. Each <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> object represents a registered server that is included in the parent server group.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServerCollection" /> object that represents all the registered servers that are included in the parent server group. </returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupBase.ServerGroups">
      <summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> objects. Each <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> object represents a server group that is included in the parent server group.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupCollection" /> object that represents all the server groups that are included in the parent server group. </returns>
    </member>
    <member name="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupCollection">
      <summary>The <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupCollection" /> class represents a collection of <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> objects that represent all the server groups on the server group. </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupCollection.Add(Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup)">
      <summary>Adds a <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> object to the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupCollection" /> collection.</summary>
      <param name="registeredServer">A <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> object that is to be added to the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupCollection" /> object.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupCollection.Contains(System.String)">
      <summary>Determines whether the specified string value exists within the collection.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that specifies whether the string value exists within the collection.If True, the string value exists within the collection.If False, the string value does not exist within the collection.</returns>
      <param name="key">A <see cref="T:System.String" /> value that specifies a value for which the existence within the collection is being determined.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the collection objects to a one-dimensional array beginning at the index value specified.</summary>
      <param name="array">An array of <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.RegisteredServer" /> objects.</param>
      <param name="index">An <see cref="T:System." />
                    Int32
                   value that specifies the index position to start the copy.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupCollection.Count">
      <summary>Gets the number of objects in the referenced collection.</summary>
      <returns>An <see cref="T:System.Int32" /> value that specifies the number of objects in the referenced collection.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupCollection.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> interface that lets you iterate through the objects in the collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> system interface for the referenced collection object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> object in the collection by index number.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> object value that represents the server group.</returns>
      <param name="index">An <see cref="T:System.Int32" /> value that specifies the position of the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> object in the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupCollection" /> collection.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupCollection.Item(System.String)">
      <summary>Gets a <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> object in the collection by name.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> object value that represents the server group.</returns>
      <param name="name">A <see cref="T:System.String" /> value that specifies the name of the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> object in the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupCollection" /> collection.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupCollection.Parent">
      <summary>Gets the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> object that is the parent of the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupCollection" /> object.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> object that is the parent of the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupCollection" /> object.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupCollection.Remove(System.String)">
      <summary>Removes a <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroup" /> object from the <see cref="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupCollection" /> object.</summary>
      <param name="key">A <see cref="T:System.String" /> value that specifies the name of the server group that is to be removed from the collection.</param>
    </member>
  </members>
</doc>